// Code generated by go-bindata.
// sources:
// NAME-service/NAME-cli-client/client_main.gotemplate
// NAME-service/NAME-server/server_main.gotemplate
// NAME-service/generated/cli/handlers/client_handler.gotemplate
// NAME-service/generated/client/grpc/client.gotemplate
// NAME-service/generated/client/http/client.gotemplate
// NAME-service/generated/endpoints.gotemplate
// NAME-service/generated/transport_grpc.gotemplate
// NAME-service/generated/transport_http.gotemplate
// NAME-service/handlers/server/hooks.gotemplate
// NAME-service/handlers/server/server_handler.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameServiceNameCliClientClient_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\x6f\x6f\xdb\xb6\x13\x7e\x2d\x7e\x8a\xab\xd0\x00\xd2\x0f\x2e\xdd\xf6\xb7\xbd\x11\xe6\x17\x6d\xda\xae\x05\xb6\x2e\x88\x33\xf4\x45\x57\x0c\x34\x75\x92\xb8\x4a\xa4\x46\xd2\x4e\x0a\x41\xdf\x7d\x38\x52\x56\xec\xc6\x59\x10\x2c\x40\x62\xe7\x7c\xf7\xdc\x73\xcf\xfd\x91\x7b\x21\xbf\x8a\x1a\xa1\x13\x4a\x33\xa6\xba\xde\x58\x0f\x19\x4b\x52\xd4\xd2\x94\x4a\xd7\xcb\xbf\x9c\xd1\x29\x4b\xd2\xaa\x15\x75\x78\xed\x3c\xbd\x18\x47\x7f\x9d\xb7\xd2\xe8\xdd\xf4\x56\xe9\x3a\x58\xbd\xea\x30\x65\x2c\x49\x6b\xd3\x0a\x5d\x73\x63\xeb\xe5\xcd\x52\xa3\x5f\x4a\xa3\x3d\xde\x04\x80\xda\x98\xba\x45\x7e\xe0\x52\xdb\x5e\xc6\x30\xe5\x9b\xed\x86\x4b\xd3\x2d\xfb\xaf\xf5\x12\xad\x35\xd6\xd1\x27\xcb\x25\x5c\x35\xca\xc1\x1a\xed\x4e\x49\x64\x89\x6c\x15\x6a\xff\x5e\xe8\xb2\x45\x0b\xe9\x30\xf0\x0f\xa1\x84\x0b\xe1\x1b\x78\x36\x8e\xb0\xac\x51\xa3\x15\x1e\xcb\xa5\x6c\xd5\xb2\x89\x9e\xc4\x92\xb2\xc5\xf0\x87\xe3\x50\xfb\x89\x5d\xd2\x78\xdf\x3f\x26\x8c\xfc\x53\x96\xf4\x9b\xe0\x7e\xf1\xfa\x38\x20\x65\x39\x63\x3b\x61\x49\xf2\x3f\x61\x05\x93\x9e\xfc\x42\x58\x87\x1f\xb4\x9f\xad\x24\x2d\x5f\xf7\xad\x9a\x4c\xd4\x15\x7e\x6e\xba\x5e\xc8\xc9\x12\x55\xe2\x9f\xac\xe8\xab\x68\xe9\x37\xfc\x12\x6b\xe5\x3c\xda\x61\xe0\x93\x66\xfc\xa3\xe8\x70\x1c\xe9\x3f\xb4\x94\x9d\x55\x5b\x2d\x43\xff\xb3\x1c\x86\x49\x63\x04\x51\x96\xb2\x55\xd0\x5b\x74\xdb\x0e\x1d\x68\x03\x2e\x22\x40\xa9\x9c\x34\x3b\xb4\xdf\xc0\x7d\x73\x1e\xbb\x05\x08\x5d\x02\xde\xf4\x28\xbd\x83\xad\x43\xeb\xc0\x9b\x80\xd4\x5b\xb3\x53\x25\x82\x6f\x28\xcc\xa2\xf4\x04\x6c\xd1\x39\x30\x15\x08\xbd\xc7\xe4\xb1\xaf\x31\x5b\xef\x95\xd1\xa0\x1c\x58\xac\x5a\x94\x1e\x4b\x50\x3a\xc0\x11\x0c\xb1\xda\x28\x2d\xec\xb7\x90\x96\x4c\x93\x99\x7a\x32\xcd\xb3\x2b\x82\xf1\x99\xb7\x42\x3b\x12\x9c\x53\x5a\xa0\x19\x76\x01\x89\x42\x77\xc2\x2a\xb3\x75\xfb\x50\x69\xb4\xf3\x76\x2b\xbd\xb1\x0e\x36\xc6\x37\x53\x49\xd0\x18\xe7\x8b\xb0\x18\xfb\x46\x30\x96\x0c\x03\x58\xa1\x6b\x84\xa7\x1d\xfa\x66\x01\x4f\x85\xad\x1d\x14\x2b\xe0\xe7\x01\xee\x95\xad\x1d\xff\x15\x7d\x43\x6f\x60\x1c\x59\x52\xb9\x61\x08\xce\xe3\x48\x7e\xc4\x85\x7f\xc4\xeb\x77\xad\xa8\xd7\xe8\xb3\x74\x18\xae\xcc\x2f\xe6\x1a\x2d\x4c\x5e\xe9\x22\x3a\xbd\xbd\x51\xfe\x37\xfd\x96\xfa\x9b\xb3\x64\x9a\x96\x64\x06\xa3\x09\x7b\x45\xd5\xc5\x9f\x15\x1c\x24\xe2\xeb\xc0\x38\x4b\xc9\x29\x68\x90\x2e\x20\xa5\xdf\xf7\x57\x57\x17\x47\xbd\x28\x4b\xb7\x93\x69\x7e\x88\x4c\x23\xff\x20\x32\x39\xcd\xc8\xc5\x8f\xcf\x7f\x78\x4e\x6f\xea\xcb\x8b\x73\xc8\x28\x49\x7e\x3a\x4b\x4e\x12\xa2\x2e\xc7\x91\x1d\xd6\x74\xa8\xde\xab\xb6\x25\x71\x1c\x89\x97\x33\x96\x04\x31\x7e\x77\x74\xae\x56\x40\x53\x1b\x07\x36\xa9\x3a\xcf\xdf\xf5\x56\x69\x5f\x65\xc6\xf1\xb5\x2f\xd1\xda\x05\xa4\xd1\xd5\x54\x70\xe6\x8a\x3f\x74\xba\x00\xe3\x38\x01\x7f\x7e\xfe\x85\xca\x0c\x70\x17\x14\xf6\x06\x2b\xb1\x6d\xbd\xcb\xf2\x7f\x41\x5b\x6f\x37\xd2\x74\x9d\xd0\x65\x40\x0b\xfc\x1f\x39\x01\xf7\x62\x03\x9c\xb9\xc0\xf0\xc4\x10\x1c\x08\x75\x3f\x40\x20\xc4\x92\x91\x25\xaa\x82\x16\x75\x36\x95\x9a\xc3\x4f\xf0\x32\x8a\x34\x8b\x17\xaa\x34\x2e\x8c\x55\xf6\x22\xa7\xa8\xdb\x0e\xec\x77\xbc\xdf\xf0\x61\xf8\xd9\xd0\xb1\x80\xd3\xa7\x83\x3a\xe8\xae\x95\x97\xcd\xac\xeb\x8b\x2f\x30\xb0\xc7\xa8\x42\x35\x49\xe1\xf0\x54\xdd\x05\x91\x3e\x98\xb7\x70\x12\xf7\x75\x7d\x7e\x59\x84\x1e\xde\xad\xf6\xff\xa1\xda\xe3\xc8\x3b\x3d\x3e\x2a\x9f\x54\x0b\xf5\xa3\xb5\xf1\x8a\xc6\x1d\x10\x81\xa9\xb0\xae\x11\xb7\x73\x98\xcc\xdb\x56\xac\xe0\xce\x0a\xb2\x24\x99\x77\xe6\xf0\xf3\xbd\x31\x32\xfe\xdf\x8c\xf1\x64\x05\x69\x1a\x09\x4f\xc2\x2f\x02\x8b\x15\xdc\x3e\x66\xe8\x46\x64\x73\x48\xe0\x0b\xd8\x3a\x04\x42\x9a\xb3\x1d\x20\x49\xa3\x75\x84\x29\x56\x10\xb6\xf3\x8d\x12\x6d\x36\xfb\x2e\xa2\xf1\x93\xf2\xcd\x07\xed\x50\x6e\x2d\x66\xf9\x81\xf1\x4a\x75\x68\xb6\x3e\xa3\xa7\x38\x5f\xa3\x34\xba\xcc\x83\x68\xaa\x0a\xa8\x4f\x56\xa0\x55\x1b\x73\xdd\x3b\x90\xe1\x5a\xc1\x75\xa3\x5a\x3a\xfc\xa2\x55\xba\x0e\x19\xe8\xca\x6a\x94\x74\xe1\x0b\x38\xdb\xa5\x81\x68\x40\x3f\xee\x49\x68\x4a\x52\x62\x85\x36\x84\xf0\xf3\xd6\xb8\x38\xba\xdf\x4b\x75\xfb\x20\x0f\x52\x91\xf7\x81\x4a\x71\x1a\xee\x61\x19\xba\x5d\xd0\xb3\xcd\x62\x67\x3c\xce\xa7\xca\xf5\x28\x55\xa5\xb0\x8c\x9b\x7e\x62\x60\x4e\x88\xf1\x40\x96\xb3\x5d\x58\xf1\x7d\xbd\x77\x10\x2d\xfe\xbd\x45\xe7\xe7\xd6\x1d\x7d\xb7\xe1\xf3\x2c\x65\xfb\xd1\x3c\x17\x6d\x1b\x97\x28\x7f\x1c\x9f\xd8\x1b\x29\xda\xd0\x95\x7b\xd2\x3c\xc4\x97\x76\x66\xa6\xba\x7f\x8a\xdf\x92\x9c\xbe\xe8\xf1\xd7\x42\x7e\xad\xad\xd9\xea\x92\x66\x6c\x2a\xf1\x3f\xf1\xbd\x93\xeb\x61\x65\x09\x38\x1c\x81\x56\x67\x69\x3c\x43\x70\x19\xa9\x60\x09\xd7\xca\x37\x45\x9a\x7f\xe7\x77\x5a\xe5\x23\xa4\x78\x08\xe1\x12\x5d\x6f\x74\x79\x2f\xd2\x2e\x67\xf3\x01\x2f\xe3\x15\x2a\xe6\xc7\x4f\x38\x6a\x77\x0f\xf2\xc8\xd8\x3f\x01\x00\x00\xff\xff\xb2\x2f\x3e\x09\x9a\x0b\x00\x00")

func nameServiceNameCliClientClient_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameCliClientClient_mainGotemplate,
		"NAME-service/NAME-cli-client/client_main.gotemplate",
	)
}

func nameServiceNameCliClientClient_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameCliClientClient_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-cli-client/client_main.gotemplate", size: 2970, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceNameServerServer_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xcd\x6e\xdb\x38\x10\x3e\x4b\x4f\x31\x15\xba\x85\xbc\x70\xa8\x02\xdb\xee\x21\xa8\x0f\x4d\xd2\xa6\xc5\x26\x5d\xc3\x76\xd1\xe3\x82\x96\xc6\x34\x11\x89\x14\x48\x5a\x71\x20\xf8\xdd\x17\x43\xfd\x58\x6e\x6c\x37\x87\x06\x88\x25\x71\x3e\x7e\xf3\xc7\x99\x61\xc9\xd3\x07\x2e\x10\x0a\x2e\x55\x18\xca\xa2\xd4\xc6\x41\x1c\x06\xd1\x2a\xe7\x22\xa2\x67\xe1\xe8\xa1\xb0\x7b\x24\x6b\xe7\xca\xe1\x7b\x52\x96\x46\xaf\x68\x45\xdb\x28\x0c\x83\x24\x81\xbf\x32\x98\x72\xe3\x9e\xc2\x20\x12\x3a\xe7\x4a\x30\x6d\x44\xb2\x4d\x68\x4b\xaa\x95\xc3\xad\x67\x13\x5a\x8b\x1c\xd9\x00\x22\x4c\x99\xb6\x1c\xb7\x1a\xfe\x91\x8e\x50\xd2\xad\x37\x4b\x96\xea\x22\x11\xfa\xe2\x41\xba\x84\xfe\x73\x2d\x5a\xe0\x62\x2d\x2d\xcc\xd1\x54\x32\xc5\x30\x58\x73\x95\xe5\x68\x20\xaa\x6b\xf6\xd5\xbb\x33\xe5\x6e\x0d\x17\xbb\x1d\x24\xad\xcc\x26\x16\x4d\x85\x26\x0a\x03\x5b\xa5\x47\x91\x02\x15\x1a\xee\x30\x8b\xc2\xa0\x5c\x7a\xc8\xf4\xea\x10\x14\x85\x41\x21\xb3\x2c\xc7\x47\x6e\xd0\x1e\x65\x19\xc8\xa3\x70\x14\x86\xab\x8d\x4a\x7d\xa4\xe3\x11\xd4\x61\x50\x71\x43\xa1\x0e\x32\x5c\x6e\xc4\xc7\x2c\x33\xe0\xff\x26\x40\xb1\x67\x73\x67\xa4\x12\x71\xe4\xa5\x8c\x67\x99\x89\xc6\x10\x5d\xbe\x7f\xfb\xf7\x5b\x7a\xb9\xa1\x65\xe0\x2a\x83\x02\x9d\x91\xa9\x85\x5c\x5a\x87\x0a\x08\x89\xd6\x46\xa3\x30\x08\x28\x3d\x7b\xe2\x9f\x99\x49\x3a\x24\x7e\xef\x89\xbf\x2c\x16\xd3\x63\x5c\x94\x9a\xd3\x5c\x24\x1d\x72\xbd\xf3\x5c\x62\x36\xbd\x86\x98\x18\x47\x47\x28\x47\x61\xe0\x39\xa6\xdc\x58\x8c\x47\x4d\x36\xbf\x5b\x04\x54\x95\x34\x5a\x15\xa8\x1c\x54\xdc\x48\xbe\xcc\xd1\x8e\x41\xae\xc0\xa2\x63\xf0\x39\xe7\xc2\xc2\x9a\x57\x08\xa5\x91\xda\x48\xf7\x04\xba\x42\x03\x9f\x54\x45\x78\xcb\xc2\x40\xae\x40\x5b\x76\x8b\x0e\x55\x15\x47\x37\x9f\xae\xbe\xdf\xfe\xf7\xf1\xe6\x66\x16\x8d\xe0\xd5\x04\xa2\x08\xe0\xcd\x1b\xf8\x73\x1f\xf9\xc9\xa4\x8b\x2d\x65\x26\x18\x4a\x4e\x11\x85\xc1\xee\x67\x3d\xe4\xe9\x11\x35\x7d\x1a\x5a\x2d\xef\x3b\x2d\x7b\xc1\x09\x96\x23\x3a\x6e\x67\xd3\xeb\x43\x1d\xa4\xa2\xcf\x4e\xab\xe2\x5d\xa7\x62\x2f\x38\x41\x72\x44\xc5\xf4\xdf\xd9\xe2\x80\xfd\x25\x0e\xac\x0a\xc7\xe6\xa5\x91\xca\xad\xe2\xe8\xf2\x0f\x1b\x8d\x9f\x53\x7a\x65\x3e\xcd\x77\x5a\x08\xa9\x04\x64\x9a\xea\x81\x35\xc5\x90\x6b\x21\xd0\x3f\xd8\x9d\x7f\x0d\x03\xd2\xd2\x2e\x4f\xbc\xe0\x1b\x3e\xde\x69\xb1\x2a\x5c\x83\x88\xb5\x65\x73\x97\xe9\x8d\x1b\x1d\x41\x5e\x37\xbd\x26\x6e\xd6\x47\xec\x87\x74\xeb\x38\x72\x64\x1b\x21\x6e\x70\xc5\x37\xb9\x5b\xc8\x02\xad\xe3\x45\xf9\x7d\x71\xfd\x72\x96\x94\xe7\x39\x9a\x43\xa6\x6b\xbf\xd6\x84\xb4\x41\x93\x23\x71\x54\x58\x41\xe5\xb0\xc6\x3c\xd7\x14\xf1\x0c\x57\xd8\xb9\x7b\x80\x10\x5a\x67\xcb\x27\x8c\xda\x62\xb8\xda\x58\xa9\xd0\xda\xc3\x30\xd9\xa6\xd7\x41\xb9\x64\x75\x7d\xab\xbf\xf1\x02\x81\xb5\x0d\x90\xd1\xd7\x6e\x37\xf7\x0d\xae\x09\x5f\x07\x9f\x40\xdb\xff\xc8\xa7\x16\x1e\x93\xbf\x49\x02\x3f\x0c\x2f\xbb\x1e\x0a\x8f\xd2\xad\x61\xd0\xbb\x18\xcc\x11\x81\xb1\x61\x3f\x4b\x5a\x56\x26\xf4\x81\x8a\xe1\x36\x22\xed\xf4\xb4\x88\xfd\x01\xf8\xa4\xb2\x52\x4b\xe5\x0e\x5d\x8b\xc3\xa0\xae\x0d\x57\x02\xe1\xb5\x84\xcb\xc9\xde\xaf\x7b\x74\x6b\x9d\x59\x6a\xac\x61\x10\xd4\xf5\x42\xdf\xe9\x47\x34\xf0\x5a\xb6\x2e\xf7\x84\x13\xb0\x55\xca\xee\xf9\x03\xd6\xf5\x33\xe9\xc0\x90\xba\x46\x95\x11\x5b\x1b\x6c\x1f\x83\x0e\x67\x5f\x16\x05\xec\xe0\x3e\x0e\xfd\x17\x59\x4e\x46\xf4\x6c\xf5\x8b\xfd\x7a\x66\xf1\x25\x75\xdb\x33\xfe\x8e\x07\x9e\xec\x06\x9e\x58\xcc\x31\x75\x98\xfd\x2e\x97\x9e\xe7\xb6\x27\x8e\x7b\x54\x1b\xca\x7b\x4c\xd7\x5c\xc9\x94\xe7\xfb\xf4\xa2\x31\x29\x79\x5e\xf0\x07\x8c\x49\x0c\x68\x8c\xa6\x62\x49\xdd\x96\x04\xed\xc5\x80\x5d\xf1\xf4\x41\x18\xbd\x51\x59\x37\x13\xbe\x2a\x87\xc6\x6c\x4a\xd7\x9f\xe0\x30\x10\xba\xff\xe8\xc5\x5f\x9a\x85\x98\x54\xb5\x5b\x9b\x31\xd9\xcc\x9e\x6e\x1f\x8d\xe1\x66\x02\x77\xa5\x7e\xf9\xab\x8e\x61\xb8\xb2\x34\xdb\xa9\x46\xfd\x68\xf0\x15\x1a\x14\xb4\xd3\x8f\xd1\xb6\xa4\xf0\x7e\xb3\xf5\x35\x55\xb0\xc6\x98\x38\x4a\x3c\xbe\xb9\x24\x25\xd1\xb8\x81\xb7\x96\x7e\x26\x4b\xbc\x84\x7d\x55\x19\x6e\x47\x67\xb6\xa6\x45\x96\x4b\x85\xa7\x19\xae\x1b\xc0\x39\x0e\xfa\x91\xf9\x19\x8e\x69\x03\x38\xc7\x61\x9f\x8a\xa5\xce\x4f\x53\xcc\xbd\xfc\x1c\x83\x33\x3c\x3d\x63\xc3\x82\xc4\x23\x1f\xdf\x61\x87\x6c\x2f\x17\xfb\xc9\x4c\x1a\xfc\xa1\xfa\x70\xd1\x50\xdd\xf9\x2c\x7f\x54\x99\xcf\x44\xbc\x47\x8e\xa1\xa0\xc6\xd3\x1d\x27\x7f\xc3\xe9\x53\xfa\x5b\xce\x04\x51\x36\x37\xae\xae\xf4\xa9\xff\xd0\x6a\x77\x26\x53\xb7\x1d\x43\x5f\x27\xe3\xb6\xf9\x8f\x4e\x38\xd9\xcd\xd5\x5f\xfa\xd8\x01\xc7\xb0\x1e\xba\xe8\x2f\x5e\xbf\xd7\x45\xa2\x6c\x4e\x7d\xae\xc6\x54\xbb\xb4\x5d\xa1\x6b\x4d\x8a\x23\x97\x96\x64\x7a\x77\xe1\x20\xd3\xe5\xca\x03\x5f\x4d\x40\xc9\xdc\x6b\xee\xbd\x41\x63\xe8\xd3\xa0\xdb\x18\x15\x06\xbe\x75\x05\xd6\x54\xc3\xf8\xd1\x2d\xa5\x99\x64\x3f\x85\x8f\xb8\x7d\x93\xf5\xd7\xce\xae\xf6\x8c\xaf\xbc\x72\xc9\x66\x28\xc8\x26\x53\xd7\x47\xc7\x62\x6c\xc7\x60\x4d\x75\xf2\x84\x0d\x3d\xe8\xcc\xb5\xac\x09\x78\xae\x86\x61\x9e\x6d\xd4\xab\xc3\x49\x8f\x5b\x49\xd1\xfa\x70\xd1\xf4\xa0\x5d\xf8\x7f\x00\x00\x00\xff\xff\xc8\x9f\xfd\x1a\x61\x0d\x00\x00")

func nameServiceNameServerServer_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameServerServer_mainGotemplate,
		"NAME-service/NAME-server/server_main.gotemplate",
	)
}

func nameServiceNameServerServer_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameServerServer_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-server/server_main.gotemplate", size: 3425, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedCliHandlersClient_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x8f\xda\x30\x10\x3d\xdb\xbf\x62\x84\x22\x94\x54\x60\xee\x48\x3d\x40\xd5\x22\x0e\xad\x10\xed\x1f\x30\xc9\x90\x58\x4d\x1c\xaf\xe3\xec\x87\x46\xfe\xef\x2b\x1b\x43\x96\xbd\xb0\x97\x64\xf2\xde\x9b\xe7\xf1\x9b\x18\x59\xfe\x97\x35\x42\xd9\x2a\xd4\xae\x91\xba\x6a\xd1\x72\xae\x3a\xd3\x5b\x07\x39\x67\xe6\x04\x33\xa2\x4c\x1c\xb6\xfb\x88\x1d\xa4\x6b\x60\xe9\xfd\x8c\x17\x9c\x13\xc1\x8b\x72\x0d\x64\x0e\x61\xfd\x1d\x84\xf7\x9c\x11\x59\xa9\x6b\x84\x4c\x05\x28\x73\x28\xfe\xa2\x7d\x56\x25\x8a\xdf\xe8\x9a\xbe\x1a\x82\x68\xb5\x02\xa2\x4c\x89\x3f\xb2\x43\xef\x41\x75\xa6\xc5\x0e\xb5\x1b\xe0\x2a\xe6\xec\x3c\xea\xf2\xa3\x2a\x27\x8a\x87\x29\x5d\xe1\x6b\x34\xfe\x11\x87\xde\xd8\x7a\x88\xde\xa1\x80\x9b\x9c\x68\xd7\x87\x0a\xc4\xaf\x51\x97\x4e\xf5\x3a\xf0\x01\x47\x5d\x79\x5f\x40\xfe\xcd\x9c\xc4\x4d\x95\x29\x71\xc4\xa7\x11\x07\xf7\xef\xcd\x60\xf2\x58\x00\x5a\xdb\xdb\x82\x38\x63\xf6\xc2\x86\x4b\x3d\xec\x0b\x7a\xa2\x65\x0a\xa7\x43\xd7\x84\xb6\x2f\x0d\x1e\xb2\xe5\x8c\x4d\x31\x1a\x69\x65\x17\xa3\x0c\x3e\x22\x6a\x93\x26\x9e\xa1\xce\x20\x75\x05\x79\x7c\xe8\xde\xa5\x0e\xb1\x1f\xb6\x72\xc0\x30\x54\x71\x87\x1f\xd1\xa0\x74\x58\x15\xf7\xf0\x4f\x3d\x76\x45\xb2\x65\xd3\xed\x2e\x64\x5a\xd3\x1a\xe6\x9f\x99\x5d\xbf\xb1\xb5\xf7\x8b\xdb\x38\xd8\x0e\x08\x0f\x7d\x1e\xdb\xe8\x6a\x4a\x62\xfa\x48\x54\xac\x7d\x5c\x8a\x1b\xad\x86\x79\x5a\xce\x02\xb4\x6a\x39\x8b\x7f\xe1\x45\x76\x7d\xbf\x07\x00\x00\xff\xff\x50\xcc\x31\x90\xe8\x02\x00\x00")

func nameServiceGeneratedCliHandlersClient_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedCliHandlersClient_handlerGotemplate,
		"NAME-service/generated/cli/handlers/client_handler.gotemplate",
	)
}

func nameServiceGeneratedCliHandlersClient_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedCliHandlersClient_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/cli/handlers/client_handler.gotemplate", size: 744, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x55\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\x6a\x04\x85\x14\x28\xd4\x3d\x85\x2f\xeb\xdd\x2e\xb6\x68\x52\x23\x1b\xb4\x87\xc5\xa2\xa0\xa9\xb1\x4c\x58\x26\x55\x92\x76\x6c\x08\xfa\xef\xc5\x90\x94\x23\x7b\x93\x3d\x04\x11\x87\x8f\xf3\xf1\x66\xde\xb8\xaa\x60\x29\xe4\x56\x34\x08\x8d\xed\x24\x74\xd6\x1c\x54\x8d\x0e\x04\x34\x4f\xcb\x05\xc8\x56\xa1\xf6\xb0\x36\x16\xfc\x06\xa1\xef\xf9\x57\xb4\x07\x25\x91\x3f\x8a\x1d\x0e\x03\xb8\x74\x64\xdd\xc4\x0d\x63\x6a\xd7\x19\xeb\x21\x67\xd9\xac\x31\xad\xd0\x0d\x37\xb6\xa9\x8e\x95\x46\x5f\x49\xa3\x3d\x1e\xfd\x2c\xdc\x99\xa6\x45\x3e\x81\xd0\xf3\xf7\x6f\xaa\x1d\x7a\x51\x0b\x2f\x02\x44\xf9\xcd\x7e\xc5\xa5\xd9\x55\xdd\xb6\xa9\xd0\x5a\x63\xdd\x8c\x5d\xde\x34\xe6\x6e\xab\x7c\x45\x7f\xa8\xeb\xce\x28\x4d\x81\xc9\x97\xb7\x42\xbb\x90\xe5\x3b\xf8\x33\x20\x25\xc5\xb2\xaa\x82\xe7\x8d\x72\x90\x38\x60\x99\x3b\x48\x98\xf5\x3d\xff\x12\xca\x5d\x0a\xbf\x81\xbb\x61\x80\xaa\x41\x8d\x56\x78\xac\x67\x2c\xeb\x56\x01\xb2\xfc\x70\x09\x9a\xb1\x82\xb1\xaa\x82\x47\x7c\x01\x8b\x7e\x6f\xb5\x03\xa1\x47\x3e\x61\x25\xe4\x16\x6b\x58\x9d\xae\x3a\x21\x8d\xd6\x28\xbd\x32\x9a\xc3\x17\x0f\xca\x51\x5f\xc8\x8f\x45\xd7\x19\xed\xd4\x4a\xb5\xca\x9f\xc0\xac\x43\xc3\xa4\x68\x5b\xb4\xe0\x0d\xd4\x4a\xb4\x25\x08\x5d\x43\x2b\x3c\x5a\x90\xad\x71\x58\x46\xd0\xab\x4f\xb6\xde\x6b\x49\x39\xe5\x64\x84\x5b\xaa\x9c\x2f\x42\xe8\x85\xd1\xba\x04\xd3\x11\xce\x01\xe7\xc9\xfc\x57\x30\x14\x90\x77\x2b\xde\xf7\x9f\x0d\xcd\x05\x5c\x4d\x09\x9d\xd0\x96\x10\x5a\x54\x40\xcf\xb2\x83\xb0\x20\x65\x2a\x6a\x61\xf4\x5a\x35\x8c\x65\x34\x66\xff\x96\xb0\x86\xfb\x39\x58\xa1\x1b\x3c\x87\xeb\x59\x96\xa1\xb5\x74\xb1\xce\x7f\x95\xb2\x60\x59\xa6\xd6\xe4\x10\x7e\x99\x83\x56\x6d\x40\x64\x91\x48\x3a\xa7\x60\x8e\xff\x63\x45\x97\xa3\xb5\x25\xcc\xa4\xd0\xda\x78\x10\x5d\xd7\x9e\x92\xe7\x19\x39\x1a\x58\x36\x30\x96\xc9\x49\x3d\x8e\x22\x7d\xfb\x7e\x31\x27\x17\x05\x53\xb8\xb7\x6e\x3f\xe0\xda\x58\xcc\x29\x99\x34\xe7\x7f\x8b\x76\x8f\xee\xd9\x7c\x7e\x5a\x2e\x1e\xd2\xf8\xe6\x52\xf2\x0d\x8a\x1a\xad\x2b\x8a\x92\xc2\x67\x7d\x7f\x07\x2f\xca\x6f\xe0\xc6\x23\x05\xe7\xc3\xc0\xb2\x89\xb5\xdb\x36\x81\xda\xfb\x39\x21\x78\x52\x6d\xe4\x97\xa2\x11\x32\x72\x76\xa3\x46\xd0\xd8\x85\x07\xf4\x1b\x53\xbb\x08\x0c\xdc\xf7\xfd\xb3\xf9\xd3\xbc\xa0\x85\x1b\x95\x9a\xf4\x29\xc9\x03\x46\x9d\xf0\xd1\x12\x5e\x05\x7e\x29\xcc\xfb\x0f\xe7\x70\xc9\xc8\x23\xbe\x44\x52\xf2\xf8\x96\x18\xd1\x65\xfa\x9e\xf5\xfd\x58\xd3\x30\xf0\xbe\x9f\xe6\x1b\x8d\xb3\x29\x54\x5d\x1b\xdd\x41\xf2\x4f\x5a\x9a\x1a\x89\xd8\x09\xe2\x09\xff\xdb\xa3\xf3\x53\xdc\x47\x7c\x13\x17\x04\x83\x23\x70\x3a\xbf\x37\x8a\x8f\xd7\xcf\xa7\x6e\x4c\xa8\x1f\x46\xec\xc5\xa8\x70\xce\x93\xbd\x38\x53\x96\x17\xc1\x92\x3a\x83\xba\x4e\xdd\x4c\x5f\xe3\x07\x1b\x27\x36\x56\x13\xdf\xba\x9e\x00\xd3\x5e\x5e\x37\x92\xf6\x47\x70\xf7\x43\x0f\xee\x01\xe0\x67\xcd\x2d\x5f\x63\x67\x43\x49\x42\x61\x03\x63\xfe\xd4\xe1\x85\x16\xc1\x79\xbb\x97\x9e\x44\x95\xc6\x14\xbe\x7d\x77\xde\x2a\xdd\x10\xbe\xaa\x60\xaa\x05\xda\x42\x02\x68\x73\x84\x93\xdf\x08\x0f\x3b\x53\xab\xb5\x42\x17\x17\xcc\x79\x77\x91\xce\x43\xb4\x8b\xf7\xf4\x34\xbf\x9d\x26\x50\x44\xf9\xb2\xb8\x8f\x16\xfe\x38\xaa\xe8\x2b\xea\x3a\xdf\xe2\x29\x6c\xa0\x98\x51\x71\xe9\xac\x3f\x93\x1a\xdc\x1a\x78\xcb\x71\x58\x17\x66\xd4\x20\xcc\x81\x5c\xb2\xe9\x02\x21\x51\x0e\x29\xfe\xcf\x94\x1c\x72\x19\xc9\x29\xae\x14\x90\x66\xf1\x77\x72\x72\x95\x97\xf4\xc7\xd1\x2f\x5f\xc4\xff\x25\xec\x6a\xb8\x1d\x7f\xe2\xf8\xc3\xc7\xe2\x1a\x11\xd2\x26\xfd\x76\x42\x4d\x7b\x92\x8d\xab\x73\xfb\xba\x3a\x43\x62\x41\xb5\x6a\x0d\x87\x12\x4c\xb8\x93\xfe\xc8\x43\x1d\xf9\xb6\xe0\x79\xca\xfa\x37\xba\x8c\x02\x8f\x8e\xe7\xb4\x24\x89\xe9\x70\x2c\x61\x5b\xc2\x21\x4c\xf4\x10\xd6\x65\x5c\xbe\x11\x3a\x5d\xbf\xb7\xbb\x1a\xe6\x70\x2e\xe0\x0f\xa3\x74\x7e\xbb\xab\xcb\x57\xd3\x92\xde\x44\xaf\x9c\xf3\xa2\x18\xdd\x25\x66\xa4\x3f\x46\xde\xff\x0f\x00\x00\xff\xff\xe3\x54\x2c\xcd\x98\x08\x00\x00")

func nameServiceGeneratedClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientGrpcClientGotemplate,
		"NAME-service/generated/client/grpc/client.gotemplate",
	)
}

func nameServiceGeneratedClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/grpc/client.gotemplate", size: 2200, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func nameServiceGeneratedClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientHttpClientGotemplate,
		"NAME-service/generated/client/http/client.gotemplate",
	)
}

func nameServiceGeneratedClientHttpClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x4d\x6f\xdb\x38\x10\x3d\x5b\xbf\x62\x36\x08\x50\xbb\x70\xe8\xee\xb5\x40\x0e\xbb\xc1\x7e\xe4\x90\xa2\xd8\x76\xb1\x87\xa2\x07\x5a\x1c\x59\x83\x50\x24\x4b\x52\x76\xbc\x82\xfe\xfb\x62\x48\x49\x96\x1b\x61\xd1\x43\xa0\x98\x9a\x79\x33\x7c\x6f\x3e\xe4\x64\xf9\x2c\x0f\x08\xe1\x58\x16\xc5\x6e\x07\x9f\x6b\x0a\x50\x91\x46\x28\xad\x89\x92\x4c\x80\x06\x63\x6d\x55\x80\x68\xa1\x91\xcf\x08\x64\x14\x1d\x49\xb5\x52\x03\x1a\xe5\x2c\x99\x18\xa0\xf2\xb6\x81\x80\xfe\x48\x25\x86\x2d\x23\x79\xfc\xd6\x62\x88\x20\x8d\x02\x8f\xc1\x59\x13\x10\xe2\xd9\x61\x42\x62\x53\x84\x58\xdb\x80\x17\x94\x2d\xc8\x00\x27\xd4\x9a\x9f\x68\x4a\xab\xd0\x07\x06\x60\x3c\x85\xc3\xef\xca\xfa\xc1\x31\xa1\x6d\xd3\x81\xd4\x1a\x6c\x05\xb6\xf5\x10\x5a\xe7\xac\x8f\xa8\x20\x7a\x69\x02\xff\xcf\xe1\x48\x6a\xfa\x57\x46\xb2\x86\xd1\x2a\xeb\x1b\x19\x83\x80\xc7\x08\x52\x07\x0b\x64\x4a\xdd\x2a\x0c\x53\x36\xd0\x90\x52\x1a\x4f\xd2\x63\x10\x45\x41\x4d\x02\x5a\x17\xab\x9b\x83\xd5\xd2\x1c\x84\xf5\x87\xdd\xcb\xce\x60\xdc\x31\x55\xf8\x12\x6f\x0a\x7e\x49\xb1\x6e\xf7\xa2\xb4\xcd\xee\x60\xef\x9e\x29\xee\xf8\x6f\x04\x65\x13\xb7\x87\x9b\xae\x13\x1f\x7f\x7d\x4c\x90\x1f\x65\xac\xe1\xae\xef\x6f\x8a\x4d\x52\xe0\xb7\x89\xd3\xd2\x6a\x8d\x65\x0c\xe3\xe5\x62\x3d\xe3\x0a\x62\x2d\x23\x94\xb6\x71\xcc\x84\x34\x20\x95\x1a\x05\xe0\x5b\xbd\x09\x0c\xd6\xa0\x34\x91\xf9\xde\x23\xb4\x01\x15\x13\x2b\xa1\x46\xed\xd0\x43\x88\xbe\x2d\xe3\x96\x5f\x0f\xa1\x96\x23\x91\x89\x16\x24\xc3\x05\x32\x07\x8d\xe0\xa4\x97\x0d\x46\xf4\xa2\xd8\xed\xf8\xfc\xd1\x80\xcc\x92\xfa\x2d\x50\x7c\x13\x38\x58\xd5\xea\x24\x4d\xd5\x9a\x92\x69\x1f\x52\x36\xc8\xca\x58\xb0\x0e\xbd\x8c\x08\x96\x7d\x1d\xfa\xbb\x31\x20\x03\xee\x65\xa0\x20\xe0\x77\xeb\x01\x5f\x64\xe3\x34\x6e\xe1\x6c\x5b\x68\xe8\x50\x47\x70\x32\x70\x59\xcc\xa8\xe2\x04\xa7\x40\x39\x8e\xf3\x56\xb5\x25\x26\x1a\xa4\x81\x3a\x46\x27\xfe\x94\x46\x69\xce\xf1\x44\xb1\x06\x94\x65\x3d\x54\x37\xac\xc7\xe8\x1b\x38\x91\x47\x05\xad\xcb\xa0\xc1\x61\x49\x15\x95\xe0\x64\xac\x05\xac\x1f\x53\x7e\x14\x18\x7f\x2f\xf7\xfa\x0c\x12\x1a\x0a\x31\x77\x06\x28\x0c\x74\x30\xec\x4a\xe6\x68\x9f\x31\x51\xf9\x29\xcb\x32\x75\x52\x4a\x11\xaf\xc5\xce\x62\x30\xc4\xc8\xa4\xd8\xcc\xd9\x2d\x35\xa1\x89\xd7\xec\xce\x84\xbb\x34\xa5\x3e\x73\xeb\x66\x38\x54\xff\x27\x23\xb7\x4f\xe6\x8a\x98\xe1\x06\x73\x59\x5d\xf2\x25\x13\xd1\x57\x92\x0b\x6a\x59\x09\x06\x9b\x82\x2d\x0f\x86\x96\x83\x5d\x3a\x71\x97\x74\xf8\x80\xa7\x87\xe1\x3e\xa5\x6d\xf6\x64\x12\x4f\x4d\x62\x36\x65\x39\xd3\x76\x3b\x4c\x90\xd8\x7a\x03\x94\x8a\x99\x73\x2c\xa5\xd6\xe8\x73\x3d\x0f\xf9\x8a\x22\xdd\xe8\x15\xa7\x5d\xd1\x75\x5e\x9a\x03\xc2\x2d\xc1\xfb\x7b\x10\xa3\xfd\x53\xd6\xa3\xef\x8b\x55\xd7\xdd\x92\xf8\x20\x1b\xec\xfb\xd1\x1f\x00\xa6\x7b\x88\xf1\xb0\xe8\xba\x3b\x3e\xed\xfb\xa2\xbf\x6e\xd7\x1f\x08\xc2\x05\x0a\xeb\x59\x86\x1b\x98\xc5\x5d\x97\xf1\x05\x86\x51\x22\x1e\xf2\x73\xcb\x05\xf1\xd6\xed\x45\xd7\xfd\x61\xd9\x0c\x6e\x49\xfc\x95\x27\xeb\xe7\xb3\xc3\xc1\x75\x03\xeb\xd7\x46\x79\xe4\xce\xac\xb6\x80\xde\x5b\xbf\x81\xae\x58\xad\xc6\x91\x9c\x0e\x39\x61\x14\x0b\x1c\x70\x4e\x9c\xc3\xa6\x58\xad\xa8\x4a\xa6\x3f\xdd\x83\x21\x9d\x30\x56\x83\x2a\x86\x74\x82\x29\x56\xab\xbe\x98\x4e\xc7\x08\xe2\x47\x72\xdb\x6c\x19\xa5\x58\xf5\x45\xd7\x65\x7a\x99\xdc\x27\xee\xaa\x39\xc3\xa9\x6f\x6f\x23\x26\x86\xb3\x6e\x73\xd2\x6f\x23\x2e\xf1\x9e\x89\x67\xb0\xa5\x2b\x06\x48\xe9\xcd\x7d\xb3\xc5\xa7\xd4\x86\x9b\xd7\x45\x70\x75\x79\xc6\x5e\x96\x6e\xdc\x80\x53\x1b\x75\x2c\xd4\xb4\x0b\x67\xc7\x59\x84\x99\x3a\x8c\xfe\x8d\x6f\x34\x60\x2c\x71\xf8\xaa\x08\x92\xdf\x71\x12\x34\x88\xef\x8a\x2b\x65\x94\xad\x16\xb4\x5c\x52\x33\xeb\x39\xbd\x39\x0e\x22\xe5\xe3\xc4\x7e\xd6\x6a\xae\xd9\x3f\x5e\xba\x5f\xb4\x86\x93\x97\x2e\xe4\x19\x3b\xf1\x56\x11\x6a\xc5\x0b\x66\xe8\xcc\x4b\xab\x26\x61\xd3\x70\x5a\xd8\x9a\xe2\x69\x5a\xc5\xbc\x71\xe0\x6f\xde\xfd\xe9\x43\x85\x37\xbf\x73\xfa\xcc\x33\x86\xe7\x66\x64\xf0\xd9\xe2\xe6\x69\x81\x47\xf4\xe7\xcb\x5a\xa7\x34\x7c\xa7\x55\x99\x3f\x7a\xf0\xca\xe9\x44\x5a\xf3\xc6\x64\x68\x42\x35\xba\x58\xaf\xd0\xa7\xe5\x83\x6a\x58\x21\x7c\x5c\x91\x0f\x69\x12\x5e\x20\x60\x8f\x69\xea\xb1\x53\x1b\xd1\x37\x36\xcc\xbf\x27\x44\x31\x4e\x82\xb7\xb3\x51\x30\x10\xb7\x9e\x67\x22\x84\x58\x20\x21\xd5\x08\x55\xa0\xd1\xcc\xad\x37\x70\x7f\x0f\xef\x86\xee\x66\xc1\xb8\x9d\x56\x4d\x6a\xee\x11\xe4\xa1\x96\x74\xe5\xf4\xe5\xdd\xd7\xed\xfc\xf2\x5f\x7e\x7e\xff\x55\x08\xb1\xf9\xbe\xb5\x16\xfb\x6a\x71\x66\xc0\x3d\x34\xeb\xc5\x37\x09\xf4\x32\x3e\xff\x0b\x00\x00\xff\xff\x53\x09\x93\xa7\x7c\x0a\x00\x00")

func nameServiceGeneratedEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedEndpointsGotemplate,
		"NAME-service/generated/endpoints.gotemplate",
	)
}

func nameServiceGeneratedEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/endpoints.gotemplate", size: 2684, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\x4f\x6f\xe3\xb6\x13\x3d\x8b\x9f\x62\x7e\x46\xf0\x83\x1d\x38\x52\xcf\x01\x72\xd9\xec\x76\xb3\x68\xb3\x0d\xd2\xa0\x3d\x2c\x16\x0b\x5a\x1a\x4b\x84\x29\x52\x21\x69\x27\xae\xa0\xef\x5e\x0c\x29\xc9\x4a\xec\xc8\xde\xe6\x10\x38\x16\xe7\xcf\x9b\xf7\x66\x46\x74\xc5\xd3\x15\xcf\x11\xec\x26\x65\x2c\x49\xe0\xa1\x10\x16\x96\x42\x22\x54\x46\x6f\x44\x86\x16\x2c\x9a\x0d\x9a\x0b\x2b\x32\x84\x85\x50\x99\x50\xb9\x85\xa5\x36\xe0\x0a\x84\xfc\xfe\xee\x1a\x9c\xe1\xca\x56\xda\xb8\x98\x42\x7c\x71\xb0\x76\x42\x8a\x7f\xd0\x7a\x93\xfe\x34\xc9\x4d\x95\xc6\x7f\xfa\x70\x31\x63\xa2\xa4\x87\x30\x65\xd1\x44\xa1\x4b\x0a\xe7\xaa\x09\x63\xd1\x24\xd7\x92\xab\x3c\xd6\x26\x4f\x9e\x13\x3a\x49\xb5\x72\xf8\xec\x26\xfe\x4c\xe7\x12\xe3\x81\x09\xc5\x4c\x4a\x74\x3c\xe3\x8e\x93\x3f\x3d\xe8\x53\xc2\x24\x17\xae\x58\x2f\xe2\x54\x97\x49\xae\x2f\x56\xc2\x25\xf4\xf7\x12\x13\xb9\x75\xb5\x13\x3c\x91\x22\x8b\xaa\x05\x4c\xea\x3a\xbe\xfb\xf0\xc5\xe3\xbc\xe3\xae\x80\x8b\xa6\x99\xb0\x19\xf3\x4c\xdd\xf2\x15\x7e\xbe\xbf\xbb\x0e\xf5\x40\xc9\x57\x68\x81\x83\x45\x07\x7a\x09\xa8\xb2\x4a\x0b\xe5\x2c\xf0\x0d\x17\x92\x2f\x24\x02\xa7\x73\x4f\x58\x5d\x7f\xd6\x5f\x79\x89\x10\xb7\xe9\x62\xfa\xd6\x34\x1d\x37\xcb\xb5\x4a\x5f\x25\x98\xa6\xee\x19\x5a\x26\xe2\xeb\xf0\x39\x1f\xa4\xf9\xd4\xfd\x37\x83\x6a\x11\x8f\x27\x80\x9a\x45\x41\xd5\x3f\x2a\x27\xb4\xb2\x70\x79\x05\xdf\xbe\xbf\x60\xae\xd5\x29\x18\xd4\x2c\x8a\xe0\xd0\xf1\x07\x5c\x6a\x83\xd3\x8e\xff\x07\xdd\x22\x9b\xcd\x59\xd4\xb0\xc8\xa0\x5b\x1b\x05\xff\x27\xd7\xe0\x50\x7b\xa6\xeb\x1a\x1e\xf4\xef\xfa\x09\xcd\x4b\x80\xd0\x34\x2c\xaa\x6b\xc3\x55\x8e\x70\x26\x08\x56\x7f\x7e\x8b\xae\xd0\x99\x25\x8b\xa8\xae\x3b\xf7\x33\xd1\x56\x76\xf9\x0a\xdf\x57\x7c\x6a\x89\x63\x51\x14\xa5\xee\x79\x4e\x9f\x3d\x5f\x71\x5d\xf7\xae\x1d\x75\xde\xe2\x23\xa6\x3a\xf3\xbc\x0f\x2c\xee\xf1\x71\x8d\x36\x18\x7c\x52\x07\x0d\x6c\xa5\x95\x45\x6f\xf1\x82\xda\x38\x8e\xe9\x21\x11\x52\xd7\x17\x24\x18\x55\xd0\xb0\xc6\x37\xd1\x8e\x18\x10\x65\x25\xb1\x44\xd2\x92\xa6\xe6\x88\x82\x42\x39\x34\x4b\x9e\x22\x73\xdb\x0a\x87\x71\xac\x33\xeb\xd4\x41\xcd\x8e\xf3\x78\x80\x46\x80\x57\x3c\xde\x70\x95\x49\x34\x6c\x07\x3e\x20\x6f\xc3\xf8\x45\x30\xc8\xee\xf4\xae\x90\xd3\x6b\x38\x0a\xd5\x0f\xc4\xd4\xc2\xf9\x2e\xd5\x6c\x17\xbe\x47\x7f\x78\x48\x0c\x3e\xc2\xf9\x70\x28\xce\x44\xdc\x2a\xfa\xb0\xad\x3a\x50\x33\x98\xee\x1b\x05\x55\x07\x56\x73\x40\x63\x34\x25\x67\xd1\x0f\x0a\x5d\xf9\x27\x04\x9b\x7a\x6a\x8f\xcf\x30\x27\xd4\x2d\x84\xcd\x63\x99\xb1\x48\x2c\xbd\xd3\xff\xae\x40\x09\x49\xa1\xba\x49\x51\x42\xfa\x78\xc3\xe9\x31\x58\xc5\xa7\x40\x9b\xcd\xc9\x9d\x35\xac\xae\x83\x50\x24\x53\x4b\x75\xe8\xea\xe3\x3c\x27\x09\x8c\x0d\x00\x08\x5a\x61\xaf\x16\x7a\x70\x68\x2d\x7e\x25\xa1\x5c\xc1\x1d\xc9\xb0\x41\x43\x0b\xd0\x37\x7a\x58\x7b\xfb\xfd\x66\xda\xc8\x4e\x03\x87\xb5\x45\x73\x91\xe9\x92\x0b\x35\x66\x1c\xc3\x9d\x11\x25\x37\x42\x6e\xc9\x65\xb9\x96\x20\x94\xdf\xbd\x83\xf5\x39\x56\xc7\xf4\xc7\x7e\x97\x50\x2d\xf7\xf8\xb8\xeb\xca\x9a\x5a\x62\xf0\x6d\x28\x3d\xb5\xd4\xe5\x55\xe7\x73\x48\x9e\xbd\xf6\x1a\xe8\xf9\xb8\xa7\x14\x51\x74\x2d\x05\x0d\xcd\xfb\xa5\x0a\x9d\x31\xaa\x55\x30\xf9\x0f\x62\x55\x72\x7b\xaa\x54\x21\xc7\x5b\x5a\xa5\xbe\xda\x71\xad\x42\x84\xb7\xc5\x22\x30\x27\xca\x45\xa6\xbd\x60\x95\xdc\x9e\x36\x51\xc3\x19\x94\xdb\x91\xf9\x0a\x2f\x85\x93\x44\x1b\x7d\x7f\x1c\x14\x2d\x78\x1c\x13\xed\x54\x41\x82\x7c\xe3\x12\x9f\x34\x60\xa3\x85\x1c\x12\xad\x47\x70\xa2\x66\xb6\x22\x16\xfb\x46\xfa\x59\xc5\x6c\x35\x36\x66\xef\x57\xec\xed\x8d\xd8\x09\x36\xba\x11\x4f\xdc\x75\x47\xe5\x1a\xdd\x88\x2f\xa6\x6c\xac\x8e\xc3\x7a\xb5\x25\xfe\xc4\x46\xec\xf0\xbc\x7b\x23\x26\x09\xdc\xa0\xac\xd0\x58\x16\xd0\xef\xdd\x31\x0f\xbf\xec\xcb\x0c\xce\x3b\xd3\xf8\xf6\xe3\xec\xb5\x05\x61\xa5\x3b\xcb\x6a\x0e\x1b\x0f\xd8\xcb\x7f\x5e\x66\xfe\x35\x2c\x96\xb0\x19\xbe\x96\xc3\xcf\x02\x84\x15\x6e\xbd\xd2\x59\x86\x19\x2c\xb4\x2b\x88\xde\x2e\x0d\xdd\x81\x4a\xee\x60\xba\x9a\xc1\x53\x21\xd2\xc2\x9b\x4a\x09\x92\xc4\x6a\xa3\x70\x95\xf9\x7b\x1d\xfd\xcc\x89\xaf\xb9\xd2\x4a\xa4\x5c\xde\x20\xcf\xd0\xfc\x86\x5b\xfa\xcd\xe0\xda\x44\x56\x87\x7e\x11\x0e\x52\xae\x60\x81\x5d\x88\x34\x45\x6b\x31\xa3\xdc\x28\x5c\x81\xa6\xcd\xdc\xde\x70\xe1\xaa\x2f\xf6\x6f\xe1\x8a\xbf\xb8\x5c\x63\xb8\x75\x50\xb1\xdf\x7e\xf9\x3e\x3b\x6a\xf8\x06\xba\xe9\x6a\xb6\x8b\xe0\xaf\xaf\xbd\x76\xa9\x7b\x66\x0d\xfb\x37\x00\x00\xff\xff\x09\x00\x51\xc2\x47\x0e\x00\x00")

func nameServiceGeneratedTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_grpcGotemplate,
		"NAME-service/generated/transport_grpc.gotemplate",
	)
}

func nameServiceGeneratedTransport_grpcGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_grpc.gotemplate", size: 3655, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func nameServiceGeneratedTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_httpGotemplate,
		"NAME-service/generated/transport_http.gotemplate",
	)
}

func nameServiceGeneratedTransport_httpGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func nameServiceHandlersServerHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerHooksGotemplate,
		"NAME-service/handlers/server/hooks.gotemplate",
	)
}

func nameServiceHandlersServerHooksGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerServer_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func nameServiceHandlersServerServer_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerServer_handlerGotemplate,
		"NAME-service/handlers/server/server_handler.gotemplate",
	)
}

func nameServiceHandlersServerServer_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerServer_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/server_handler.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceMiddlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func nameServiceMiddlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceMiddlewaresEndpointsGotemplate,
		"NAME-service/middlewares/endpoints.gotemplate",
	)
}

func nameServiceMiddlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceMiddlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceMiddlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func nameServiceMiddlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceMiddlewaresServiceGotemplate,
		"NAME-service/middlewares/service.gotemplate",
	)
}

func nameServiceMiddlewaresServiceGotemplate() (*asset, error) {
	bytes, err := nameServiceMiddlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/middlewares/service.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-service/NAME-cli-client/client_main.gotemplate": nameServiceNameCliClientClient_mainGotemplate,
	"NAME-service/NAME-server/server_main.gotemplate": nameServiceNameServerServer_mainGotemplate,
	"NAME-service/generated/cli/handlers/client_handler.gotemplate": nameServiceGeneratedCliHandlersClient_handlerGotemplate,
	"NAME-service/generated/client/grpc/client.gotemplate": nameServiceGeneratedClientGrpcClientGotemplate,
	"NAME-service/generated/client/http/client.gotemplate": nameServiceGeneratedClientHttpClientGotemplate,
	"NAME-service/generated/endpoints.gotemplate": nameServiceGeneratedEndpointsGotemplate,
	"NAME-service/generated/transport_grpc.gotemplate": nameServiceGeneratedTransport_grpcGotemplate,
	"NAME-service/generated/transport_http.gotemplate": nameServiceGeneratedTransport_httpGotemplate,
	"NAME-service/handlers/server/hooks.gotemplate": nameServiceHandlersServerHooksGotemplate,
	"NAME-service/handlers/server/server_handler.gotemplate": nameServiceHandlersServerServer_handlerGotemplate,
	"NAME-service/middlewares/endpoints.gotemplate": nameServiceMiddlewaresEndpointsGotemplate,
	"NAME-service/middlewares/service.gotemplate": nameServiceMiddlewaresServiceGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-service": &bintree{nil, map[string]*bintree{
		"NAME-cli-client": &bintree{nil, map[string]*bintree{
			"client_main.gotemplate": &bintree{nameServiceNameCliClientClient_mainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"server_main.gotemplate": &bintree{nameServiceNameServerServer_mainGotemplate, map[string]*bintree{}},
		}},
		"generated": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"client_handler.gotemplate": &bintree{nameServiceGeneratedCliHandlersClient_handlerGotemplate, map[string]*bintree{}},
				}},
			}},
			"client": &bintree{nil, map[string]*bintree{
				"grpc": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientGrpcClientGotemplate, map[string]*bintree{}},
				}},
				"http": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientHttpClientGotemplate, map[string]*bintree{}},
				}},
			}},
			"endpoints.gotemplate": &bintree{nameServiceGeneratedEndpointsGotemplate, map[string]*bintree{}},
			"transport_grpc.gotemplate": &bintree{nameServiceGeneratedTransport_grpcGotemplate, map[string]*bintree{}},
			"transport_http.gotemplate": &bintree{nameServiceGeneratedTransport_httpGotemplate, map[string]*bintree{}},
		}},
		"handlers": &bintree{nil, map[string]*bintree{
			"server": &bintree{nil, map[string]*bintree{
				"hooks.gotemplate": &bintree{nameServiceHandlersServerHooksGotemplate, map[string]*bintree{}},
				"server_handler.gotemplate": &bintree{nameServiceHandlersServerServer_handlerGotemplate, map[string]*bintree{}},
			}},
		}},
		"middlewares": &bintree{nil, map[string]*bintree{
			"endpoints.gotemplate": &bintree{nameServiceMiddlewaresEndpointsGotemplate, map[string]*bintree{}},
			"service.gotemplate": &bintree{nameServiceMiddlewaresServiceGotemplate, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

