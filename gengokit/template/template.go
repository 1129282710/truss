// Code generated by go-bindata.
// sources:
// NAME-service/NAME-client/client_main.gotemplate
// NAME-service/NAME-server/server_main.gotemplate
// NAME-service/generated/client/grpc/client.gotemplate
// NAME-service/generated/client/http/client.gotemplate
// NAME-service/generated/endpoints.gotemplate
// NAME-service/generated/transport_grpc.gotemplate
// NAME-service/generated/transport_http.gotemplate
// NAME-service/handlers/client/client_handler.gotemplate
// NAME-service/handlers/server/server_handler.gotemplate
// NAME-service/partial_template/client_handler.methods
// NAME-service/partial_template/service.interface
// NAME-service/partial_template/service.methods
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameServiceNameClientClient_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xdf\x6f\xdb\x36\x10\x7e\xb6\xfe\x8a\x9b\x90\x00\x72\xe1\xd0\x1d\xb0\xbd\x18\xc8\x43\x9a\xa5\x68\x80\xb5\x30\x92\x00\x7d\x19\x30\x30\x12\x2d\x71\x95\x48\x95\xa4\x9c\x14\x82\xff\xf7\xdd\x9d\x68\xd9\x6e\x6c\xa4\xfb\x51\xa0\x91\x44\xdd\x7d\x77\xfc\xbe\xef\x28\xb7\x32\xff\x22\x4b\x05\x8d\xd4\x26\x49\x74\xd3\x5a\x17\x20\x4b\x26\xa9\x32\xb9\x2d\xb4\x29\xe7\x7f\x79\x6b\x52\x5c\x58\xd5\xb2\xe4\x6b\x13\xe8\x62\x3d\xfd\xf5\xc1\xe5\xd6\xac\xe3\x2d\x86\xf3\x6a\xd0\x8d\x4a\x13\xbc\x29\x6d\x2d\x4d\x29\xac\x2b\xe7\xcf\x73\xa3\xc2\x1c\x83\x83\x7a\x66\x80\xd2\xda\xb2\x56\x62\x2f\xa4\x74\x6d\x3e\xa4\xe9\x50\x75\x8f\x22\xb7\xcd\xbc\xfd\x52\xce\x95\x73\xd6\x79\x7a\x33\x9f\xc3\x43\xa5\x3d\xdc\x2b\xb7\xd6\xb9\x4a\x26\x95\x34\x45\xad\x1c\xa4\x7d\x2f\x6e\xb9\xf9\xa5\x0c\x15\x5c\x6c\x36\x30\x8f\xef\xfc\xdc\x63\xb4\x72\x58\x33\xaf\xb5\x32\xe1\xc3\x8f\xe4\x0c\xa1\x98\x43\x4d\x0d\x0f\x47\x13\x4a\x65\x94\x93\x41\x15\x31\x23\x6e\x62\x52\x85\xd0\xfe\x93\x34\x8a\xc7\xb4\xf6\x91\xc3\x97\xef\x0e\x13\xd2\x64\x9a\x24\x6b\xe9\x48\x99\x3f\xe1\x12\x22\xed\x62\x29\x9d\x57\xb7\x26\x8c\xab\xa4\x80\xb8\x6f\x6b\x1d\x97\x48\x3c\x71\x6d\x1b\x94\x39\xae\x0c\x64\x8a\xcf\x4e\xb6\xab\x61\xa5\x7d\x14\x77\xaa\xd4\x3e\x28\x87\xa5\x23\xb5\xe2\x93\x6c\xd4\x66\x73\xcf\xd4\x51\xf5\x64\xd5\x99\x9c\x6d\x92\x4d\xa1\x8f\x52\x28\x90\x45\x81\x3b\x80\xd6\x29\xdf\x35\xca\x83\xb1\xe0\x07\x04\x28\xb4\xcf\x2d\x66\x7f\x03\xff\x0d\xc1\x9b\x19\x20\xb9\xa0\x9e\x5b\x95\x07\x0f\x1d\x86\x79\x08\x96\x91\x5a\x67\xd7\xba\x50\x10\x2a\x4a\x73\x18\x40\xc0\x88\xe9\xc1\xae\x30\x6d\x8b\x29\x06\xf9\x87\x6a\x6d\xd0\xd6\x00\x3e\x3a\xb5\xaa\x31\x45\x15\x80\x1e\x26\x38\x82\xa1\xae\x1e\xb5\x91\x58\x9e\xca\xd2\x52\x5c\x26\x4d\xa2\xed\xfd\x82\x17\x2f\x82\x93\xc6\x13\xe1\x82\xca\x02\x59\xdd\x33\x12\xa5\x22\xef\xda\x76\x7e\x9b\x8a\xc4\x23\xd1\x5d\x1e\x90\x46\x78\xb4\x28\xd0\xb0\x25\xa8\xac\x0f\x0b\x9e\x9f\xad\x10\xe8\xd8\x28\x1a\xfb\xe1\x8a\xb0\x87\x7f\x97\x5c\x43\xdc\x73\x60\x96\xd2\x5b\x2e\x9d\xce\x20\xa5\xff\x1f\x1e\x1e\x96\x07\x14\x14\x85\x5f\xe7\xe9\x14\x91\xc8\x60\xa7\x91\xe8\xed\x88\xb4\xf8\xf5\xed\x2f\x6f\xe9\xa6\xbc\x5b\x5e\x43\x46\xa0\xd3\x13\xa8\x8d\x0a\x95\x2d\x00\x8e\xa3\x0e\x6f\x09\xa9\xef\x91\x2a\x3c\x2f\xce\xb4\x29\xd4\xf3\x0c\xaf\xb0\xb8\x84\xd1\x35\x1f\x39\xd0\x6f\x36\x7d\xaf\x57\x31\x88\x1e\x54\xed\x15\x5d\x1f\xec\xef\xf6\x09\x67\xef\x4c\x47\x83\xe1\x2b\x53\x8c\x97\x74\x36\xf9\x77\x15\x66\x23\xce\xa9\x0a\xb4\xcb\xe9\x9e\x20\x68\xf5\x6b\x16\xf4\xca\xa1\x52\x57\x75\xfd\x9e\x44\xdf\x6c\x28\x6a\xc2\x9b\xe7\xe1\xca\xc8\xfa\x63\xd2\xd6\xda\xf1\x98\x10\xe3\x39\x34\xc1\xb1\x62\xe2\x78\xbc\x18\x03\xbb\x7b\x33\xaa\xfe\xd3\x25\xea\x4a\x63\xb3\x85\x98\x51\x24\xd2\xbc\x3b\x27\xc4\x27\xf5\x94\x8d\x19\x08\xb0\x01\x62\x0d\x08\x67\xd4\x7c\x87\x83\x36\x34\x03\x08\xb2\xc3\xaa\xff\xa6\x65\x9d\x8d\xa1\xb3\x61\xf1\x33\x1e\xa5\xb7\xc6\xab\xbc\x73\xb8\x97\xbd\xc5\x07\x3c\xa3\x6d\x17\x32\x3a\xab\x71\x1f\x08\x57\x4c\xc9\x08\x58\x8e\x40\xb1\x90\xd1\x35\x57\x9a\xe0\x89\x2f\xde\xb7\xe8\x84\xb0\xca\x2c\x1e\x2f\xa1\xc0\x08\xf4\xc2\x0d\xed\x15\x9e\x2a\x5d\xd3\xd4\xca\x1a\xad\xc2\xf8\x34\x22\x06\x27\x02\xc7\x73\x01\xe7\xeb\x94\xdb\x24\xec\x09\x66\xdf\x3c\xeb\x90\xfd\x4c\x4f\x48\xf5\xa4\x50\x2b\xd4\x8a\xe2\x51\x0d\xcb\x74\xbf\xa0\x68\x77\x02\x33\x45\x14\xbc\x63\x87\x1a\x3c\xd5\x1f\x6b\xb1\xa0\x23\xc9\xa9\xc6\x06\x35\x5a\xdf\xe3\xbc\xea\x95\x56\xc5\x1f\x86\xcd\xbf\xdf\xd6\x26\x39\x42\xc1\x2b\x15\xce\xd7\x08\x34\xee\xf2\x10\x2d\x99\xf8\x27\x1d\xf2\x0a\xde\xc4\x11\xeb\x93\xbe\x07\x5c\xaa\xe0\x2c\xdc\xb0\xb5\xc9\x74\x3b\xd7\xd3\x12\xbe\x79\x69\x78\x12\x5d\xe2\x96\xd3\x23\x26\x4f\x17\x44\x6f\xdf\x5f\x0c\xc8\x3c\x15\x8c\xb2\xe7\x71\x02\xa2\x9b\x6d\x16\x7d\x58\x28\x8b\xdd\x4d\x1b\x8e\xde\x65\x20\xf1\x11\xdd\x5f\xc9\xdd\x54\x0c\xe8\x3c\x4a\xf4\xe0\xd4\xd7\x4e\xf9\x30\x3a\xf0\xe0\xd3\x2a\xfa\x7e\xec\x2c\xeb\xfb\x1f\x6f\x89\xa6\x55\x5c\xcb\xba\xa6\xc5\x71\x74\xd9\x3a\x47\x7c\xf9\x8a\x31\x73\xc4\x21\x4b\x9e\x6c\xed\x7b\xe1\xbe\xf3\x27\x8b\x87\xec\x8c\x7b\xdc\x7e\x84\xf6\x77\x17\x7f\xd0\x88\x77\xf8\x41\x29\x9d\xed\x4c\x41\x53\x16\xd9\xf9\x8f\x8d\x1f\xa9\xf7\x7a\xcb\x11\x7d\x49\xe0\xb5\xc9\xd2\x81\x6d\xb8\x1b\x3a\xc2\x6f\x24\xa9\xb1\x60\xdb\x1f\x04\xfe\x4f\x32\x1d\xd4\x1e\x7e\x3d\x60\x6d\xfc\xb6\x22\xee\xc9\xda\xeb\x69\xb2\xe7\xae\x3d\x9f\xe1\xf1\x20\xbb\x3a\x2c\x5e\x1f\x41\x6d\xd6\x78\x00\x15\x10\x87\xec\xfc\x2b\xb3\x34\x3c\xbd\x1c\x4a\x54\xf6\xef\x00\x00\x00\xff\xff\xe6\x1b\x01\x58\xf9\x0a\x00\x00")

func nameServiceNameClientClient_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameClientClient_mainGotemplate,
		"NAME-service/NAME-client/client_main.gotemplate",
	)
}

func nameServiceNameClientClient_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameClientClient_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-client/client_main.gotemplate", size: 2809, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceNameServerServer_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x5d\x6f\xdb\x36\x14\x7d\x96\x7e\x05\x2b\x74\x80\x34\x38\x54\x87\xad\x7b\x08\x9a\x87\x36\xcd\xd2\x60\x49\x60\x24\x1e\xf6\x2c\x4b\x34\x4d\x44\x22\x05\x92\x4a\x6d\x08\xfe\xef\xbb\x97\xa4\x14\x39\xb5\x9d\x3d\xb4\x68\x2c\x99\xf7\xf0\xf0\x9e\xfb\x45\xb7\x45\xf9\x54\x70\x46\x9a\x42\xc8\x38\x16\x4d\xab\xb4\x25\x69\x1c\x25\xab\xba\xe0\x09\x3e\x1b\x8b\x0f\xc9\x86\x47\xbe\xb6\xb6\x9d\xbe\xe7\x6d\xab\xd5\x0a\x57\x94\xf1\x9f\xb9\x11\x5c\x16\x35\x7e\x31\x5b\x53\x16\x35\xbc\xc6\x51\x9e\x93\xdf\x2b\x32\x2f\xb4\xdd\x82\x81\xab\xba\x90\x9c\x2a\xcd\xf3\x4d\x8e\x54\xa5\x92\x96\x6d\xdc\x29\x5c\x29\x5e\x33\x3a\x81\x70\xdd\x96\x81\xe3\x5a\x91\xbf\x85\x45\x94\xb0\xeb\x6e\x49\x4b\xd5\xe4\x5c\x9d\x3d\x09\x9b\xe3\x1f\x93\x55\xab\x84\xf4\x3c\x07\x11\xb5\xe2\x81\x6a\xb1\x16\x86\x3c\x32\xfd\x2c\x4a\x16\x47\xeb\x42\x56\x35\xd3\x24\xe9\x7b\x7a\xe3\x02\x31\x2f\xec\x9a\x9c\xed\x76\x24\x0f\x36\x50\x06\x68\xa6\x81\xdc\x3c\x97\x07\x91\x9c\x49\xa6\x0b\xcb\x2a\xc0\xb4\x4b\x07\x99\x7f\xd9\x07\xc1\xe9\x59\x1c\xaf\x3a\x59\xba\xb0\xa7\x19\xe9\xe3\xe8\xb9\xd0\x18\xf7\xa8\x62\xcb\x8e\x7f\xae\x2a\x4d\xdc\xbf\x0b\x82\x89\xa0\x8f\x56\x0b\xc9\xd3\xc4\x59\x69\x01\xe6\x64\x46\x92\xf3\x8f\x1f\xfe\xfc\x80\x2f\x5f\x71\x99\x80\x8f\xa4\x61\x80\x2c\x0d\xa9\x85\xb1\x4c\x12\x44\x32\x63\x92\x0c\x98\x31\x57\x2f\xc4\xaf\x99\xd1\x3a\x25\xfe\xe8\x88\xbf\x2d\x16\xf3\x43\x5c\x98\x8f\xe3\x5c\x68\x9d\x72\xfd\xe1\xb8\xf8\xc3\xfc\x92\xa4\xc8\x98\x1d\xa0\x84\xff\x8e\x03\xea\xc3\xb0\x34\xf3\x09\xba\x55\x9c\x03\x23\xa9\x14\x06\x8a\xfa\x28\x41\xfe\x38\x73\x0f\x7a\xeb\x5e\xe3\x08\xe2\x17\x85\xe5\x0b\x67\xb8\x67\xdf\xc1\x06\xb5\xeb\x11\xa9\x32\xe0\x5c\xa5\x3a\x9b\x1d\x40\x5e\xfa\xca\x4b\xfd\x7a\x46\xff\x85\xb2\x49\x13\x6b\xc0\x69\x44\x7c\x65\xab\xa2\xab\xed\x42\x34\xcc\xd8\xa2\x69\xff\x59\x5c\xfe\x7f\x16\x2c\x7e\xa6\xf7\x99\x2e\xdd\x1a\x70\xec\xe2\xc0\x82\x42\xd2\xa4\x31\x1c\xe3\xb4\x66\x75\xad\x30\x24\x15\x5b\xb1\x41\xee\x1e\x02\xfa\xa3\x5a\x6e\x59\x12\xa2\xf4\xa5\x33\x42\x42\x18\xf7\xc3\x64\x7c\x5d\x93\x50\xba\x74\xac\x73\x0c\xd6\x60\xbc\x18\xcd\xa0\x20\x20\x52\x54\x07\xb4\x90\x9c\x91\xa4\x0e\x89\x98\x96\xd8\x9a\x69\x86\x1a\x9c\x0f\x57\xa1\xed\x5e\x7c\xe8\x7b\x0d\xdd\xcb\xc8\x7b\x41\xce\x2f\xc8\x70\x3c\xbd\x63\x76\xad\x2a\xb3\xdb\x79\x2f\xfb\x7e\xa1\x6e\xd5\x77\xd0\xf9\x5e\xd0\xfb\xa2\x61\xbb\xdd\x48\x35\xb4\x32\x1d\x56\xbc\xef\xa7\xb6\x5c\x10\xe8\x4b\x7a\x57\x3c\xb1\xbe\xff\xc1\x9a\x06\x35\x41\x1f\xd4\xef\x78\x04\xb1\xba\x28\x41\xe0\x8c\x08\x69\xac\xee\x1a\x26\x6d\x61\x85\x92\x4e\xf1\xa0\x7e\x50\x0c\x2e\xc0\x46\x94\x30\xec\x37\xa8\x11\x8f\x1e\xce\x32\xfd\x5b\x11\xc0\x49\xe0\xd4\xfc\xe0\xe7\x39\xb6\xd4\x09\x95\xb3\x89\x03\x21\xfc\x77\xac\x84\x44\x0a\xa8\xb6\x97\x04\x30\xad\x4b\x3c\xb8\x81\x68\xa4\x68\x26\xb0\xa2\xb0\xee\x4a\xbb\x41\x43\x98\xb8\xf4\x0b\xdc\x01\x5c\xab\x4e\x56\x43\xdf\xdd\x80\x41\xeb\xae\xb5\x63\x79\xc4\x11\x57\x04\x47\x96\x9f\x56\xd1\x2b\x66\xec\x2f\x37\xf3\x67\xe4\x37\x0c\xaf\xbf\x00\xe8\xbd\xb2\x62\xb5\x4d\xcb\x19\x09\xf7\x00\x7d\xbc\xb9\xbe\xb9\x5f\xec\x7d\x5f\x5c\x3d\xdc\xe1\x1e\xe7\xef\xa7\x33\x02\x5d\x4b\xaf\xd0\xd3\x55\x9a\xfc\x82\x4d\xf8\xe9\xac\xc4\x66\x19\x9c\xf3\xc3\xce\x4f\x90\x03\x9e\x85\xbe\x3c\x7f\xab\xbd\x21\x37\x06\xa7\x32\x36\x94\x1b\xab\xae\x9d\xa2\x06\x77\xba\x61\x18\x3a\x82\xdd\x75\x1b\xd7\x12\x0d\xfd\xe6\x82\x91\x26\xb9\xc3\xfb\x7b\x2f\x87\xfd\x0e\xee\x8d\xfa\x2f\xf4\xc4\x59\xe8\x8d\xac\xd8\x26\x3b\xb1\xb5\x6c\xaa\x1a\x3a\xf7\x38\xc3\xa5\x07\x9c\xe2\xc0\x0f\x51\x9f\xe0\x98\x7b\xc0\x29\x0e\xb3\x6d\x96\xaa\x3e\x4e\xf1\xe8\xec\xa7\x18\xb0\x7d\x4e\xf8\xb0\x40\x73\xe6\xe2\x3b\x1d\x67\xe1\x8a\xf8\x75\xbc\xf3\xa6\x65\xe0\xa8\x6e\x5d\x96\x3f\xcb\xca\x65\x22\x7d\x41\xce\x48\x33\xad\x09\x77\x4f\x8d\x29\xfd\x29\x35\x81\x94\xfe\xde\x1c\x7a\x1b\xc7\x0a\xae\x06\x7d\x29\xb4\xd1\x6c\x9c\x20\x66\x16\x26\x75\x76\x44\xe4\x70\xfd\xbe\xa9\x71\x00\x42\x34\xa7\x12\xdd\xf5\xf9\x73\x25\x22\xa5\xaf\xfa\x5a\xce\x70\x3a\xe0\x76\xf8\x2d\x16\x5c\x02\x74\xd9\xa2\xeb\xc3\x6d\x8f\xae\x8b\x95\x03\xbe\x03\xa0\xa8\xdd\xc9\xa3\x1a\x78\xe2\x57\xcd\x6c\xa7\x25\xbc\xe1\x6c\x8a\x8c\x7e\x9e\xc6\xef\x1a\x8e\x74\x3a\x5f\x87\xcf\x4d\x0d\x44\xba\x1f\x0f\x43\xef\x69\xd7\x79\xed\x92\x3e\x30\x8e\x3e\x69\xf8\x39\x35\xcc\x51\x3f\x14\x03\x0c\xc2\x0f\x27\x1d\xad\xb0\xa9\x82\xc1\x5d\x43\x7d\xc0\x6b\x39\x0d\xf3\x43\x27\xdf\xed\x5f\xcb\x6c\x23\xac\x9b\x42\xb8\x31\x8b\x77\xf1\x7f\x01\x00\x00\xff\xff\xb0\x25\xb3\x85\x34\x0b\x00\x00")

func nameServiceNameServerServer_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameServerServer_mainGotemplate,
		"NAME-service/NAME-server/server_main.gotemplate",
	)
}

func nameServiceNameServerServer_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameServerServer_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-server/server_main.gotemplate", size: 2868, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x55\xdd\x8e\xdb\x36\x13\xbd\xb6\x9e\x62\x3e\x63\xf1\x41\x5a\x68\xa9\xfb\x14\xbe\x89\x93\x06\x29\x9a\xd4\x48\x16\xed\x45\x51\x14\x34\x45\xcb\x84\x65\x52\xa5\x68\xef\x1a\x82\xde\xbd\x33\xfc\xf1\x4a\xee\x6e\x82\x2c\x56\x1c\x1e\xce\xcf\x99\x39\xb3\x55\x05\x1b\x2e\x0e\xbc\x91\xd0\xd8\x4e\x40\x67\xcd\x59\xd5\xb2\x07\x0e\xcd\xb7\xcd\x1a\x44\xab\xa4\x76\xb0\x33\x16\xdc\x5e\xc2\x30\xb0\xef\xd2\x9e\x95\x90\xec\x2b\x3f\xca\x71\x84\x3e\x1e\xb3\x6e\xe2\x26\xcb\xd4\xb1\x33\xd6\x41\x9e\x2d\x96\x8d\x69\xb9\x6e\x98\xb1\x4d\xf5\x5c\x69\xe9\x2a\x61\xb4\x93\xcf\x6e\xe9\xef\x4c\xd3\x4a\x36\x81\xd0\xf3\xb7\x6f\xaa\xa3\x74\xbc\xe6\x8e\x7b\x88\x72\xfb\xd3\x96\x09\x73\xac\xba\x43\x53\x49\x6b\x8d\xed\x97\xd9\xfc\xa6\x31\x0f\x07\xe5\x2a\xfa\x91\xba\xee\x8c\xd2\x14\x98\x7c\x39\xcb\x75\xef\xb3\x7c\x03\x7f\x05\xc4\xa4\xb2\x05\xb2\xf5\xb8\x57\x3d\x44\x0e\xb2\xc5\x9e\xeb\xba\x95\x16\x96\x48\xcc\x67\x5f\xf2\x86\xbb\x3d\x3c\x20\x31\x55\xbc\xeb\x2b\xa2\x48\x5a\x8c\xda\x9f\xc5\xab\xc8\x46\x6a\x69\xb9\x93\x35\x62\xba\xad\x87\x6c\xde\xcf\x41\xcb\xac\xc8\x32\x0c\xff\x55\x3e\x81\x95\xee\x64\x35\xb6\x48\x27\xf6\x61\x8b\xe4\xcb\x1a\xb6\x97\x9b\xbe\x21\xd5\x5a\x0a\xa7\x8c\x66\xf0\xd9\x01\xa6\x8e\x5d\x24\x3f\x56\x62\x65\xba\x57\x5b\xd5\x2a\x77\x01\xb3\xf3\xed\x15\xbc\xa5\x6a\x9c\x81\x5a\xf1\xb6\xc4\x08\x35\xb4\x98\x98\x45\x7f\xa6\x97\x65\x00\xbd\xf8\xcc\x76\x27\x2d\x28\xa7\x9c\x8c\x70\x4f\x3c\xb1\xb5\x0f\xbd\x46\x43\x09\xa6\x23\x5c\x0f\x8c\x45\xf3\x6f\xde\x50\x40\x1e\xd9\x49\xe3\x54\x82\x6f\x5f\x01\x43\xb6\x38\x73\x8c\x27\x62\x09\xe8\x67\xa7\x1a\xe4\x9e\x46\xf0\xef\x12\x76\xf0\x6e\x05\xd8\x18\x9c\xb4\xe4\x1c\x9f\x2c\xf0\x35\x5d\xec\xf2\xff\x0b\x51\xe0\x59\xed\xc8\x21\xfc\x6f\x05\x5a\xb5\x1e\xb1\x08\xb4\xd1\x39\x06\xeb\xd9\x1f\x96\x77\x39\x7e\x97\xb0\x14\x5c\x6b\xe3\x80\x77\x5d\x7b\x89\x9e\x97\xe4\x68\xcc\xf0\x7f\xb6\x10\x93\xec\x7b\x8a\xf4\xe7\x5f\xb3\x19\x9a\x95\x47\xe1\x5e\xbb\x7d\x2f\xb1\x08\x99\x53\x32\x51\x03\xbf\xf3\xf6\x24\xfb\x47\xf3\x09\x7b\xf6\x25\x8e\x76\x2e\x04\xdb\x4b\x5e\xe3\xe8\x14\x45\x19\xc2\x0f\xc3\x03\x3c\xe1\x90\xc2\x9d\xfb\x48\xd1\xd9\x88\x79\x4d\xac\x38\xff\xa4\x47\xba\x42\x04\x8b\x92\x0e\x12\xa5\x70\x84\x0c\xa4\xdd\xa9\x04\x4a\x42\xc6\xb8\x7b\x53\xf7\x01\xe8\xc9\x1f\x86\x47\xf3\xab\x79\xc2\xb6\xdf\xa9\xa8\xf3\x8f\x51\x3b\x90\x44\xc4\x92\xc5\xbf\xf2\x04\x53\x98\xb7\x1f\xae\x60\x4e\x09\x4e\x4d\x60\x25\x0f\x6f\x89\x12\x5d\xc6\x6f\x94\x40\xaa\x69\x1c\x19\x1e\x26\xf9\x06\xe3\x72\x0a\x55\xb7\x46\x54\x1a\x26\x28\x4c\x2d\x89\xd9\x09\xe2\x9b\xfc\x07\x09\x77\x53\xdc\x07\xf9\x2a\xce\xeb\x43\x26\x60\xb7\xc5\x2c\x3e\x19\x4f\x32\x82\xd2\xf5\xe3\xa5\x4b\x09\x0d\x63\xc2\xce\x66\x05\x27\x3f\xda\x8b\x2b\x65\x79\xe1\x2d\xb1\x33\xc8\x68\xec\x66\xfc\x4a\x1f\x59\x1a\xd9\x50\x4d\x78\xdb\x0f\x04\x98\xf6\xf2\xb6\x91\xb4\x2e\xbc\xbb\xff\xf4\xe0\x1d\xe0\xbf\x1f\xf4\xa8\x7c\x89\xbd\x18\x4b\x52\x4a\x86\x59\x38\xac\x71\x26\x46\xe8\x9d\x3d\x09\x47\xaa\x8a\x73\x8a\x6a\x40\x9b\xd2\x0d\xe1\x71\xbb\x4c\xc5\x40\x4b\x87\x03\x2d\x0a\x7f\x72\x7b\xee\xe0\x68\x6a\xb5\x53\xb2\x0f\xfb\xe4\xba\xaa\x48\xe8\x3e\xda\xec\x3d\x3d\xcd\xef\xa7\x09\x14\x41\xbf\x59\x58\x3f\x6b\xf7\x9c\x64\xf4\x1d\x93\xcf\x0f\xf2\xe2\x17\x4e\xc8\xa8\x98\x3b\x1b\xae\xa4\x7a\xb7\x06\x5e\x73\xec\xf7\x85\x49\x22\xc4\xc9\x25\x97\xd9\x74\x83\x90\x2a\xc7\x18\xff\x47\x52\xf6\xb9\x24\x72\x8a\x1b\x05\xc4\x59\xfc\x99\x9c\xdc\xe4\x25\xdc\x73\xf2\xcb\xd6\xe1\x77\x09\xc7\x1a\xee\xd3\xdf\x3f\xf6\xe5\x43\x71\x8b\xf0\x69\x93\x7e\x3b\xae\xa6\x3d\x59\xa4\xdd\x79\x78\xd9\x9d\x3e\x31\xaf\x5a\xdc\x94\x67\x5c\xd4\xfe\x0e\xc3\x32\x5f\x47\x7e\x28\x58\x1e\xb3\xfe\x89\x2e\x83\xc0\x83\xe3\x15\x6d\x49\x62\xda\x1f\xd1\x6d\x09\x67\x3f\xd1\xa3\xdf\x97\x61\xfb\x06\xe8\x74\xff\xde\x63\xfe\x2b\xb8\x16\xf0\x0b\x4e\x5c\x8e\xb6\xf2\xc5\xb4\xa1\x37\xc1\x2b\xf6\xaf\x28\x92\xbb\xc8\x0c\x66\x17\x78\xff\x37\x00\x00\xff\xff\x4d\xae\x0e\xc1\xb5\x08\x00\x00")

func nameServiceGeneratedClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientGrpcClientGotemplate,
		"NAME-service/generated/client/grpc/client.gotemplate",
	)
}

func nameServiceGeneratedClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/grpc/client.gotemplate", size: 2229, mode: os.FileMode(436), modTime: time.Unix(1477951177, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x9d\x53\x78\xae\x44\x7c\x08\x96\x8e\x48\xe4\x02\x51\xf9\x84\x0a\x13\x47\xce\x67\x8a\x7a\x77\x18\xd8\xdf\x9b\x53\x17\xb9\x01\x52\xfd\xcc\xf8\x8c\xa1\x15\xad\xfa\x6b\xa7\x3e\xc9\xce\x28\x6d\x74\x0f\x2a\xf1\xee\x56\x88\x54\x5d\x1e\x1e\xb2\xf9\x1d\xb2\xe8\x71\x9c\xe6\xdc\x8a\x99\xa4\x35\xe7\xeb\x0a\xeb\x88\x74\xb1\x1d\x8d\xf9\x5f\x24\xfd\xd4\x37\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func nameServiceGeneratedClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientHttpClientGotemplate,
		"NAME-service/generated/client/http/client.gotemplate",
	)
}

func nameServiceGeneratedClientHttpClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/http/client.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\xdb\x6e\xe3\x36\x10\x7d\xb6\xbe\x62\x6a\x2c\x50\xbb\x50\xa8\xf7\x02\xfb\xd2\x45\x2f\x79\xd8\xc5\xa2\xdd\x1f\xa0\xa9\xb1\x44\x84\x22\x15\x92\x72\x92\x0a\xfa\xf7\xce\x90\x92\xac\xd4\x46\x2f\x01\x62\x4b\xe4\xcc\x99\x33\xe7\x0c\xe9\x5e\xaa\x27\xd9\x20\x84\x8b\x2a\x8a\xaa\x82\x6f\xad\x0e\x70\xd6\x06\x41\x39\x1b\xa5\xb6\x01\x3a\x8c\xad\xab\x03\x44\x07\x9d\x7c\x42\xd0\xb6\xd6\x17\x5d\x0f\xd2\x00\xda\xba\x77\xda\x46\x4a\xf1\xae\x83\x80\xfe\xa2\x15\x86\x92\x91\x3c\x3e\x0f\x18\x22\x48\x5b\xd3\x73\xe8\x9d\x0d\x08\xf1\xad\xc7\x84\xc4\xa1\xf4\xda\x3a\x5a\x5c\x51\x4a\x90\x01\x5e\xd0\x18\xfe\x46\xab\x5c\x8d\x3e\x30\x00\xe3\xd5\x38\xbf\x9f\x9d\x9f\x13\x13\x5a\x99\x16\x24\x25\xb9\x33\xb8\xc1\x43\x18\xfa\xde\xf9\x88\x35\x44\x2f\x6d\xe0\x67\x2e\xa7\xa5\xd1\x7f\xca\xa8\x9d\x65\x34\xca\xe9\x64\x0c\x02\x1e\x89\xa1\x09\x8e\xba\x52\x66\xa8\x31\xac\x6c\xa0\xd3\x75\x6d\xf0\x45\x12\x79\x51\x14\xba\x4b\x40\x87\x62\xb7\x6f\x9c\x91\xb6\x11\xce\x37\xd5\x6b\x65\x31\x56\x2c\x15\xbe\xc6\x7d\xc1\x9b\x3a\xb6\xc3\x49\x28\xd7\x55\x8d\x7b\x78\xd2\xb1\xe2\xff\x05\x94\x43\x5a\x6a\xc8\xa0\x87\xfd\x38\x8a\xc7\x84\xfa\x55\xc6\x16\x1e\xa6\x09\xaa\x79\x2f\x54\x49\x1f\xbf\x2f\x76\xfd\x29\x05\x7e\xfd\xe9\x7d\xe8\xbe\x38\x26\xbf\x7e\x5e\x1d\x50\xce\x18\x54\xf4\x30\x4b\x11\xdb\x8d\xb2\xf4\x26\x23\x85\x10\x06\xe9\x26\x2d\xc8\xba\x5e\xec\x62\x0d\xbe\x0f\x0c\xd6\xa1\xa4\xbe\xc9\x9d\x13\xc2\x10\x48\x40\xb2\x41\x42\x8b\xa6\x27\xba\x21\xfa\x41\xc5\x92\xb7\xe7\x52\xf7\x2b\xd1\x87\x03\xc9\x70\x41\xdb\x86\x06\xa9\x97\x5e\xd2\x0c\xa1\x17\xb4\xc8\xeb\x8f\x54\x3e\x0f\x80\x2f\x41\x53\x6d\x2e\x76\x1e\x4c\x32\xf2\x3c\x58\xc5\x26\xcd\x94\x2d\xb2\x8f\x0e\x1c\x51\x90\x11\xc1\x71\x2e\x3d\x3f\x2c\x05\x19\xf0\x24\x83\x26\x2b\x7f\xa1\x74\x7c\x95\x5d\x6f\xb0\x84\x37\x37\x90\x83\x4d\x1b\xa9\x7e\xe0\x21\xda\x48\xc5\x04\xd7\x42\xb9\x4e\xef\x5d\x3d\xd0\xe8\x32\x1c\xc5\xb6\x31\xf6\xe2\xb7\x6c\x46\x09\x2f\xe4\x29\xa0\x54\xed\x7c\x16\xe0\xb0\x54\x3f\xd2\x9e\x27\x86\x43\x9f\x41\x43\x8f\x4a\x9f\xb5\xa2\xa2\xb1\x15\x70\x78\x4c\xfc\xe8\x48\x11\xfe\x49\x9e\xcc\x1b\xc5\x74\x3a\xc4\x7c\x8e\x68\xa6\x83\x6e\x2c\xa7\x6a\x7b\x71\x4f\x98\xa4\xfc\x23\xdb\xb2\x9e\xbb\x44\x11\xdf\x9b\x9d\xcd\x60\x88\x45\x49\x71\xdc\xaa\xab\x8c\x46\x1b\xdf\xab\xbb\x31\xee\x7a\x84\x89\x11\x4d\x6f\x86\xa3\x3e\xfe\xc1\x46\x3e\x6c\x59\x2b\xcd\x0a\x77\x98\xc7\xea\xca\x97\x32\xd0\x9f\x25\x0f\xd4\x7d\x27\x18\x6c\x2d\x76\xff\x1a\x19\xb8\xd8\xf5\xdc\x56\xc9\x87\x2f\xf8\xf2\x69\xee\x87\x26\xf8\xa4\x6d\xd2\xa9\x4b\xca\x26\x96\x1b\x6f\xcb\xf9\xbe\x89\x83\xb7\xd4\x3d\x37\xcd\x1c\x15\x75\x4a\x33\x9c\xe6\x79\xe6\x2b\x8a\xd4\xd1\x8d\xa6\x63\x31\x8e\x54\x9f\xee\xc4\x0f\x1a\x7e\xfc\x08\x62\x89\xff\x9c\xfd\x98\xa6\x62\x37\x8e\x1f\xb4\xf8\x42\x53\x3d\x4d\x4b\x3e\xd0\xdf\xd2\x87\x58\x16\x09\xea\x81\x57\x29\x67\x7a\x7f\x5c\xff\xbd\x08\xcf\x27\x0d\xda\x35\xe5\x08\x9b\xb2\x07\x15\x5f\x61\xbe\x77\xc4\xa7\xfc\x5d\xf2\x3c\xfc\xd0\x9f\xc4\x38\xfe\xea\x38\x8c\xc0\xc5\xef\xf9\x1a\xfe\x46\xbd\xce\xa9\x47\x38\xdc\x06\xe5\xfb\x79\x13\x55\x02\x7a\xef\x3c\x15\x2d\x76\xcb\xf5\x9d\xd6\x98\x2e\x8a\x3b\x0a\x30\x25\xa6\x70\x2c\x76\xfa\x9c\x22\xbf\xfb\x08\x56\x1b\x46\xd8\xcd\x8e\xd0\x6b\x02\x29\x76\x53\xb1\xac\x2d\xe8\xe2\xbf\xd0\x3a\x96\x8c\x41\x6a\x8e\x63\xd6\x95\x55\xfd\xcc\xc7\xe9\xff\x4a\xcb\x49\xf7\xba\x08\x30\x5f\xc2\x4b\xe2\xf1\xd6\xd7\x2c\x4a\x62\xcf\x58\xf7\xcd\x58\x7e\x00\xd7\x73\x31\xb2\xf4\xeb\x4f\xe1\x66\x39\xeb\x7a\xd5\x9b\xb0\x9f\x99\xfa\x8c\x70\x4f\x98\x1b\x53\x29\xeb\xb2\xfa\x13\xc4\xdf\x46\x25\xb1\xe1\x98\x5b\x67\x6e\xad\x61\x6f\x96\xd5\x4b\xd6\x7b\x37\x6d\x24\xff\x2b\x00\x00\xff\xff\xb2\x0c\xd8\x6b\x34\x08\x00\x00")

func nameServiceGeneratedEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedEndpointsGotemplate,
		"NAME-service/generated/endpoints.gotemplate",
	)
}

func nameServiceGeneratedEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/endpoints.gotemplate", size: 2100, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\xdf\x6f\xdb\x36\x10\x7e\xb6\xfe\x8a\x9b\x51\x0c\x56\x10\xcb\x7b\x2e\x90\x97\xa6\x5d\x53\x6c\xe9\x82\x2e\xd8\x1e\x8a\xa2\xa0\xa5\xb3\x4c\x58\x12\x15\x92\x76\x92\x09\xfe\xdf\x77\x47\x4a\xb2\xfc\x23\xb2\xda\x3c\x04\x0e\xc5\xfb\xf1\xdd\xf7\xdd\x51\x54\x29\xe2\x95\x48\x11\xcc\x26\x0e\x82\xd9\x0c\xee\x97\xd2\xc0\x42\x66\x08\xa5\x56\x1b\x99\xa0\x01\x83\x7a\x83\x7a\x6a\x68\x01\x73\x59\x24\xb2\x48\xc9\x44\x69\xb0\x4b\x84\xf4\xcb\xdd\x35\x58\x2d\x0a\x53\x2a\x6d\x23\x0e\xf1\xc9\xc2\xda\xca\x4c\xfe\x47\xbe\x6c\xd2\xee\xce\x52\x5d\xc6\xd1\xdf\x2e\x5c\x14\x04\x32\xe7\x87\x30\x09\x46\xe3\x02\xed\x6c\x69\x6d\x39\x0e\x68\x91\xaa\x4c\x14\x69\xa4\x74\x3a\x7b\x9a\xf1\x4e\xac\x0a\x8b\x4f\x76\xec\xf6\x54\x9a\x61\xd4\x31\xe1\x98\xb3\x1c\xad\x48\x84\x15\xec\xcf\x0f\xda\x94\x30\x4e\xa5\x5d\xae\xe7\x51\xac\xf2\x59\xaa\xa6\x2b\x69\x67\xfc\xb7\x8f\x89\xdd\x9a\xda\x19\x9e\x8c\x31\x18\x95\x73\x18\x57\x55\x74\xf7\xee\x93\xc3\x79\x27\xec\x12\xa6\xdb\xed\x38\x08\x03\xc7\xd4\xad\x58\xe1\x47\xaa\xde\xd7\x03\x39\x2d\x0d\x08\x62\xcb\x82\x5a\x00\x16\x49\xa9\x64\x61\xe9\xd1\x46\xc8\x4c\xcc\x89\x51\xc1\xfb\x8e\xb0\xaa\xfa\xa8\x3e\x8b\x1c\x21\xaa\xd3\x45\xbc\xda\x6e\x1b\x6e\x16\xeb\x22\x3e\x48\x30\x89\xed\x13\xd4\x4c\x44\xd7\xfe\xf7\xb2\x93\xe6\x43\xf3\x5f\x08\xe5\x3c\xea\x4f\x00\x55\x30\xf2\xaa\xfe\x55\x5a\xa9\x0a\x03\x6f\xaf\xe0\xeb\xb7\x3d\xe6\x6a\x9d\xbc\x01\xd9\x8f\xe0\xd4\xf6\x3b\xa4\x46\xc0\x49\xc3\xff\xbd\xaa\x91\x85\x97\xc1\x68\x1b\x8c\x34\xda\xb5\x2e\xe0\x57\x76\xf5\x0e\x95\x63\xba\xaa\xe0\x5e\xfd\xa9\x1e\x09\xca\x1e\x40\xd8\x92\x53\x55\x51\x12\x6a\xc9\x37\x92\x61\xb5\xfb\xb7\x68\x97\x2a\x31\x6c\x41\x26\x8d\xfb\x1b\x59\x57\xf6\xf6\x00\xdf\x67\x7c\xac\x89\x23\xfb\x11\x91\x77\xc9\xbf\x2d\x5f\xc4\x50\xeb\xda\x50\xe7\x2c\xde\x63\xac\x12\xc7\x7b\xc7\xe2\x0b\x3e\xac\xd1\x78\x83\x0f\xc5\x49\x03\xca\x5a\x18\x74\x16\x7b\xd4\x46\x51\xc4\x0f\x99\x90\xaa\x9a\xb2\x60\x5c\xc1\x36\xd8\xba\x26\xda\x11\x03\x34\x0e\x19\xe6\xc8\x5a\xf2\xd4\x9c\x51\x90\xe0\xa2\x5e\x08\x6a\x54\xfb\x5c\x62\x37\x8e\xb1\x7a\x1d\x5b\x92\xf8\x3c\x8f\x27\x68\x04\x38\xe0\xf1\x46\x14\x49\x86\x3a\xd8\x81\xf7\xc8\xeb\x30\xee\x20\xe8\x64\xb7\x6a\x57\xc8\xf0\x1a\xce\x42\x75\x03\x31\x31\x70\xb1\x4b\x15\xee\xc2\xb7\xe8\x4f\x0f\x89\xc6\x07\xb8\xe8\x0e\x05\xd9\xd7\x8a\xde\x13\x79\xb5\x6f\x08\x93\x63\x23\xaf\x6a\xc7\x8a\x46\x4e\x6b\xc5\xc9\x83\xd1\x77\x0e\x5d\xba\x27\x0c\x9b\x7b\xea\x88\x4f\x3f\x27\xdc\x2d\x8c\xcd\x61\x09\x83\x91\x5c\x38\xa7\x5f\xae\xa0\x90\x19\x87\x6a\x26\x85\x96\x2e\x5e\x77\x7a\x28\x47\x34\x04\x5a\x78\xc9\xee\x24\x4f\x55\x79\xa1\x58\xa6\x9a\x6a\xdf\xd5\xe7\x79\x26\x8f\xbe\x01\x00\xc9\x47\xd8\xc1\x81\xee\x1d\x6a\x8b\xdf\x59\x28\xbb\x14\x96\x65\xa0\xcc\x7c\x00\xba\x46\xf7\xc7\xde\x71\xbf\xe9\x3a\x32\x35\x8e\x80\x35\x8d\xce\x34\x51\xb9\x90\x45\x9f\x71\x04\x77\x5a\xe6\x42\xcb\xec\x99\x5d\x16\xeb\x8c\x7a\xc9\x9d\xbd\x9d\xe3\xb3\xaf\x8e\xc9\xf7\xe3\x2e\xe1\x5a\x68\x7b\xd7\x95\x15\xb7\x44\x67\xd5\x95\x9e\x5b\x8a\x18\xac\x7d\x4e\xc9\x73\xd4\x5e\x1d\x3d\x1f\x8e\x94\x62\x8a\xae\x33\xc9\x43\xf3\x7a\xa9\x7c\x67\xf4\x6a\xe5\x4d\x7e\x42\xac\x92\x28\x1f\x28\x95\xcf\xf1\x92\x56\xb1\xab\xb6\x5f\x2b\x1f\xe1\x65\xb1\x18\xcc\x40\xb9\xd8\xb4\x15\x8c\x16\xc3\x26\xaa\x3b\x83\xd9\x73\xcf\x7c\xf9\x97\xc2\x20\xd1\x7a\xdf\x1f\x27\x45\xf3\x1e\xe7\x44\x1b\x2a\x88\x97\xaf\x5f\xe2\x41\x03\xd6\x5b\xc8\x29\xd1\x5a\x04\x03\x35\x33\x25\xb3\xd8\x36\xd2\x8f\x2a\x66\xca\xbe\x31\x7b\xbd\x62\x2f\x9f\x88\x8d\x60\xbd\x27\xe2\xc0\xb3\xee\xac\x5c\xbd\x27\xe2\xde\x94\xf5\xd5\x71\x5a\xaf\xba\xc4\x1f\x38\x11\x1b\x3c\xaf\x3e\x11\x89\xa1\x1b\xcc\x4a\xd4\x26\xf0\xe8\x8f\xee\x98\xa7\x5f\xf6\x79\x02\x17\x8d\x69\x74\xfb\x3e\x3c\xb4\x60\xac\x7c\x67\x59\x5d\xc2\xc6\x01\x76\xf2\x5f\x90\x1b\xbf\x86\xe9\xc5\xbc\xe9\xbe\x96\xfd\x67\x01\xc2\x0a\x9f\x9d\xd2\x49\x82\x09\xcc\x15\x7d\x0a\x10\xbd\x4d\x1a\xbe\x03\xe5\xa4\xef\x64\x15\xc2\xe3\x52\xc6\x4b\x67\x9a\x65\x90\xb1\x58\x75\x14\xba\x46\xb9\x7b\x1d\x7f\xe6\x44\xd7\xa2\x50\x85\x8c\x45\x76\x83\x22\x41\xfd\x07\x45\xa7\x6f\x06\x5b\x27\x32\xca\xf7\x8b\xa4\x96\x11\x05\xcc\xb1\x09\x11\xc7\x68\x0c\x01\xa0\xdc\x48\x9f\x35\xd4\x08\x3e\x73\x7d\xc3\x85\xab\xb6\xd8\x7f\x69\xfb\x1f\x91\xad\xd1\xdf\x3a\xb8\xd8\xaf\xbf\x7d\x0b\xcf\x1a\xbe\x80\x8e\x2a\xdb\x45\x70\xd7\xd7\x56\x3b\x72\x23\xd9\xfe\x0f\x00\x00\xff\xff\x09\x00\x51\xc2\x47\x0e\x00\x00")

func nameServiceGeneratedTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_grpcGotemplate,
		"NAME-service/generated/transport_grpc.gotemplate",
	)
}

func nameServiceGeneratedTransport_grpcGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_grpc.gotemplate", size: 3655, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x9d\x53\x78\xae\x44\x7c\x8d\x8e\x48\xcd\x05\xa2\xf2\x09\x88\x50\x47\xce\x87\xc5\xca\xdd\x61\x60\x7f\x2f\x42\x17\xd9\x00\xa9\x76\xa6\xbf\xc7\xd0\x8a\xa3\xda\xf3\x41\xbd\x93\x9d\x5e\x8e\xd1\xcd\xa9\xc4\xab\xb7\x42\xa4\x6a\x72\x33\x97\xdd\xae\x90\x45\xe7\x3c\x45\xec\xa5\x35\x49\x6b\xce\x97\x15\xad\xc3\xd3\x06\xff\xc0\xf3\xbf\x48\xfa\xa9\x6f\x00\x00\x00\xff\xff\xaf\xf5\x0f\x3e\x69\x00\x00\x00")

func nameServiceGeneratedTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_httpGotemplate,
		"NAME-service/generated/transport_http.gotemplate",
	)
}

func nameServiceGeneratedTransport_httpGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_http.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersClientClient_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x52\x4d\x6f\x13\x31\x10\x3d\xc7\xbf\x62\x54\x55\x55\x36\x6a\x9d\x7b\x25\x0e\x2d\x6a\xab\x1e\x40\x55\xe1\x0f\x38\xbb\x93\x8d\x85\xbf\xb0\xbd\x50\x64\xf9\xbf\x33\x76\x9c\x94\x90\x8a\x20\xc4\x65\x35\x6b\xbf\x79\xef\xcd\x1b\xa7\x04\xdf\x65\xdc\xc0\x79\x44\xed\x94\x88\x78\xf7\x82\xfd\x14\xad\x87\xeb\x77\xc0\x73\x66\x4e\xf4\x5f\xc4\x88\xd0\x2b\x89\x26\x6e\x84\x19\x14\x7a\xc6\xa4\x76\xd6\x47\x98\xb3\x99\x5b\xc1\x59\x4a\x47\xfd\xfc\xe9\xf6\xb1\x62\x9e\x04\xd1\x5f\xe5\x7c\xc6\x3a\xc6\x58\x4a\x5e\x18\xa2\x3b\x97\x45\xe0\xb8\xeb\x13\xfa\x6f\xb2\x47\xfe\x01\xe3\xc6\x0e\x81\x0c\x2c\x97\x40\xf4\x92\x7f\x14\x1a\x73\x06\x12\x56\xa8\xc9\x4a\x80\x1d\x96\xad\x27\xd3\xff\x0a\x9a\xa7\x54\x87\x92\x66\xc0\x97\x37\x44\xde\xd7\x59\x6e\xfc\x18\xaa\x4e\x29\x60\xdf\x9c\xd2\x83\x2d\x15\xf0\x7b\xa2\x8d\xd2\x9a\x72\x5f\xce\xd1\x0c\x39\x77\x30\x5f\xb8\x15\xdf\xa3\xa8\xef\x19\xbf\x4e\x18\xe2\xe7\x1f\x0e\x1b\xc7\x25\xa0\xf7\xd6\x77\x89\xe6\x5d\x2e\xe8\x73\xd5\x52\xd6\x24\x57\x06\xff\x07\x67\x25\x43\x36\x2b\x54\x2d\x41\x27\xbc\xd0\x35\xc5\xc2\xca\x2b\xb6\x62\x2a\x48\xae\xc1\xd8\xd8\x50\xfc\x31\xdc\x8a\x80\xc5\x61\x83\x50\xaa\x37\xc3\x00\xfd\x14\xa2\xd5\xb0\x9a\x82\x34\x18\x02\x28\x3b\xca\x1e\xd6\xb4\x7e\x69\x22\x7a\xe7\x31\x4a\x33\x96\x6c\xb7\x3c\xf7\x4a\x8c\x24\x44\x13\x36\x19\xca\xe4\xd5\xd8\xee\xa7\xd5\x54\x2d\x96\xe5\xce\x6f\x03\x2a\x5e\x4f\x46\x97\xfe\x6f\x5a\x7f\x9b\x15\xbd\x6b\x98\xd7\xcf\x9b\xa9\x75\x07\xe7\xcf\xe8\x90\x7c\x0c\xdd\xe1\xf1\x9d\x99\x74\xd7\x48\x77\x23\x6e\x6f\xda\xdb\xbd\x86\x8b\xdf\x6f\x1e\xec\x61\x9c\x2a\x20\xfc\x99\xe2\x14\xc3\xeb\x42\x8e\xd7\x31\xab\xcb\x88\x93\x37\x70\xd1\x96\x72\x09\x46\x2a\x56\x40\x5b\xc8\xbe\xf8\x19\x00\x00\xff\xff\x59\xb7\xfe\xb0\x1a\x04\x00\x00")

func nameServiceHandlersClientClient_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersClientClient_handlerGotemplate,
		"NAME-service/handlers/client/client_handler.gotemplate",
	)
}

func nameServiceHandlersClientClient_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersClientClient_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/client/client_handler.gotemplate", size: 1050, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerServer_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x93\xc1\x6e\x13\x31\x10\x86\xcf\xf1\x53\x8c\x56\x11\x4a\x50\xe2\xbd\x57\xea\x05\x04\xa8\x87\x56\x15\xf4\x8e\x1c\xef\x64\xd7\xed\xae\xbd\xd8\xde\x26\xc8\xf2\x33\xf1\x10\xbc\x18\x63\x6f\x36\x24\xa1\xc0\xb1\x87\x28\x56\xfc\xcd\xef\x99\x7f\xfe\xf4\x42\x3e\x89\x1a\xa1\x11\xba\x6a\xd1\x32\x56\x96\xf0\xd0\x28\x07\x5b\xd5\x22\x48\xa3\xbd\x50\xda\x81\x6f\x10\xbe\xa0\x7d\x56\x12\xa1\xc2\xad\xd2\xca\x2b\xa3\x57\x40\x55\x20\x60\x23\x9c\x92\xe0\xc6\xfb\xa4\xa0\xba\xbe\xc5\x0e\xa9\x38\x61\x1c\x6e\x3c\x88\xd6\x19\x50\x5a\xb6\x43\x85\x6e\x62\xa1\x53\x15\x3d\xbb\x13\x16\x1d\x67\x8c\xca\x8c\xf5\xb0\x60\xb3\xaf\x50\xa0\xb5\xc6\xba\x22\x9f\xbd\xea\xb0\x60\x6c\x56\xd4\xa6\x15\xba\xe6\xc6\xd6\xe5\xbe\xd4\xe8\xcb\xd4\x21\xee\x7d\xba\x24\xae\x56\xbe\x19\x36\x5c\x9a\xae\xac\xcd\xfa\x49\xf9\x32\x7d\x5a\x53\x17\xff\xb8\xee\xd0\x5b\x25\x5d\x92\xe8\x37\x50\x84\xc0\xef\xdf\xdd\xe4\x4e\xee\x85\x6f\x60\x1d\x63\xc1\x96\x8c\x65\x6b\xee\x70\x37\xd9\x60\xd1\x0f\x96\xac\x11\xa0\xc5\xcf\x1f\xcf\xb8\x02\x47\xe3\x62\x8b\xce\x5d\xcc\x0f\x66\x3b\x99\xc7\xd9\x76\xd0\xf2\x44\x66\xb1\x3c\xfa\x1a\xd8\x6c\xd4\x84\xd4\xc2\xb8\x97\x3b\xd1\x61\x8c\x07\x22\x44\x16\x19\xf3\xdf\x7b\xfc\x1b\x41\x2d\xd8\x41\x7a\x02\x59\x08\x3b\x9a\x16\xe6\x1f\xf6\x28\x07\x6f\x2c\x5c\x5d\x03\x8f\xf1\xf8\xfb\x49\x79\xba\x3a\x72\xe7\xba\x49\xc7\x92\xe3\x08\x73\x75\x8e\x4d\x03\xdd\xa2\x6f\x4c\xe5\x08\x25\x7b\x42\x98\x2b\x3e\x56\xfe\xf6\xc0\x5d\x0c\xbf\x70\x89\x7b\xa9\xfd\xe5\xa9\xc0\x42\xfa\x3d\x1c\xd6\xcb\xdf\x8f\xdf\x2b\x4a\x10\xbc\xed\x37\x3c\x84\x4f\x26\xb7\x4e\xf8\x67\xfc\x36\xa0\xf3\x0f\xe4\xcb\xa1\x74\x09\x8b\x3f\x21\xd7\x1b\xed\xf0\x84\x5a\x41\x8e\xd8\x32\xa4\x6c\x5c\x03\x3d\x37\x1e\x94\x4e\x8b\x18\xf1\x34\xf3\xff\x95\x48\x61\x76\xf4\xe9\x31\xfb\x74\xc1\xdd\x52\x2a\x68\x5a\xfe\x51\x61\x5b\xb9\x94\x29\x2a\xc9\x86\x4d\xc2\x8f\x59\x0b\x62\xbc\x82\xac\x86\xf4\xcf\xca\x58\x3c\xc6\xe2\xcd\xd4\xd5\x0a\xb4\x6a\x59\xda\x25\x51\x79\xa7\x6b\xb8\x3c\x8d\x39\x99\x72\xa1\xc8\x3e\xbb\x15\x39\x65\xe7\x1b\x7d\x61\x91\xb3\xd7\xd8\xc2\x49\xeb\x91\xfd\x0a\x00\x00\xff\xff\x05\xcf\x17\xf8\x96\x04\x00\x00")

func nameServiceHandlersServerServer_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerServer_handlerGotemplate,
		"NAME-service/handlers/server/server_handler.gotemplate",
	)
}

func nameServiceHandlersServerServer_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerServer_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/server_handler.gotemplate", size: 1174, mode: os.FileMode(436), modTime: time.Unix(1477950696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateClient_handlerMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xcf\x4e\xc3\x30\x0c\xc6\xcf\xf4\x29\x7c\x98\xd0\x86\xb6\xec\x3e\x89\xc3\x40\x0c\x71\x80\x03\xf0\x02\x59\xeb\x75\x96\xda\xa4\x24\x29\x0c\x45\x7d\x77\x9c\x34\x1d\x7f\x36\x01\x42\xdc\xd2\xf8\xf3\xe7\xcf\xbf\xc6\x7b\x78\x21\xb7\x85\x91\xc3\xba\xa9\xa4\xc3\xab\x1d\xe6\xad\xd3\x06\x16\xe7\x20\xba\x2e\xcb\xbc\x37\x52\x95\x08\x23\x0a\x57\x07\x3a\xf1\x80\xe6\x99\x72\x14\xb7\xe8\xb6\xba\xb0\xdc\x32\x9f\x83\xf7\x23\x12\x77\xb2\xc6\xae\x03\xe2\x06\xac\x51\x39\x0b\x83\x36\xdb\xb4\x2a\xff\x28\x1a\x7b\x1f\x63\x90\x2a\x70\x77\x64\xc8\x65\x45\x6c\xb0\x34\xa5\x8d\x73\xc2\x01\xf6\xcd\xde\x5f\xeb\x70\x02\xb1\x62\x5b\x47\x5a\x85\x7a\xb8\x47\x55\x74\xdd\x04\xc6\x67\xcd\x5a\xec\x55\xdc\x77\x8f\x4f\x2d\x5a\xf7\xf8\xda\x60\xf2\x98\x02\x1a\xa3\xcd\xc4\xf3\xbe\xb3\x84\xa4\xe6\x49\x61\xe7\x3f\x84\x82\x19\x73\x38\x09\x56\x09\x5e\x23\x8d\xac\x23\xc0\xe0\x2a\xa2\x36\x6a\xa2\x88\x36\xa0\xb4\x4b\x2a\x71\x63\x2f\xa4\xc5\x10\x2e\x49\x18\xe8\xb2\x28\x20\x6f\xad\xd3\x35\xac\x5b\x4b\x0a\xad\x85\x4a\x97\x94\xc3\x86\xff\x15\x29\x87\xa6\x31\xe8\x48\x95\x01\x6b\xef\xb3\xaa\x64\xc9\x83\x78\xb9\x34\x86\x71\xbc\x07\x1b\x3e\x3e\x15\x4c\x0f\x26\x04\xfd\x11\xd9\x3f\xa3\xfa\x2d\xa8\x03\x48\xa9\x38\x44\xed\xcb\xe9\xed\x2d\xe0\x6b\xe1\x3b\x28\x47\x91\x44\x2a\xae\x35\x0a\x4e\x13\x9d\x29\x28\xaa\xb2\x20\x8b\xef\x6b\x90\xf3\xe9\x2d\x00\x00\xff\xff\xf0\xfb\x3d\xfc\x4e\x03\x00\x00")

func nameServicePartial_templateClient_handlerMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateClient_handlerMethods,
		"NAME-service/partial_template/client_handler.methods",
	)
}

func nameServicePartial_templateClient_handlerMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateClient_handlerMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/client_handler.methods", size: 846, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceInterface = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\x31\x0e\xc2\x30\x0c\x45\x67\x7a\x0a\x0f\x1d\x5a\x54\x72\x00\x24\x26\x06\x26\x18\x80\x0b\x94\xf6\x03\x19\x48\x8a\x63\x50\x91\x95\xbb\x63\x44\x07\x24\x26\x7b\x78\xff\xbf\x2f\xaf\x01\x74\x00\x3f\x7d\x07\xf2\x41\xc0\xe7\xd6\x3e\x2d\x54\xb9\x0d\x17\x50\xe9\x69\xb9\x22\x37\x21\x6e\x0b\xb9\xc6\x3e\xe5\x5c\xcc\x54\x4b\xef\x76\xed\x0d\x39\x57\x9d\x8c\xd4\x45\x8b\x8f\xe2\xd6\xdf\xdb\x58\x1d\xcd\x87\x93\x53\xdd\xc4\x0f\x66\x55\x6e\x8f\xfb\x03\x49\x8e\x66\x9d\xa2\x35\x55\xff\x50\x1a\x62\x48\xf8\xa1\x1a\x02\x73\xe4\xda\x66\x2d\x08\xa1\x37\x7f\x2e\xde\x01\x00\x00\xff\xff\xf9\x3a\x09\x61\xbc\x00\x00\x00")

func nameServicePartial_templateServiceInterfaceBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceInterface,
		"NAME-service/partial_template/service.interface",
	)
}

func nameServicePartial_templateServiceInterface() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceInterfaceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.interface", size: 188, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xcd\x4e\xeb\x30\x10\x85\xd7\xc9\x53\x9c\x45\x74\xd5\x5e\xa5\xee\xbe\x52\x57\x08\x58\x81\x10\xb0\x47\xc1\x19\x5a\x97\xc4\x0e\xf6\x04\x82\xac\xbc\x3b\x4e\x9c\xfe\x01\x12\xab\x8c\x94\xef\x3b\xb6\xcf\x78\x8f\x0f\xc5\x5b\x64\x4c\x75\x53\x15\x4c\x97\x1d\xc9\x96\x8d\xc5\x6a\x0d\xd1\xf7\xe9\x01\xb8\x2b\xe4\x6b\xb1\xa1\xdb\xa2\xa6\xe1\xdf\x0f\x41\x9c\x00\xc1\x0b\xa2\x2d\xf4\x86\x90\xa9\xdf\xf1\x07\xb2\xef\x4a\x92\xb8\x21\xde\x9a\xd2\x05\x65\xb9\x84\xf7\x22\xfa\x50\x01\xa7\x9a\x34\x3b\xec\xc9\xf4\xa5\xd5\x12\x33\x17\xa8\xec\xec\xb0\x09\x98\x1f\xf5\x99\xe4\x0e\xd2\x68\xa6\x8e\xc5\x45\xfc\xe6\x50\x1a\xff\x9b\x67\xe1\xfd\xb5\x19\x9f\x21\xee\xe9\xad\x25\xc7\x8f\x9f\x0d\x4d\xe2\x1c\xb3\xef\x88\x6b\x8c\x76\x74\xc2\xe4\x20\x6b\x8d\x9d\xfb\x34\x79\xc2\x1a\xe1\xa8\x38\x28\x9d\x26\x76\xc2\x87\x37\xff\x95\x13\xfc\xe4\xd0\xd2\x6e\x6c\x49\x9d\x73\x57\x8a\xaa\xd2\x61\x11\xca\x49\x92\xb1\x9e\x29\x2e\xdb\x8d\x19\xe8\xfb\x15\xc6\x14\xd2\x65\xc4\xfa\xe1\x0e\xdc\x5a\x8d\x7f\xfb\xbb\xe4\xd0\xaa\x4a\x87\x55\x06\x2a\xae\x66\x81\x38\x1e\xa7\xaf\x00\x00\x00\xff\xff\x83\x97\xcb\x10\x09\x02\x00\x00")

func nameServicePartial_templateServiceMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceMethods,
		"NAME-service/partial_template/service.methods",
	)
}

func nameServicePartial_templateServiceMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.methods", size: 521, mode: os.FileMode(436), modTime: time.Unix(1477950095, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-service/NAME-client/client_main.gotemplate": nameServiceNameClientClient_mainGotemplate,
	"NAME-service/NAME-server/server_main.gotemplate": nameServiceNameServerServer_mainGotemplate,
	"NAME-service/generated/client/grpc/client.gotemplate": nameServiceGeneratedClientGrpcClientGotemplate,
	"NAME-service/generated/client/http/client.gotemplate": nameServiceGeneratedClientHttpClientGotemplate,
	"NAME-service/generated/endpoints.gotemplate": nameServiceGeneratedEndpointsGotemplate,
	"NAME-service/generated/transport_grpc.gotemplate": nameServiceGeneratedTransport_grpcGotemplate,
	"NAME-service/generated/transport_http.gotemplate": nameServiceGeneratedTransport_httpGotemplate,
	"NAME-service/handlers/client/client_handler.gotemplate": nameServiceHandlersClientClient_handlerGotemplate,
	"NAME-service/handlers/server/server_handler.gotemplate": nameServiceHandlersServerServer_handlerGotemplate,
	"NAME-service/partial_template/client_handler.methods": nameServicePartial_templateClient_handlerMethods,
	"NAME-service/partial_template/service.interface": nameServicePartial_templateServiceInterface,
	"NAME-service/partial_template/service.methods": nameServicePartial_templateServiceMethods,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-service": &bintree{nil, map[string]*bintree{
		"NAME-client": &bintree{nil, map[string]*bintree{
			"client_main.gotemplate": &bintree{nameServiceNameClientClient_mainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"server_main.gotemplate": &bintree{nameServiceNameServerServer_mainGotemplate, map[string]*bintree{}},
		}},
		"generated": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"grpc": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientGrpcClientGotemplate, map[string]*bintree{}},
				}},
				"http": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientHttpClientGotemplate, map[string]*bintree{}},
				}},
			}},
			"endpoints.gotemplate": &bintree{nameServiceGeneratedEndpointsGotemplate, map[string]*bintree{}},
			"transport_grpc.gotemplate": &bintree{nameServiceGeneratedTransport_grpcGotemplate, map[string]*bintree{}},
			"transport_http.gotemplate": &bintree{nameServiceGeneratedTransport_httpGotemplate, map[string]*bintree{}},
		}},
		"handlers": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"client_handler.gotemplate": &bintree{nameServiceHandlersClientClient_handlerGotemplate, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"server_handler.gotemplate": &bintree{nameServiceHandlersServerServer_handlerGotemplate, map[string]*bintree{}},
			}},
		}},
		"partial_template": &bintree{nil, map[string]*bintree{
			"client_handler.methods": &bintree{nameServicePartial_templateClient_handlerMethods, map[string]*bintree{}},
			"service.interface": &bintree{nameServicePartial_templateServiceInterface, map[string]*bintree{}},
			"service.methods": &bintree{nameServicePartial_templateServiceMethods, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

