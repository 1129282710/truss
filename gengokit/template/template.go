// Code generated by go-bindata.
// sources:
// NAME-service/NAME-client/client_main.gotemplate
// NAME-service/NAME-server/server_main.gotemplate
// NAME-service/generated/client/grpc/client.gotemplate
// NAME-service/generated/client/http/client.gotemplate
// NAME-service/generated/endpoints.gotemplate
// NAME-service/generated/transport_grpc.gotemplate
// NAME-service/generated/transport_http.gotemplate
// NAME-service/handlers/client/client_handler.gotemplate
// NAME-service/handlers/server/server_handler.gotemplate
// NAME-service/partial_template/client_handler.methods
// NAME-service/partial_template/service.interface
// NAME-service/partial_template/service.methods
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameServiceNameClientClient_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xdd\x6e\xdb\x38\x13\xbd\x16\x9f\x62\x2a\xa4\x80\x5c\x38\x74\x3f\xe0\xdb\x1b\x03\xbe\x48\xb3\x69\x1b\x60\x5b\x18\x49\x80\xde\x14\x58\xd0\xd4\x48\xe2\x46\x22\x55\x92\x56\x12\x10\x7a\xf7\xc5\x50\xb2\x6c\x37\x31\xb2\x7f\x01\x12\x89\xc3\x99\x33\xc3\x99\x73\xa8\xb4\x42\xde\x8b\x12\xa1\x11\x4a\x33\xa6\x9a\xd6\x58\x0f\x19\x4b\x52\xd4\xd2\xe4\x4a\x97\x8b\x3f\x9c\xd1\x29\x4b\xd2\xa2\x16\x65\x7c\x36\x9e\x1e\xc6\xd1\x5f\xe7\xad\x34\xba\x1b\x5f\x95\x2e\xa3\xd5\xab\x06\x53\xc6\x92\xb4\x34\xb5\xd0\x25\x37\xb6\x5c\x3c\x2e\x34\xfa\x85\x34\xda\xe3\x63\x04\x28\x8d\x29\x6b\xe4\x07\x2e\xa5\x6d\xe5\x10\xa6\x7c\xb5\xdd\x70\x69\x9a\x45\x7b\x5f\x2e\xd0\x5a\x63\x1d\xed\x2c\x16\x70\x57\x29\x07\xb7\x68\x3b\x25\x91\x25\xb2\x56\xa8\xfd\x67\xa1\xf3\x1a\x2d\xa4\x21\xf0\xeb\x78\x84\xb5\xf0\x15\x9c\xf7\x3d\x2c\xaa\x61\xcf\x2d\x06\xd7\x94\x25\x94\x66\x58\xbc\x18\x50\xa2\x46\x2b\x3c\xe6\x63\xc4\x58\x56\x52\x79\xdf\xfe\x9d\x30\xf2\x4f\x59\xd2\x6e\xa2\xfb\xfa\xc3\x71\x40\xca\x66\x8c\x75\xc2\x52\xaf\x7f\x87\x15\x8c\x8d\xe4\x6b\x61\x1d\x5e\x6b\x3f\x59\xa9\xa7\xfc\xb6\xad\xd5\x68\xa2\x71\xf0\x4b\xd3\xb4\x42\x8e\x96\xa1\x3d\xfc\x9b\x15\x6d\x31\x58\xda\x0d\xbf\xc1\x52\x39\x8f\x36\x04\x3e\x36\x8b\x7f\x15\x0d\xf6\x3d\xad\xd0\x52\x76\x56\x6c\xb5\x8c\x83\xcf\x66\x10\xc6\xe6\x22\x88\x3c\x97\xb5\x82\xd6\xa2\xdb\x36\xe8\x40\x1b\x70\x03\x02\xe4\xca\x49\xd3\xa1\x7d\x02\xf7\xe4\x3c\x36\x73\x10\x3a\x07\x7c\x6c\x51\x7a\x07\x5b\x87\xd6\x81\x37\x11\xa9\xb5\xa6\x53\x39\x82\xaf\x28\xcc\xa2\xf4\x04\x6c\xd1\x39\x30\x05\x08\xbd\xc3\xe4\xc3\x40\x87\x6c\xad\x57\x46\x83\x72\x60\xb1\xa8\x51\x7a\xcc\x41\xe9\x08\x47\x30\x54\xd5\x46\x69\x61\x9f\x62\x5a\x32\x8d\x66\x9a\xc9\x48\x64\xb7\x8c\xc6\x73\x6f\x85\x76\xd4\x70\x4e\x69\x81\xc8\xeb\x22\x12\x85\x76\xc2\x2a\xb3\x75\xbb\x50\x69\xb4\xf3\x76\x2b\xbd\xb1\x0e\x36\xc6\x57\xe3\x91\xa0\x32\xce\x2f\xa3\x22\x76\x83\x60\x2c\x19\x87\x16\xf9\x70\x41\xd8\xc3\xcf\x2a\xe6\xe0\xb7\xd1\x31\x4b\x69\x37\xa6\x4e\xe7\x90\xd2\xef\xe7\xbb\xbb\xf5\x51\x0b\xf2\xdc\x75\x32\x9d\xb1\x24\x12\xf2\x34\x12\xed\x4e\x48\xcb\x5f\xde\xff\xff\x3d\xbd\x94\x37\xeb\x4b\xc8\x08\x74\x76\x02\xb5\x41\x5f\x99\x1c\xe0\x65\xd4\x61\x97\x90\x42\xb0\x42\x97\x08\x67\x4a\xe7\xf8\x38\x87\x33\x05\xcb\x15\x4c\xac\xf9\x12\x1d\x5d\xdf\x87\xa0\x8a\xd1\x89\x16\x58\x3b\xa4\xe7\x9d\xf9\xcd\x3c\xa0\x85\x33\x35\x12\x2c\x04\xd4\xf9\xf4\x48\xe7\xc9\x3f\xcb\x30\x9f\x70\x4e\x65\xa0\x53\xce\x0e\x06\x12\x02\xbf\x8c\x03\xbd\xb0\xa5\xe3\x17\x75\xfd\x91\x86\xde\xf7\xe4\x95\xc4\xc3\x47\x71\x65\x44\xfd\x29\x68\x47\xed\x76\xc3\x43\xf8\x64\x28\xc1\xbe\xb2\x4f\xe8\x8f\x44\x93\x24\x68\x87\x29\x45\xcd\x45\x60\x55\xc0\xbb\x89\x0a\x6f\x56\x90\xa6\xa4\xa5\x1d\xee\x9c\x3c\x61\x05\xfb\xcb\x83\x7f\xc5\x87\x6c\x8a\x98\xb1\xa4\x07\x6a\x25\x10\xce\x44\x84\x3d\x8e\x34\x5a\x0f\x20\xcb\x15\x44\x2a\xfc\xaa\x44\x9d\x4d\xae\xf3\xc1\xf8\x4d\xf9\xea\x5a\x3b\x94\x5b\x8b\xd9\xec\xc0\x78\xa7\x1a\x34\x5b\x9f\xd1\x95\xcc\x6f\x51\x1a\x9d\xcf\x88\x1d\xaa\x88\xa0\x6f\x56\xa0\x55\x1d\x33\x25\x45\xe3\xf9\xc7\xd6\x2a\xed\x8b\xcc\x38\x7e\xeb\x73\xb4\x76\x0e\xe9\x15\x9d\x15\x1e\x2a\x55\x93\x94\x45\xad\x74\x19\xf1\x49\x37\x1a\x25\x69\x76\x09\x6f\xbb\x34\x96\x49\xd8\x89\x71\xfc\xea\x51\xf9\xec\x7f\xb4\xea\x59\x92\xe4\x58\xa0\x8d\xfe\xfc\xb2\x36\x71\x06\xcf\x5a\xb4\xbf\x96\x63\x8b\xc8\x79\xdf\x1d\x2a\xf0\x54\x7d\x71\x16\x4b\xba\xa7\x2c\x36\xc6\xe3\xa4\x07\xd7\xa2\x54\x85\xc2\xfc\xbb\x8e\x8a\x38\x2c\xab\x67\x2f\xb4\xe0\x95\x0c\x6f\xbb\xef\x7a\x7f\xca\x63\x34\x96\xb8\x07\xe5\x65\x05\xef\x46\xdd\x05\x16\x02\x3c\x28\x5f\xc1\x99\xbf\x8a\x7c\x27\x26\xee\xa5\x40\xa6\x33\x7f\xf5\x5c\x05\x34\x74\xe1\x90\x84\xf9\x8c\xf9\xe9\x92\xda\x1b\xc2\xf9\x80\x1c\xa5\x12\x51\x0e\x88\x4f\x40\xf4\xb2\x8b\xa2\xaf\x0d\x45\x45\xca\xd3\x81\x47\xee\x46\x20\xfe\x45\x58\x57\x89\xbd\x54\x06\xf4\xa8\x2f\x5a\x58\xfc\xb1\x45\xe7\x27\x06\x1e\x7d\x6f\x79\x08\x53\x65\x59\x08\x7f\xbd\x24\x92\x30\xbf\x14\x75\x4d\xc6\x49\xcf\x91\x3a\x2f\xf0\xf2\x15\x62\x4a\x51\x47\x4a\x9e\x2c\xed\xe7\xc1\xfd\xc4\xcf\x38\xbc\x24\xe9\xa6\x33\xee\xbe\x4c\x87\xa7\x1b\xff\x6f\xe1\x1f\x84\xbc\x2f\xad\xd9\xea\x9c\x54\x36\x76\xe7\x5f\x16\xfe\x42\xbe\xd7\x4b\x1e\xd1\xd7\x04\x5e\xeb\x2c\x1d\xba\x0d\x37\x43\x45\x98\x47\x82\x2c\x23\xed\x8f\x1c\xff\xa3\x31\x1d\xe5\x1e\x6e\x47\xb8\x41\xd7\x1a\x9d\x9f\xce\xdd\xcd\xd8\x01\xbb\x0e\x78\x96\x63\x21\xb6\xb5\x5f\xbe\x2e\x41\xa5\x3b\x51\xab\x1c\x46\x91\xbd\xfd\x11\xbb\x34\xac\x9e\x8b\xb2\x67\xec\xcf\x00\x00\x00\xff\xff\xd5\xf6\xe9\x43\xe0\x0a\x00\x00")

func nameServiceNameClientClient_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameClientClient_mainGotemplate,
		"NAME-service/NAME-client/client_main.gotemplate",
	)
}

func nameServiceNameClientClient_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameClientClient_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-client/client_main.gotemplate", size: 2784, mode: os.FileMode(436), modTime: time.Unix(1478025927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceNameServerServer_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xdf\x6f\xdb\x36\x10\x7e\x16\xff\x0a\x56\xe8\x00\x69\x50\xa8\x0e\x5b\xf7\x10\xd4\x0f\xad\x9b\xa5\xc1\x92\xc0\x88\x3d\xec\x99\x96\xce\x14\x11\x89\x14\x48\xca\x75\x20\xf8\x7f\x1f\x8e\x94\x1c\x39\x75\x9c\x3d\x34\x40\x2c\x8b\x77\xfc\x78\xdf\xc7\xfb\xe1\x96\x17\x8f\x5c\x00\x6d\xb8\x54\x84\xc8\xa6\xd5\xc6\xd1\x84\x44\xf1\xa6\xe6\x22\xc6\x67\xe3\xf0\xa1\x60\x7c\xe4\x95\x73\xed\xf4\x7b\xde\xb6\x46\x6f\x70\x45\xdb\xf0\x99\x5b\x29\x14\xaf\xf1\xc5\x3e\xd9\x82\xd7\x75\x4c\x48\x94\xe7\xf4\xf7\x92\x2e\xb8\x71\x4f\x24\x8a\x85\xae\xb9\x12\x4c\x1b\x91\xef\x72\x84\x2a\xb4\x72\xb0\xf3\xa7\x08\xad\x45\x0d\x6c\xe2\x22\x4c\x5b\x0c\x18\xd7\x9a\xfe\x2d\x1d\x7a\x49\x57\x75\x6b\x56\xe8\x26\x17\xfa\xe2\x51\xba\x1c\xff\x41\x95\xad\x96\x2a\xe0\x9c\xf4\xa8\xb5\x18\xa0\x56\x95\xb4\x74\x09\x66\x2b\x0b\x20\x51\xc5\x55\x59\x83\xa1\x71\xdf\xb3\x1b\x2f\xc4\x82\xbb\x8a\x5e\xec\xf7\x34\x1f\x6c\x36\xb7\x60\xb6\x60\x62\x12\xd9\x6d\x71\xd2\x53\x80\x02\xc3\x1d\x94\x31\x89\xda\xb5\x77\x59\x7c\x39\x76\x8a\x09\x49\x09\xd9\x74\xaa\xf0\xb2\x27\x29\xed\x49\xb4\xe5\x06\x75\x8f\x4a\x58\x77\xe2\x73\x59\x1a\xea\xff\x66\x14\x2f\x82\x2d\x9d\x91\x4a\x24\xb1\xb7\x32\x5e\x96\x26\xce\x68\x7c\xf9\xf1\xc3\x9f\x1f\xf0\xcb\x57\x5c\xa6\x5c\x95\xb4\x01\x67\x64\x61\x69\x2d\xad\x03\x45\xd1\x13\xac\x8d\x53\x12\x45\x78\x57\xcf\xc0\x2f\x91\xd1\x3a\x05\xfe\xe8\x81\xbf\xad\x56\x8b\x53\x58\x78\x1f\xaf\x63\xa1\x75\x8a\xf5\x87\xc7\x12\x0f\x8b\x39\x4d\x10\x31\x3d\x01\x99\x92\xc8\x63\x2c\xb8\xb1\x90\xa4\xe1\x82\x6e\xb5\x10\x52\x09\x5a\x6a\x14\x8a\x05\x95\x6a\x2d\x04\xf8\x07\xbb\xf5\x5f\x49\xd4\x93\x28\x1a\x96\x67\xde\x70\x0f\xdf\x6f\xb5\xd8\x34\x2e\x78\x24\xda\xb2\xa5\x2b\x75\xe7\xd2\x13\x9e\xf3\x90\x79\x49\x58\x4f\xd9\xbf\xd2\x55\x49\xec\x6c\x9c\x79\x8f\xaf\xb0\xe1\x5d\xed\x56\xb2\x01\xeb\x78\xd3\xfe\xb3\x9a\xff\x7f\x14\x4c\x7e\x30\xc7\x48\x73\xbf\x96\x92\x68\x4f\x06\x14\x24\x92\xc4\x8d\x15\xa8\x53\x05\x75\xad\x51\x92\x12\x36\x30\xd2\x3d\xf2\x10\x5a\x97\xeb\x27\x88\x07\x95\xbe\x74\x56\x2a\xb0\xf6\x58\x26\x1b\xf2\x9a\xb6\x6b\xd6\xf7\xd7\xfa\x9e\x37\x40\xd9\x90\xec\xec\x1a\x1c\x2e\xec\xf7\x4b\x9f\xcf\x41\xc1\x71\xc7\x8c\x0e\xe9\x8e\xb4\x86\x1d\x09\x52\xce\x73\xbc\xb1\x03\x72\x3d\xdc\xce\x34\xef\x2a\x30\x80\xc4\x7c\x60\x57\x43\x2d\x3e\x07\xd6\xf7\x86\x2b\x01\xf4\xbd\xa4\x97\xb3\xe7\x70\xee\xc0\x55\xba\xb4\xfb\x7d\x08\xbd\xef\x57\xfa\x56\x7f\x07\x43\xdf\x4b\x16\xe2\x3c\x40\x8d\xf5\xcd\xc6\x95\x10\xfb\xb9\x2d\x33\x6a\xb7\x05\xbb\xe3\x8f\xd0\xf7\x3f\x58\x93\x81\xcd\xc0\xef\x73\x59\x1e\x8e\xa0\xce\xf0\x42\x2a\x91\x51\xa9\xac\x33\x5d\x03\xca\x71\x27\xb5\xf2\x8c\x47\xf6\x23\xe3\xa8\xef\x41\x95\x48\x61\xdc\x6f\x91\x23\x1e\x3d\x9e\x65\xfb\xb7\x14\xc0\xf6\xe0\xd9\xfc\x10\xe7\x25\xd6\xd9\x19\x96\xd9\x24\x80\x41\xfe\x3b\x28\x2a\xae\x64\xc1\xeb\xe7\x0b\x00\x63\x0a\x3c\xb8\xe1\x8f\x90\xa0\x99\x82\x31\x1a\x93\xb1\x70\x3b\x34\x0c\x6d\x98\x7d\xe1\xc5\xa3\x30\xba\x53\xe5\x58\x8c\x37\xca\x81\x31\x5d\xeb\x0e\xe9\x41\x22\xa1\x29\xf6\xb1\xd0\xc2\xa2\x17\xc8\x58\x74\x7e\x10\x64\xf4\x37\x94\x37\x4c\x05\x76\xaf\x9d\xdc\x3c\x25\x45\x46\x87\xe1\xc0\x96\x37\xd7\x37\xf7\xab\xa3\xf7\xd5\xd5\xc3\x1d\xee\xf1\xf1\x7e\xba\xa0\x9b\xc6\xb1\x2b\x8c\x74\x93\xc4\xbf\x60\x65\x7e\xba\x28\xb0\x82\xc6\xe0\x42\x07\x0c\x6d\xe5\x44\x64\x43\xb1\x5e\xbe\x55\xf3\x86\x2b\x8b\xad\x1a\xab\xcc\xf7\x5a\x5f\x63\x51\x83\x3b\x7d\x87\x1c\x2a\x02\xee\xba\x9d\x2f\x89\x86\x7d\xf3\x62\x24\x71\xee\xfd\xc3\x30\xcc\xe3\x2c\xb8\x07\xa3\xf9\x0b\x23\xf1\x16\x76\xa3\x4a\xd8\xa5\x67\xb6\x16\x4d\x59\x4b\x05\xaf\x23\xcc\x83\xc3\x39\x0c\xfc\x90\xf5\x19\x8c\x45\x70\x38\x87\x61\x9f\x9a\xb5\xae\x5f\x87\x58\x7a\xfb\x39\x04\x2c\x9f\x33\x31\xac\xd0\x9c\x7a\x7d\xa7\x3d\x6e\x98\x1b\xbf\x1e\x06\xe1\x34\x0d\x3c\xd4\xad\xbf\xe5\xcf\xaa\xf4\x37\x91\x3c\x7b\x66\xb4\x99\xe6\x84\x1f\x5e\x87\x2b\xfd\x29\x39\x81\x90\x61\x98\x8e\xb5\x8d\x6d\x05\x57\x07\x7e\x49\xe1\x76\xd9\xa1\x83\xd8\x6c\x68\xdf\xe9\x2b\x24\xc7\x99\xfc\x26\xc7\xd1\x31\xa3\xd5\x94\xa2\x9f\xa9\x3f\x97\x22\x42\x86\xac\xaf\x55\x86\xdd\x01\xb7\x2b\x70\x43\x48\x49\xec\x8a\x16\x43\x1f\x7f\x02\x60\xe8\x72\xe3\x1d\xdf\xcd\xa8\x92\xb5\x3f\xf9\xc0\x06\x8c\xc1\x57\x03\xae\x33\x8a\x44\xbe\x37\x45\xd6\x6c\xa7\xfa\x5d\x3f\x2c\xe6\x61\x10\xbd\x90\xcf\x77\x0d\xf4\xf4\xbf\x28\xc6\xda\x33\xbe\xf2\xda\x35\x7b\x00\x81\x31\x99\xbe\x3f\xf4\xd1\xe9\x54\x4b\x6c\x46\xad\xd9\xbe\x9a\x61\x53\x06\x63\xb8\x96\x05\xc1\x6b\x35\x95\xf9\xa1\x53\xef\x8e\x67\x35\xec\xa4\xf3\x5d\x08\x37\xa6\x64\x4f\xfe\x0b\x00\x00\xff\xff\x5d\x02\xfa\xc2\x49\x0b\x00\x00")

func nameServiceNameServerServer_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameServerServer_mainGotemplate,
		"NAME-service/NAME-server/server_main.gotemplate",
	)
}

func nameServiceNameServerServer_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameServerServer_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-server/server_main.gotemplate", size: 2889, mode: os.FileMode(436), modTime: time.Unix(1478025927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x55\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\x2a\x04\x85\x14\x28\xd4\x3d\x85\x2f\xeb\x4d\x83\x2d\x9a\xd4\xc8\x06\xed\x61\xb1\x28\x18\x6a\x2c\x13\xb6\x49\x95\xa4\x1d\x1b\x82\xfe\x7b\x31\x24\xe5\xc8\xde\x64\x0f\x41\xc4\xe1\x9b\x0f\xbe\x99\x37\xae\x6b\x58\x08\xb9\x16\x2d\x42\x6b\x3b\x09\x9d\x35\x7b\xd5\xa0\x03\x01\xed\xd3\x62\x0e\x72\xa3\x50\x7b\x58\x1a\x0b\x7e\x85\xd0\xf7\xfc\x2b\xda\xbd\x92\xc8\x1f\xc5\x16\x87\x01\x5c\x3a\xb2\x6e\x12\x86\x31\xb5\xed\x8c\xf5\x50\xb0\x2c\x6f\xcd\x46\xe8\x96\x1b\xdb\xd6\x87\x5a\xa3\xaf\xa5\xd1\x1e\x0f\x3e\x0f\x77\xa6\xdd\x20\x9f\x40\xc8\xfd\xe3\x9b\x7a\x8b\x5e\x34\xc2\x8b\x00\x51\x7e\xb5\x7b\xe1\xd2\x6c\xeb\x6e\xdd\xd6\x68\xad\xb1\x2e\x67\xe7\x37\xad\xb9\x59\x2b\x5f\xd3\x1f\xea\xa6\x33\x4a\x53\x62\x8a\xe5\xad\xd0\x2e\x54\xf9\x01\xfe\x04\x48\x45\xb1\xac\xae\xe1\x79\xa5\x1c\x24\x0e\x58\xe6\xf6\x12\xf2\xbe\xe7\x5f\xc2\x73\x17\xc2\xaf\xe0\x66\x18\xa0\x6e\x51\xa3\x15\x1e\x9b\x9c\x65\xdd\x4b\x80\x2c\x3e\x9d\x83\x72\x56\x32\x56\xd7\xf0\x88\xaf\x60\xd1\xef\xac\x76\x20\xf4\xc8\x27\xbc\x08\xb9\xc6\x06\x5e\x8e\x17\x9d\x90\x46\x6b\x94\x5e\x19\xcd\xe1\x8b\x07\xe5\xa8\x2f\x6c\xb9\xd3\x92\x22\x15\x74\x0d\xd7\x54\x2f\x9f\x07\x87\xb9\xd1\xba\x02\xd3\x91\x87\x03\xce\x93\xf9\xaf\x60\x28\xa1\xe8\x5e\x78\xdf\xdf\x1b\xea\x26\x9c\x7a\x7b\x8f\x3e\xb6\x97\x0c\x68\x2b\x08\xdc\x96\xd0\xb3\x6c\x2f\x2c\x48\x99\xaa\x99\x1b\xbd\x54\x2d\x63\x19\xcd\xc7\xbf\x15\x2c\xe1\x76\x06\x56\xe8\x16\x4f\x19\x7b\x96\x65\x68\x2d\x5d\x2c\x8b\x5f\xa5\x2c\x59\x96\xa9\x25\x05\x84\x5f\x66\xa0\xd5\x26\x20\xb2\xc8\x00\x9d\x53\x32\xc7\xff\xb1\xa2\x2b\xd0\xda\x0a\x72\x29\xb4\x36\x1e\x44\xd7\x6d\x8e\x29\x72\x4e\x81\x06\x96\x0d\x8c\x65\x72\xf2\x24\x47\x99\xbe\x7d\x3f\x6b\xf0\xd9\x9b\x29\xdd\x7b\xb7\x9f\x70\x69\x2c\x16\x54\x4c\x1a\xd0\xbf\xc5\x66\x87\xee\xd9\xdc\x3f\x2d\xe6\x0f\x69\xee\x0a\x29\xf9\x0a\x45\x83\xd6\x95\x65\x45\xe9\xb3\xbe\xbf\x81\x57\xe5\x57\x70\xe5\xef\x28\x39\x1f\x06\x96\x4d\xac\xdd\xba\x0d\xec\xde\xce\x08\xc1\x93\xdc\x22\xbf\x94\x8d\x90\x91\xb3\x2b\x35\x82\xc6\x46\x3c\xa0\x5f\x99\xc6\x45\x60\xe0\xbe\xef\x9f\xcd\x9f\xe6\x15\x2d\x5c\xa9\xa4\xc1\xbb\x34\xd7\x30\x0e\x38\x1f\x2d\xc1\x2b\xf0\x4b\x69\x3e\x76\x9c\xc1\x39\x23\x8f\xf8\x1a\x49\x29\xa2\x2f\x31\xa2\xab\xf4\x9d\xf7\xfd\xf8\xa6\x61\xe0\x7d\x3f\xad\x37\x1a\xf3\x29\x54\x5d\x1a\xdd\x5e\xf2\x3b\x2d\x4d\x83\x44\xec\x04\xf1\x84\xff\xed\xd0\xf9\x29\xee\x33\xbe\x8b\x73\x9d\xd1\x0e\x47\xe0\x74\x84\xaf\x14\x1f\xaf\x9f\x8f\xdd\x58\x50\x3f\x8c\xd8\xb3\x51\xe1\x9c\x27\x7b\x79\xa2\xac\x28\x83\x25\x75\x06\x75\x93\xba\x99\xbe\xc6\x0f\x36\x4e\x6c\x7c\x4d\xf4\x75\x3d\x01\xa6\xbd\xbc\x6c\x24\x09\x3f\x84\xfb\xa1\x07\xb7\x00\xf0\xb3\xe6\x56\x6f\xb9\xb3\xa1\x22\xa1\xb0\x81\x31\x7f\xec\xf0\x4c\x8b\xe0\xbc\xdd\x49\x4f\xa2\x4a\x63\x0a\xdf\xbe\x3b\x6f\x95\x6e\x09\x5f\xd7\x30\xd5\x02\xad\x0f\x01\xb4\x3c\xc2\xc9\xaf\x84\x87\xad\x69\xd4\x52\x61\xd8\x2b\x93\xa5\x43\x3a\x0f\xd9\xce\xfc\xc9\xb5\xb8\x9e\x16\x50\x46\xf9\xb2\xb8\x92\xe6\xfe\x30\xaa\xe8\x2b\xea\xa6\x58\xe3\x31\x2c\xa1\x58\x51\x79\x1e\xac\x3f\x91\x1a\xc2\x1a\x78\x2f\x70\x58\x17\x66\xd4\x20\xcc\x80\x42\xb2\xe9\x02\x21\x51\x0e\x29\xff\xcf\x94\x1c\x6a\x19\xc9\x29\x2f\x14\x90\x66\xf1\x77\x0a\x72\x51\x97\xf4\x87\x31\x2e\x9f\xc7\xff\x15\x6c\x1b\xb8\x1e\x7f\x9b\xf8\xc3\xe7\xf2\x12\x11\xca\x26\xfd\x76\x42\x4d\x7b\x92\x8d\xab\x73\xfd\xb6\x3a\x43\x61\x41\xb5\x6a\x09\xfb\x0a\x4c\xb8\x93\xfe\xc0\xc3\x3b\x8a\x75\xc9\x8b\x54\xf5\x6f\x74\x19\x05\x1e\x03\xcf\x68\x49\x12\xd3\xe1\x58\xc1\xba\x82\x7d\x98\xe8\x21\xac\xcb\xb8\x7c\x23\x74\xba\x7e\xaf\xb7\x0d\xcc\xe0\xf4\x80\x3f\x8c\xd2\xc5\xf5\xb6\xa9\xde\x4c\x0b\xf2\x89\x51\x39\xe7\x65\x39\x86\x4b\xcc\x48\x7f\x88\xbc\xff\x1f\x00\x00\xff\xff\x8d\xb4\x55\x0e\x51\x08\x00\x00")

func nameServiceGeneratedClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientGrpcClientGotemplate,
		"NAME-service/generated/client/grpc/client.gotemplate",
	)
}

func nameServiceGeneratedClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/grpc/client.gotemplate", size: 2129, mode: os.FileMode(436), modTime: time.Unix(1478026215, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func nameServiceGeneratedClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientHttpClientGotemplate,
		"NAME-service/generated/client/http/client.gotemplate",
	)
}

func nameServiceGeneratedClientHttpClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/http/client.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477950707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\xc1\x6e\xe4\x36\x0c\x3d\x8f\xbf\x82\x0d\x02\xec\x4c\x31\xd1\xdc\x0b\xec\xa5\x8b\xb4\xcd\x61\x17\x8b\xee\xfe\x80\x46\xa6\xc7\x44\x64\x49\x2b\xd1\x93\xa4\x86\xff\xbd\xa0\x64\x3b\x4e\x63\x14\x7b\x08\x9c\xa1\xa9\xc7\xc7\xf7\x48\x39\x68\xf3\xa8\x2f\x08\xe9\x6a\xaa\xea\x74\x82\xef\x2d\x25\x68\xc8\x22\x18\xef\x58\x93\x4b\xd0\x21\xb7\xbe\x4e\xc0\x1e\x3a\xfd\x88\x40\xae\xa6\x2b\xd5\xbd\xb6\x80\xae\x0e\x9e\x1c\x27\x68\xa2\xef\x20\x61\xbc\x92\xc1\x74\x14\xa4\x88\x3f\x7a\x4c\x0c\xda\xd5\x10\x31\x05\xef\x12\x02\xbf\x04\xcc\x48\x92\x8a\xc0\xad\x4f\xf8\x8a\x72\x04\x9d\xe0\x09\xad\x95\x27\x3a\xe3\x6b\x8c\x49\x00\x04\xaf\xc6\xe9\x77\xe3\xe3\x74\x30\xa3\x1d\x73\x40\x5b\x0b\xbe\x01\xdf\x47\x48\x7d\x08\x3e\x32\xd6\xc0\x51\xbb\x24\xff\x4b\x39\xd2\x96\xfe\xd1\x4c\xde\x09\x5a\xe3\x63\xa7\x39\x29\x78\x60\xd0\x36\x79\x20\x67\x6c\x5f\x63\x5a\xd8\x40\x47\x75\x6d\xf1\x49\x47\x4c\xaa\xaa\xa8\xcb\x40\xfb\x6a\x77\x73\xf1\x56\xbb\x8b\xf2\xf1\x72\x7a\x3e\x39\xe4\x93\x48\x85\xcf\x7c\x53\xc9\x4b\xe2\xb6\x3f\x2b\xe3\xbb\xd3\xc5\xdf\x3d\x12\x9f\xe4\x6f\x06\x95\x94\x70\x86\x9b\x61\x50\x5f\x7f\x7f\xc8\x90\x5f\x35\xb7\x70\x37\x8e\x37\xd5\x21\x3b\x70\xbf\x68\x6a\xbc\xb5\x68\x38\xcd\xcd\x71\xbb\xd2\x0a\xb8\xd5\x0c\xc6\x77\x41\x94\xd0\x0e\x74\x5d\xcf\x06\x48\x57\x1f\x92\x80\x75\xa8\x1d\x8b\xde\x67\x84\x3e\x61\x2d\xc2\x6a\x68\xd1\x06\x8c\x90\x38\xf6\x86\x8f\xf2\x7a\x2a\xb5\x5d\x89\x1c\x7b\xd0\x02\x97\xc8\x5d\x2c\x42\xd0\x51\x77\xc8\x18\x55\x75\x3a\x49\xfc\xc1\x81\x2e\x96\xc6\x23\x10\x7f\x48\x52\xac\xe9\x6d\xb6\xa6\xe9\x9d\x11\xd9\x27\xca\x0e\xc5\x19\x0f\x3e\x60\xd4\x8c\xe0\xe5\x6c\xc0\x78\x37\x17\x14\xc0\xb3\x4e\x94\x14\xfc\xe1\x23\xe0\xb3\xee\x82\xc5\x23\xbc\xf8\x1e\x3a\xba\xb4\x0c\x41\x27\x19\x8b\x95\x54\x42\x70\x29\x54\xea\x84\xe8\xeb\xde\x60\x96\x41\x3b\x68\x99\x83\xfa\x4b\xbb\xda\x0a\xc7\x27\xe2\x16\x50\x9b\x76\x9a\x6e\xd8\xcf\xd5\x0f\xf0\x44\x11\x6b\xe8\x43\x01\x4d\x01\x0d\x35\x64\x20\x68\x6e\x15\xec\x1f\x32\x3f\x4a\x82\x7f\xd6\x67\xfb\x02\x1a\x3a\x4a\x5c\x36\x03\x6a\x4c\x74\x71\x72\x94\xdc\xd5\x3f\x62\x96\xf2\x5b\xb1\x65\xd9\xa4\x4c\x11\xdf\x9a\x5d\xcc\x10\x88\x59\x49\x75\x58\xab\x6b\x2c\xa1\xe3\xb7\xea\xae\x8c\x7b\x5d\x4a\xfb\x22\xab\x5b\xe0\xb0\xfe\x3f\x1b\x65\x7d\x8a\x56\x24\x0a\x77\x58\xc6\xea\x95\x2f\x39\xc6\xd8\x68\x19\xa8\x6d\x27\x04\x6c\x29\xb6\x7d\x31\xf4\x52\xec\x75\x13\x4f\xd9\x87\x2f\xf8\xf4\x69\xea\xc7\xf8\xee\x4c\x2e\xeb\xd4\x65\x65\x33\xcb\x95\xb7\xc7\xe9\x06\xe1\x3e\x3a\xa0\x3c\xcc\xc2\xd1\x68\x6b\x31\x96\x79\x9e\xf8\xaa\x2a\x77\xf4\x4e\xd3\xa1\x1a\x86\xa8\xdd\x05\xe1\x96\xe0\xb7\x8f\xa0\xe6\xfc\xcf\xc5\x8f\x71\xac\x76\xc3\x70\x4b\xea\x8b\xee\x70\x1c\xe7\xf3\x00\xb0\xf4\xa1\xe6\x60\x35\x0c\x77\x12\x1d\xc7\x6a\x7c\xbb\xae\x3f\x51\x44\x06\x14\xf6\x2b\x86\x07\x58\xd5\xdd\x1b\x7e\x86\xe9\x2a\x51\x9f\xca\xf3\x28\x03\xf1\x6b\x38\xab\x61\xf8\xd3\x4b\x1a\xdc\x92\xfa\xbb\xdc\xac\xdf\x5f\x02\x4e\x47\x0f\xb0\x7f\x9f\x54\xae\xdc\x55\xd6\x11\x30\x46\x1f\x0f\x30\x54\xbb\xdd\x7c\x25\xe7\xa0\x10\x46\xb5\xa1\x81\x70\x12\x0e\x87\x6a\xb7\xa3\x26\xa7\xfe\xf2\x11\x1c\xd9\x8c\xb1\x9b\x5c\x71\x64\x33\x4c\xb5\xdb\x8d\xd5\x12\x9d\x2b\xa8\x9f\xe1\x76\x38\x0a\x4a\xb5\x1b\xab\x61\x28\xf2\x8a\xb8\x9f\x65\xab\xd6\x0a\xe7\xbd\xbd\xe5\xfb\xac\x70\xf1\x6d\x2d\xfa\x2d\xdf\x6f\xe9\x5e\x84\x17\xb0\xad\x16\x13\x64\x7a\xeb\xb3\x25\xe3\x5b\x5e\xc3\xc3\xfb\x21\x78\xd3\xbc\x60\x6f\x5b\x37\x7f\x01\x97\x35\x1a\xc4\xa8\xe5\x5b\xb8\x0a\x17\x13\x56\xee\x08\xfa\x0f\xe9\x68\xc2\xd8\xd2\xf0\xdd\x10\xe4\x73\xd7\xc5\xd0\xa4\xfe\x33\x5c\x99\x51\xc9\xda\xf0\x72\xcb\xcd\xe2\xe7\xf2\xe6\x3a\x99\x54\xc2\x59\xfd\xe2\xd5\xfc\xfc\x37\x00\x00\xff\xff\xb8\x2c\x93\x2c\x4e\x08\x00\x00")

func nameServiceGeneratedEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedEndpointsGotemplate,
		"NAME-service/generated/endpoints.gotemplate",
	)
}

func nameServiceGeneratedEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/endpoints.gotemplate", size: 2126, mode: os.FileMode(436), modTime: time.Unix(1478026461, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\x4f\x6f\xe3\xb6\x13\x3d\x8b\x9f\x62\x7e\x46\xf0\x83\x1d\x38\x52\xcf\x01\x72\xd9\xec\x76\xb3\x68\xb3\x0d\xd2\xa0\x3d\x2c\x16\x0b\x5a\x1a\x4b\x84\x29\x52\x21\x69\x27\xae\xa0\xef\x5e\x0c\x29\xc9\x4a\xec\xc8\xde\xe6\x10\x38\x16\xe7\xcf\x9b\xf7\x66\x46\x74\xc5\xd3\x15\xcf\x11\xec\x26\x65\x2c\x49\xe0\xa1\x10\x16\x96\x42\x22\x54\x46\x6f\x44\x86\x16\x2c\x9a\x0d\x9a\x0b\x2b\x32\x84\x85\x50\x99\x50\xb9\x85\xa5\x36\xe0\x0a\x84\xfc\xfe\xee\x1a\x9c\xe1\xca\x56\xda\xb8\x98\x42\x7c\x71\xb0\x76\x42\x8a\x7f\xd0\x7a\x93\xfe\x34\xc9\x4d\x95\xc6\x7f\xfa\x70\x31\x63\xa2\xa4\x87\x30\x65\xd1\x44\xa1\x4b\x0a\xe7\xaa\x09\x63\xd1\x24\xd7\x92\xab\x3c\xd6\x26\x4f\x9e\x13\x3a\x49\xb5\x72\xf8\xec\x26\xfe\x4c\xe7\x12\xe3\x81\x09\xc5\x4c\x4a\x74\x3c\xe3\x8e\x93\x3f\x3d\xe8\x53\xc2\x24\x17\xae\x58\x2f\xe2\x54\x97\x49\xae\x2f\x56\xc2\x25\xf4\xf7\x12\x13\xb9\x75\xb5\x13\x3c\x91\x22\x8b\xaa\x05\x4c\xea\x3a\xbe\xfb\xf0\xc5\xe3\xbc\xe3\xae\x80\x8b\xa6\x99\xb0\x19\xf3\x4c\xdd\xf2\x15\x7e\xbe\xbf\xbb\x0e\xf5\x40\xc9\x57\x68\x81\x83\x45\x07\x7a\x09\xa8\xb2\x4a\x0b\xe5\x2c\xf0\x0d\x17\x92\x2f\x24\x02\xa7\x73\x4f\x58\x5d\x7f\xd6\x5f\x79\x89\x10\xb7\xe9\x62\xfa\xd6\x34\x1d\x37\xcb\xb5\x4a\x5f\x25\x98\xa6\xee\x19\x5a\x26\xe2\xeb\xf0\x39\x1f\xa4\xf9\xd4\xfd\x37\x83\x6a\x11\x8f\x27\x80\x9a\x45\x41\xd5\x3f\x2a\x27\xb4\xb2\x70\x79\x05\xdf\xbe\xbf\x60\xae\xd5\x29\x18\xd4\x2c\x8a\xe0\xd0\xf1\x07\x5c\x6a\x83\xd3\x8e\xff\x07\xdd\x22\x9b\xcd\x59\xd4\xb0\xc8\xa0\x5b\x1b\x05\xff\x27\xd7\xe0\x50\x7b\xa6\xeb\x1a\x1e\xf4\xef\xfa\x09\xcd\x4b\x80\xd0\x34\x2c\xaa\x6b\xc3\x55\x8e\x70\x26\x08\x56\x7f\x7e\x8b\xae\xd0\x99\x25\x8b\xa8\xae\x3b\xf7\x33\xd1\x56\x76\xf9\x0a\xdf\x57\x7c\x6a\x89\x63\x51\x14\xa5\xee\x79\x4e\x9f\x3d\x5f\x71\x5d\xf7\xae\x1d\x75\xde\xe2\x23\xa6\x3a\xf3\xbc\x0f\x2c\xee\xf1\x71\x8d\x36\x18\x7c\x52\x07\x0d\x6c\xa5\x95\x45\x6f\xf1\x82\xda\x38\x8e\xe9\x21\x11\x52\xd7\x17\x24\x18\x55\xd0\xb0\xc6\x37\xd1\x8e\x18\x10\x65\x25\xb1\x44\xd2\x92\xa6\xe6\x88\x82\x42\x39\x34\x4b\x9e\x22\x73\xdb\x0a\x87\x71\xac\x33\xeb\xd4\x41\xcd\x8e\xf3\x78\x80\x46\x80\x57\x3c\xde\x70\x95\x49\x34\x6c\x07\x3e\x20\x6f\xc3\xf8\x45\x30\xc8\xee\xf4\xae\x90\xd3\x6b\x38\x0a\xd5\x0f\xc4\xd4\xc2\xf9\x2e\xd5\x6c\x17\xbe\x47\x7f\x78\x48\x0c\x3e\xc2\xf9\x70\x28\xce\x44\xdc\x2a\xfa\xb0\xad\x3a\x50\x33\x98\xee\x1b\x05\x55\x07\x56\x73\x40\x63\x34\x25\x67\xd1\x0f\x0a\x5d\xf9\x27\x04\x9b\x7a\x6a\x8f\xcf\x30\x27\xd4\x2d\x84\xcd\x63\x99\xb1\x48\x2c\xbd\xd3\xff\xae\x40\x09\x49\xa1\xba\x49\x51\x42\xfa\x78\xc3\xe9\x31\x58\xc5\xa7\x40\x9b\xcd\xc9\x9d\x35\xac\xae\x83\x50\x24\x53\x4b\x75\xe8\xea\xe3\x3c\x27\x09\x8c\x0d\x00\x08\x5a\x61\xaf\x16\x7a\x70\x68\x2d\x7e\x25\xa1\x5c\xc1\x1d\xc9\xb0\x41\x43\x0b\xd0\x37\x7a\x58\x7b\xfb\xfd\x66\xda\xc8\x4e\x03\x87\xb5\x45\x73\x91\xe9\x92\x0b\x35\x66\x1c\xc3\x9d\x11\x25\x37\x42\x6e\xc9\x65\xb9\x96\x20\x94\xdf\xbd\x83\xf5\x39\x56\xc7\xf4\xc7\x7e\x97\x50\x2d\xf7\xf8\xb8\xeb\xca\x9a\x5a\x62\xf0\x6d\x28\x3d\xb5\xd4\xe5\x55\xe7\x73\x48\x9e\xbd\xf6\x1a\xe8\xf9\xb8\xa7\x14\x51\x74\x2d\x05\x0d\xcd\xfb\xa5\x0a\x9d\x31\xaa\x55\x30\xf9\x0f\x62\x55\x72\x7b\xaa\x54\x21\xc7\x5b\x5a\xa5\xbe\xda\x71\xad\x42\x84\xb7\xc5\x22\x30\x27\xca\x45\xa6\xbd\x60\x95\xdc\x9e\x36\x51\xc3\x19\x94\xdb\x91\xf9\x0a\x2f\x85\x93\x44\x1b\x7d\x7f\x1c\x14\x2d\x78\x1c\x13\xed\x54\x41\x82\x7c\xe3\x12\x9f\x34\x60\xa3\x85\x1c\x12\xad\x47\x70\xa2\x66\xb6\x22\x16\xfb\x46\xfa\x59\xc5\x6c\x35\x36\x66\xef\x57\xec\xed\x8d\xd8\x09\x36\xba\x11\x4f\xdc\x75\x47\xe5\x1a\xdd\x88\x2f\xa6\x6c\xac\x8e\xc3\x7a\xb5\x25\xfe\xc4\x46\xec\xf0\xbc\x7b\x23\x26\x09\xdc\xa0\xac\xd0\x58\x16\xd0\xef\xdd\x31\x0f\xbf\xec\xcb\x0c\xce\x3b\xd3\xf8\xf6\xe3\xec\xb5\x05\x61\xa5\x3b\xcb\x6a\x0e\x1b\x0f\xd8\xcb\x7f\x5e\x66\xfe\x35\x2c\x96\xb0\x19\xbe\x96\xc3\xcf\x02\x84\x15\x6e\xbd\xd2\x59\x86\x19\x2c\xb4\x2b\x88\xde\x2e\x0d\xdd\x81\x4a\xee\x60\xba\x9a\xc1\x53\x21\xd2\xc2\x9b\x4a\x09\x92\xc4\x6a\xa3\x70\x95\xf9\x7b\x1d\xfd\xcc\x89\xaf\xb9\xd2\x4a\xa4\x5c\xde\x20\xcf\xd0\xfc\x86\x5b\xfa\xcd\xe0\xda\x44\x56\x87\x7e\x11\x0e\x52\xae\x60\x81\x5d\x88\x34\x45\x6b\x31\xa3\xdc\x28\x5c\x81\xa6\xcd\xdc\xde\x70\xe1\xaa\x2f\xf6\x6f\xe1\x8a\xbf\xb8\x5c\x63\xb8\x75\x50\xb1\xdf\x7e\xf9\x3e\x3b\x6a\xf8\x06\xba\xe9\x6a\xb6\x8b\xe0\xaf\xaf\xbd\x76\xa9\x7b\x66\x0d\xfb\x37\x00\x00\xff\xff\x09\x00\x51\xc2\x47\x0e\x00\x00")

func nameServiceGeneratedTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_grpcGotemplate,
		"NAME-service/generated/transport_grpc.gotemplate",
	)
}

func nameServiceGeneratedTransport_grpcGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_grpc.gotemplate", size: 3655, mode: os.FileMode(436), modTime: time.Unix(1478025927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x48\xd5\xe4\x6e\x2e\x87\xdd\x20\xab\x46\x2c\x73\x1e\xa5\x35\x49\x5b\xce\xd7\x0d\xad\xc3\xd3\x0e\xff\xc2\xf3\x9f\x48\x8a\x58\x7e\x01\x00\x00\xff\xff\xaf\xf5\x0f\x3e\x69\x00\x00\x00")

func nameServiceGeneratedTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_httpGotemplate,
		"NAME-service/generated/transport_http.gotemplate",
	)
}

func nameServiceGeneratedTransport_httpGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_http.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477950707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersClientClient_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xc1\x6e\xdb\x30\x0c\x86\xcf\xd1\x53\x10\x45\x50\xc4\x41\x6a\xdf\x0b\xec\x90\x0e\x6d\xd1\xc3\x86\xa2\xdb\x0b\x28\x36\xe3\x08\xb3\x29\x4d\xa2\xb7\x0e\x84\xde\x7d\x90\xa2\xa4\xcb\x52\xac\xc3\xb0\x4b\xc0\x88\x3f\x7f\x92\x1f\x2d\x02\xdf\x0d\xef\x60\xce\x38\xba\x41\x33\xde\x3e\x63\x3b\xb1\xf5\x70\xfd\x0e\xea\x18\x95\xd3\xed\x17\xdd\x23\xb4\x83\x41\xe2\x9d\xa6\x6e\x40\xaf\x94\x19\x9d\xf5\x0c\x0b\x35\x73\x1b\xb8\x10\x39\xab\xaf\x1f\x6f\x1e\xb2\xe6\x51\xf3\x0e\xae\x62\xbc\x50\x95\x52\x4a\xc4\x6b\xea\x11\xe6\x26\x35\x38\xaf\xfa\x84\xfe\x9b\x69\xb1\xfe\x80\xbc\xb3\x5d\x88\x51\x35\x0d\x88\xcc\x4d\xfd\x51\x8f\x18\x23\x98\xd1\x0d\x38\x22\x71\x80\x83\x56\x6d\x27\x6a\x7f\x15\x2d\x44\xf2\x52\x86\x3a\x7c\x7e\xa5\xc9\xfb\xbc\xcb\xda\xf7\x21\xf7\x49\x01\x1c\x8b\x45\xee\x6d\x8a\xa0\xbe\x9b\xa8\x65\x63\x29\xe5\xd3\x3b\x52\x17\x63\x05\x8b\xa5\xdb\xd4\x47\xd5\xdc\xd4\x4f\xf8\x75\xc2\xc0\x9f\x7f\x38\x2c\x1e\x2b\x40\xef\xad\xaf\x44\x89\x34\x4b\x25\x72\x55\x28\x8f\xc8\xbb\xb4\xf8\x3f\x4c\x96\x18\xaa\x59\xb2\x2a\x04\x9d\xf6\x7a\xcc\x14\x93\x6b\x9d\xb5\x59\x93\x45\x66\x0b\x64\xb9\xa8\xea\x87\x70\xa3\x03\xa6\x09\x8b\xa4\x69\x60\xdd\x75\xd0\x4e\x81\xed\x08\x9b\x29\x18\xc2\x10\x60\xb0\xbd\x69\x61\x6b\x3d\x18\x62\xf4\xce\x23\x1b\xea\x13\xdb\xbd\xcf\xdd\xa0\xfb\xb5\xef\x63\x5c\x95\x36\x48\xdd\xcb\x60\x87\x3f\x25\x8e\x51\x2d\x9b\x94\xf3\x7b\x40\x69\xd6\x37\xd1\xc9\xff\xa5\xf5\xb7\xac\x34\x75\xb0\xc8\x3f\xaf\x52\xab\x4e\xde\x9f\xd0\xa1\x66\xec\xaa\xd3\xe7\x5b\x9a\xc6\xaa\x98\x1e\x56\xdc\x67\xca\xb7\x7b\x0d\x97\xbf\x67\xee\xed\x29\xce\x21\x20\xfc\xd9\xe2\x2d\x87\x97\x83\x9c\x9f\x63\x96\x8f\xc1\x93\x27\xb8\x2c\x47\x59\x01\x99\x41\x25\xd1\x5e\x72\x0c\x7e\x06\x00\x00\xff\xff\x59\xb7\xfe\xb0\x1a\x04\x00\x00")

func nameServiceHandlersClientClient_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersClientClient_handlerGotemplate,
		"NAME-service/handlers/client/client_handler.gotemplate",
	)
}

func nameServiceHandlersClientClient_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersClientClient_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/client/client_handler.gotemplate", size: 1050, mode: os.FileMode(436), modTime: time.Unix(1478025927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerServer_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x4f\x8e\xd3\x30\x18\xc5\xd7\xfe\x4e\xf1\x54\x55\x28\x41\x9d\x64\x3f\xd2\x6c\x40\x02\xb1\x60\x34\x02\x2e\xe0\x49\xbf\x49\x3d\xa4\xb6\xb1\xdd\x4e\x2b\xcb\x67\xe2\x10\x5c\x0c\xd9\x49\x94\x88\x3f\x82\x55\x62\xf9\xf7\x3d\xbf\xf7\x6c\x2b\xbb\xaf\xb2\x67\x1c\xa4\xde\x0f\xec\x88\xd4\xd1\x1a\x17\x50\x91\xd8\xf4\x66\x90\xba\x6f\x8c\xeb\xdb\x4b\xab\x39\xb4\x9d\xd1\x81\x2f\x61\x43\x24\xec\x23\x36\x31\x36\x0f\x6f\x3e\x14\xfe\x41\x86\x03\x6e\x52\xda\x50\x4d\xd4\xb6\xb8\xe7\x97\xcf\xec\xce\xaa\x63\x38\x0e\x27\xa7\x3d\x24\xb4\xfc\xf1\xfd\xcc\x3b\xf8\x20\x03\x0f\xec\x3d\xd4\xd1\x0e\x7c\x64\x1d\x64\x50\x46\xc3\x3c\x61\x9a\x6a\xe8\xe9\xa4\xbb\x95\x4c\x55\xc3\x3e\x36\x31\xbe\x37\xf7\xf2\xc8\x68\x66\x2e\xaf\x52\xca\x2b\x76\x88\x24\xc6\xd3\x90\xad\x8d\xc9\x16\x40\x75\x1c\x13\x25\xa2\x70\xb5\xfc\x37\x02\x3e\xb8\x53\x17\x62\x22\x8a\xf1\x45\x85\x03\xb6\x2b\x0c\xb7\x77\x58\x8f\x21\x25\x12\x31\x3a\xa9\x7b\xc6\x56\x95\xed\xd9\xd9\x47\x0e\x07\xb3\xf7\x99\x10\x6d\x8b\x18\xb7\x6a\x72\xbb\xc4\xf6\x4b\x5e\x21\x4a\xe2\xca\x67\xf2\x4f\xce\xea\xb5\x44\xd5\x85\x0b\xa6\xeb\x68\xde\x8e\xdf\x1d\x94\xc6\xeb\x75\x4b\x5b\xd5\x7c\xe2\x6f\x27\xf6\xe1\xcb\xd5\xce\x5d\xd5\xa8\x7e\x87\xbc\x35\xda\xf3\x8a\xda\x81\x9d\x33\xae\x8e\x24\x84\x38\x4b\x07\xc7\xde\xe2\xdf\x73\x19\x2f\xe8\xdd\x7f\xc0\x45\x7c\xe9\xef\x39\xf7\xf7\x2b\xf9\x4e\xf1\xb0\xf7\xf9\x6d\x15\x78\xac\x72\x56\x7d\x6e\xa6\x5b\xb8\xc5\x24\xc5\x7a\x3f\xb3\x93\x97\xf2\x1e\x5e\x65\x4f\x3b\x68\x35\x50\xd9\x28\x60\x4a\x14\xe3\x0d\xc6\xbf\x9f\x01\x00\x00\xff\xff\x5a\xcf\xd9\x6c\x09\x03\x00\x00")

func nameServiceHandlersServerServer_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerServer_handlerGotemplate,
		"NAME-service/handlers/server/server_handler.gotemplate",
	)
}

func nameServiceHandlersServerServer_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerServer_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/server_handler.gotemplate", size: 777, mode: os.FileMode(436), modTime: time.Unix(1478035251, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateClient_handlerMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\x4d\x6e\xdb\x30\x10\x85\xd7\xe5\x29\x66\x21\x14\x76\x61\x53\x7b\x03\x5d\xb8\x45\x5d\x74\xd1\x2e\x9a\x5c\x40\x96\xc6\xf2\x00\xd2\x50\x21\x47\x89\x03\x82\x77\x0f\x48\x53\xce\x8f\x8d\x24\x08\xb2\xa3\xf9\x3e\xcf\x3c\x7d\xa0\xf7\x70\x47\xb2\x87\x42\xb0\x1f\xba\x4a\xf0\xd7\x01\xeb\x51\x8c\x85\xd5\x77\xd0\x21\x28\xe5\xbd\xad\xb8\x45\x28\x28\x5e\x9d\x71\xfa\x0a\xed\x2d\xd5\xa8\xff\xa2\xec\x4d\xe3\x42\x50\x65\x09\xde\x17\xa4\xff\x55\x3d\x86\x00\xd4\x0f\x1d\xf6\xc8\xe2\x60\x62\xd5\x6e\xe4\xfa\x29\x34\xf3\x3e\xd5\x20\x6e\xf0\x70\x61\xc9\xcf\x8e\x90\x65\x6d\x5b\x97\xf6\xc4\x03\x9c\xfe\xec\xfd\x6f\x13\x4f\xa0\x37\x23\xd7\x42\x86\x63\x1e\xef\x91\x9b\x10\xe6\x30\xfb\x36\x6c\xf5\x89\x2a\x48\xff\xc7\x9b\x11\x9d\x5c\xdf\x0f\x98\x67\x2c\x00\xad\x35\x76\xee\x95\xf7\xcb\xac\xa4\x47\xd9\xc7\x6f\xfe\x40\x29\x58\x86\xa0\xbe\xc4\x51\x59\xde\x50\xd9\xaa\x4f\x02\xe3\x54\x9d\xd8\xc4\x24\x88\x76\xc0\x46\x32\xa5\xff\xb8\x1f\x95\xc3\x58\x2e\x23\x65\x09\xeb\xa6\x81\x7a\x74\x62\x7a\xd8\x8e\x8e\x18\x9d\x83\xce\xb4\x54\xc3\xce\x58\x20\x16\xb4\x83\x45\x21\x6e\xa3\xd6\xe3\x9c\x4d\x57\xb5\x6b\xdb\x86\xb0\xc8\x6b\x90\x9b\xc7\x62\xd3\x8f\x67\x81\x3d\x8a\x89\x45\xdf\x54\xf6\xc9\xaa\xde\x2b\xea\x4c\x52\x0e\xa7\xaa\xc7\x38\xbf\xbd\x15\xbc\x0c\x5e\x93\x72\x51\x49\xb2\x22\xa3\x65\xf8\x9a\xed\x2c\x80\xa9\x53\x11\x4b\xef\x6b\xc2\x43\x50\x0f\x01\x00\x00\xff\xff\xf0\xfb\x3d\xfc\x4e\x03\x00\x00")

func nameServicePartial_templateClient_handlerMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateClient_handlerMethods,
		"NAME-service/partial_template/client_handler.methods",
	)
}

func nameServicePartial_templateClient_handlerMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateClient_handlerMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/client_handler.methods", size: 846, mode: os.FileMode(436), modTime: time.Unix(1478025927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceInterface = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcb\x31\x8e\xc2\x30\x10\x46\xe1\x7a\x7d\x8a\x29\x52\x24\xab\xe0\x03\x20\x51\x51\x50\x41\x01\x5c\xc0\x38\x3f\xe0\x02\xdb\xd8\x03\x4a\x34\x9a\xbb\x23\x44\x0a\x24\xaa\xd7\x7c\x8f\xa7\x0c\x3a\xa0\x3c\x83\x07\x85\xc8\x28\x67\xe7\x41\x62\x44\x8a\x8b\x17\x50\x13\x68\xb9\x22\x3b\x13\xbb\x05\x5f\xd3\x50\x55\xcd\x9f\x48\x13\xec\xce\xdd\xa0\xda\x7a\x1e\xc9\xa7\xc8\x18\xd9\xae\x3f\xed\x29\x44\xfa\xcf\x27\x2b\xb2\x49\x6f\x46\x4d\xb0\x7b\xdc\x1f\xa8\x7c\x9c\x32\xe6\xb5\xa3\xf6\x17\xd5\x9c\x62\xc5\x97\xea\x09\xa5\xa4\xd2\x19\x91\x05\x21\x0e\xaa\x46\xcd\x2b\x00\x00\xff\xff\xf9\x3a\x09\x61\xbc\x00\x00\x00")

func nameServicePartial_templateServiceInterfaceBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceInterface,
		"NAME-service/partial_template/service.interface",
	)
}

func nameServicePartial_templateServiceInterface() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceInterfaceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.interface", size: 188, mode: os.FileMode(436), modTime: time.Unix(1478025927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xcf\x4e\xf3\x30\x10\xc4\xcf\xf6\x53\xec\x21\xfa\x94\x7c\x4a\xdd\x7b\xa5\x9e\x10\x70\x02\x21\xe0\x8e\x82\xb3\xb4\x2e\x89\x1d\xec\x0d\x04\xad\xfc\xee\x28\x71\xfa\x0f\x90\x38\x65\xa4\xfc\x66\xbc\x3b\xcb\x0c\x1f\x86\xb6\x90\x11\xb6\x5d\x53\x11\x5e\x0e\xa8\x7b\x72\x1e\x56\x6b\x50\x31\xca\x03\x70\x57\xe9\xd7\x6a\x83\xb7\x55\x8b\xe3\xbf\x1f\x06\x75\x02\xc4\x28\x25\xb3\xaf\xec\x06\x21\x33\xbf\xe3\x0f\xe8\xdf\x8d\x46\x75\x83\xb4\x75\x75\x88\x51\x2e\x97\xc0\xac\x92\x1f\x4c\xdb\x35\xd8\xa2\xa5\x00\x7b\x52\xbe\xf4\x56\x43\x1e\x80\x39\x3b\x7b\x6c\x06\x8a\xa3\x3d\xd7\x34\x80\x76\x96\x70\x20\x75\x91\xbe\x25\x18\x0b\xff\xbb\x67\xc5\x7c\xed\xa6\x35\xd4\x3d\xbe\xf5\x18\xe8\xf1\xb3\xc3\xd9\x58\x40\xfe\x1d\x09\x9d\xb3\x01\x4f\x98\x12\xd0\x7b\xe7\x0b\x96\xe2\x09\xd6\xa0\x69\x48\xc2\x58\x29\xfc\x8c\x8f\x3b\xff\x95\xc3\x52\x88\x43\x4b\xbb\xa9\x25\x73\xce\x5d\x19\x6c\xea\x00\x8b\x18\xa5\x10\x53\x3d\x73\x5c\xb6\x9b\x32\x20\xc6\x15\x4c\x29\x68\xeb\x84\xc5\x71\x06\xea\xbd\x85\x7f\xfb\x59\x4a\xb0\xa6\x91\xe3\x29\xd1\xd6\xe9\x34\x0b\x48\xf2\xa8\xbe\x02\x00\x00\xff\xff\x83\x97\xcb\x10\x09\x02\x00\x00")

func nameServicePartial_templateServiceMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceMethods,
		"NAME-service/partial_template/service.methods",
	)
}

func nameServicePartial_templateServiceMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.methods", size: 521, mode: os.FileMode(436), modTime: time.Unix(1478025927, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-service/NAME-client/client_main.gotemplate": nameServiceNameClientClient_mainGotemplate,
	"NAME-service/NAME-server/server_main.gotemplate": nameServiceNameServerServer_mainGotemplate,
	"NAME-service/generated/client/grpc/client.gotemplate": nameServiceGeneratedClientGrpcClientGotemplate,
	"NAME-service/generated/client/http/client.gotemplate": nameServiceGeneratedClientHttpClientGotemplate,
	"NAME-service/generated/endpoints.gotemplate": nameServiceGeneratedEndpointsGotemplate,
	"NAME-service/generated/transport_grpc.gotemplate": nameServiceGeneratedTransport_grpcGotemplate,
	"NAME-service/generated/transport_http.gotemplate": nameServiceGeneratedTransport_httpGotemplate,
	"NAME-service/handlers/client/client_handler.gotemplate": nameServiceHandlersClientClient_handlerGotemplate,
	"NAME-service/handlers/server/server_handler.gotemplate": nameServiceHandlersServerServer_handlerGotemplate,
	"NAME-service/partial_template/client_handler.methods": nameServicePartial_templateClient_handlerMethods,
	"NAME-service/partial_template/service.interface": nameServicePartial_templateServiceInterface,
	"NAME-service/partial_template/service.methods": nameServicePartial_templateServiceMethods,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-service": &bintree{nil, map[string]*bintree{
		"NAME-client": &bintree{nil, map[string]*bintree{
			"client_main.gotemplate": &bintree{nameServiceNameClientClient_mainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"server_main.gotemplate": &bintree{nameServiceNameServerServer_mainGotemplate, map[string]*bintree{}},
		}},
		"generated": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"grpc": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientGrpcClientGotemplate, map[string]*bintree{}},
				}},
				"http": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientHttpClientGotemplate, map[string]*bintree{}},
				}},
			}},
			"endpoints.gotemplate": &bintree{nameServiceGeneratedEndpointsGotemplate, map[string]*bintree{}},
			"transport_grpc.gotemplate": &bintree{nameServiceGeneratedTransport_grpcGotemplate, map[string]*bintree{}},
			"transport_http.gotemplate": &bintree{nameServiceGeneratedTransport_httpGotemplate, map[string]*bintree{}},
		}},
		"handlers": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"client_handler.gotemplate": &bintree{nameServiceHandlersClientClient_handlerGotemplate, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"server_handler.gotemplate": &bintree{nameServiceHandlersServerServer_handlerGotemplate, map[string]*bintree{}},
			}},
		}},
		"partial_template": &bintree{nil, map[string]*bintree{
			"client_handler.methods": &bintree{nameServicePartial_templateClient_handlerMethods, map[string]*bintree{}},
			"service.interface": &bintree{nameServicePartial_templateServiceInterface, map[string]*bintree{}},
			"service.methods": &bintree{nameServicePartial_templateServiceMethods, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

