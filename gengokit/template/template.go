// Code generated by go-bindata.
// sources:
// NAME-service/NAME-cli-client/client_main.gotemplate
// NAME-service/NAME-server/server_main.gotemplate
// NAME-service/generated/cli/handlers/client_handler.gotemplate
// NAME-service/generated/client/grpc/client.gotemplate
// NAME-service/generated/client/http/client.gotemplate
// NAME-service/generated/endpoints.gotemplate
// NAME-service/generated/transport_grpc.gotemplate
// NAME-service/generated/transport_http.gotemplate
// NAME-service/handlers/server/server_handler.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameServiceNameCliClientClient_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xef\x6f\x9b\x48\x10\xfd\x0c\x7f\xc5\x1c\x6a\x24\x5c\x39\xd0\x93\xee\xbe\x58\xca\x87\x34\xd7\x5e\x23\x5d\x2b\x2b\x89\xd4\x2f\x27\x9d\x08\xac\x61\xaf\xb0\x4b\x77\x17\x27\x15\xf2\xff\x7e\x6f\x16\x8c\xed\xc6\x96\xef\x57\xa4\x04\x58\x66\xde\xcc\xbe\x79\x6f\x49\x9b\xe5\x5f\xb2\x52\x50\x93\x49\x15\x86\xb2\x69\xb5\x71\x14\x87\x41\x24\x54\xae\x0b\xa9\xca\xf4\x4f\xab\x55\x84\x85\x55\x9d\x95\xfe\xda\x38\xbe\x68\xcb\x7f\xad\x33\xb9\x56\xeb\xf1\x16\xe1\x7e\xd5\xc9\x46\x44\x21\x6e\x4a\x5d\x67\xaa\x4c\xb4\x29\xd3\xe7\x54\x09\x97\x22\xd8\x89\x67\x0f\x50\x6a\x5d\xd6\x22\xd9\x0b\x29\x4d\x9b\x0f\x69\xd2\x55\xdd\x63\x92\xeb\x26\x6d\xbf\x94\xa9\x30\x46\x1b\xcb\x6f\xd2\x94\x1e\x2a\x69\xe9\x5e\x98\xb5\xcc\x45\x18\xe4\xb5\x14\xca\x7d\xc8\x54\x51\x0b\x43\x51\xdf\x27\xb7\x7e\x0b\xcb\xcc\x55\x74\xb9\xd9\x50\x5a\x0a\x25\x4c\xe6\x44\x91\x22\x36\xad\x86\x48\xee\x92\xab\x0d\xe9\xe7\xf3\x10\x34\x76\x17\x54\xce\xb5\xff\x24\x8d\xe3\x91\xd6\x3e\xfa\xf0\xe5\xdb\xc3\x84\x28\x9c\x85\xe1\x3a\x33\x4c\xf9\x1f\x74\x45\x23\x9f\xc9\x32\x33\x56\xdc\x2a\x37\xad\x32\xb5\xc9\x7d\x5b\xcb\x71\x89\xa7\x92\xdc\xe8\x06\xf3\x1b\x57\x06\x96\x92\xcf\x26\x6b\x57\xc3\x4a\xfb\x98\xdc\x89\x52\x5a\x27\x0c\x4a\x8f\x9c\x25\x9f\xb2\x46\x6c\x36\xfc\x24\x0c\x57\x0f\x57\x9d\xca\xfd\xfc\xe3\x19\xf5\x23\xc7\x82\xb2\xa2\xc0\x0e\xa8\x35\xc2\x76\x8d\xb0\xa4\x34\xd9\x01\x81\x0a\x69\x73\x8d\xec\x6f\x64\xbf\x01\xbc\x99\x13\x58\x25\xf1\xdc\x8a\xdc\x59\xea\x10\x66\xc9\x69\x8f\xd4\x1a\xbd\x96\x85\x20\x57\x71\x9a\x41\x00\x03\x03\xd3\x92\x5e\x21\x6d\x8b\x99\x0c\x73\x1d\xaa\xb5\x4e\x6a\x45\x78\x34\x62\x55\x23\x45\x14\x04\x71\x32\x1c\xc3\x70\x57\x8f\x52\x65\x28\xcf\x65\x79\x69\x5c\xe6\x99\x8c\x7a\xb6\x0b\xbf\x78\xe9\x4c\xa6\x2c\x13\x9e\x70\x59\x62\x0d\x5b\x8f\xc4\xa9\xe0\x5d\xea\xce\x6e\x53\x41\x3c\x88\xee\x72\x07\x1a\xe9\x51\x63\x40\xc3\x96\xa8\xd2\xd6\x2d\xbc\x31\xb6\x83\x80\x14\xc7\xa1\x79\x3d\x5c\x33\xf6\xf0\x73\xe5\x6b\x24\xf7\x3e\x30\x8e\xf8\xad\x2f\x1d\xcd\x29\xe2\xdf\x0f\x0f\x0f\xcb\x03\x0a\x8a\xc2\xae\xf3\x68\x06\x24\x16\xd8\x69\x24\x7e\x3b\x21\x2d\x7e\x7e\xf3\xd3\x1b\xbe\x29\xef\x96\x37\x14\x33\xe8\xec\x04\x6a\x23\x5c\xa5\x0b\xa2\xe3\xa8\xc3\x5b\x46\xea\x7b\x50\x85\x83\xe0\x95\x54\x85\x78\x9e\xe3\x4a\x8b\x2b\x9a\x54\xf3\xd1\x07\xda\xcd\xa6\xef\xe5\x6a\x0c\xe2\x07\x51\x5b\xc1\xd7\x07\xfd\x9b\x7e\x82\x05\x5f\xc9\x51\x60\x78\xa5\x8a\xe9\x12\xcd\x83\x7f\x57\x61\x3e\xe1\x9c\xaa\xc0\xbb\x9c\xed\x0d\x04\x52\xbf\xf1\x03\xbd\x36\x98\xd4\x75\x5d\xbf\xe7\xa1\x6f\x36\x1c\x15\xf8\xcd\x7b\x73\xc5\x2c\xfd\x29\x69\x2b\x6d\x58\xa6\xef\x7f\xd5\x5c\x80\x8e\x3b\x26\x08\x60\x34\x4f\xa5\x37\x9c\x47\x45\xbf\xaf\x27\x1d\xfc\x70\x85\x49\xb3\x91\xb6\xa0\x73\x8e\x04\xf1\xbb\x93\x23\xf9\x24\x9e\xe2\x29\x03\x00\x1b\x62\x1e\x89\x71\x26\x15\xec\x70\x20\x4c\x35\x80\x80\x2f\xaf\x83\x5f\x64\x56\xc7\x53\xe8\x7c\x58\xfc\x8c\x53\xf3\x56\x59\x91\x77\x06\xbb\xdb\x5b\x7c\xc0\x71\xac\x3b\x17\xf3\xb1\x8c\x4d\x01\xae\x98\xb1\x34\x50\x8e\x41\x51\x48\xc9\xda\x57\x0a\x70\xb8\x27\xef\x5b\x68\xc3\xad\x62\x8d\x03\xc7\x15\x88\x80\x3a\xde\xf1\x5e\xe9\xa9\x92\x35\xfb\x38\xab\x21\x1e\x8f\xcf\xa6\x51\xf0\x08\x0c\xbb\xa0\x8b\x75\xe4\xdb\x64\xec\x00\xd9\xef\x9e\xa5\x8b\x7f\xe4\x27\x90\x1f\x14\x62\x85\xe9\x71\x3c\xe6\xa3\xfd\x00\x5e\x50\xb4\x3b\x93\x3d\x45\x1c\xbc\x63\x87\x1b\x3c\xd5\x9f\x9f\xc5\x82\x0f\x29\x23\x1a\xed\xc4\x64\x06\x0b\x07\xcb\x95\x14\xc5\xef\xca\xdb\x61\xbf\xad\x4d\x78\x84\x82\x33\x15\x2e\xd6\x00\x9a\x76\x79\x88\x16\x06\xf6\x49\xba\xbc\xa2\xd7\xa3\xe9\xfa\xb0\xef\x09\x4b\x15\xbd\x42\x4b\x2c\x76\x96\xe1\xce\x07\xbc\x84\x37\x2f\x2d\xc0\x43\xcf\xb0\xe5\xe8\x88\xec\xa3\x05\xd3\xdb\xf7\x97\x03\xb2\xf7\x89\x47\xd9\x53\x3d\x03\xf1\xcd\x36\x8b\x3f\x35\x9c\xe5\xf5\xce\x1b\x1e\xb5\xeb\x81\x92\x8f\xf0\x43\x95\xed\x7c\x32\xa0\x7b\x73\xf1\x83\x11\x5f\x3b\x61\xdd\xa4\xc0\x83\x6f\x2e\xec\x32\x75\x16\xf7\xfd\xdf\x6f\x89\xfd\x9b\xdc\x64\x75\xcd\x8b\x93\x99\xbd\x74\x8e\xe8\xf2\x8c\x30\x73\xe0\xb0\x24\x4f\xb6\xf6\xfd\xe0\xbe\xd3\xa7\x1f\x1e\xd8\x99\xf6\xb8\xfd\x2c\xed\xef\x6e\xfc\xdf\x25\x79\x8b\x4f\x4c\x69\x74\xa7\x0a\x76\xd9\xc8\xce\x7f\x6c\xfc\x48\xbd\xf3\x2d\x8f\xe8\x4b\x06\xaf\x55\x1c\x0d\x6c\xd3\xdd\xd0\x11\xbe\x9a\x3c\x8d\x85\x97\xfd\x41\xe0\xff\x34\xa6\x83\xda\xc3\xe9\x88\xda\xf8\xda\x02\xf7\x64\xed\xf5\x2c\xdc\x53\xd7\x9e\xce\x70\x3c\x64\x5d\xed\x16\xe7\x2d\x28\xd5\x1a\x07\x50\x41\xa3\xc9\x2e\xbe\x7a\x96\x86\xa7\x97\xa6\xc4\x64\xff\x0a\x00\x00\xff\xff\x6c\xf0\x67\x0a\xe4\x0a\x00\x00")

func nameServiceNameCliClientClient_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameCliClientClient_mainGotemplate,
		"NAME-service/NAME-cli-client/client_main.gotemplate",
	)
}

func nameServiceNameCliClientClient_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameCliClientClient_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-cli-client/client_main.gotemplate", size: 2788, mode: os.FileMode(436), modTime: time.Unix(1478723139, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceNameServerServer_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4d\x6f\xdb\x38\x13\x3e\x4b\xbf\x82\x15\xfa\x16\xd2\x0b\x87\xea\x62\xdb\x3d\x04\xf5\xa1\xf9\xa8\x1b\x6c\x9c\x35\x6c\x07\x7b\x5c\xc8\x12\x2d\x73\x23\x91\x02\x49\x3b\x36\x04\xff\xf7\x9d\xa1\x28\x5b\x4e\x6c\x27\x87\x16\x8d\x25\x71\x1e\x3e\xf3\x45\xce\x4c\x95\xa4\x4f\x49\xce\x48\x99\x70\xe1\xfb\xbc\xac\xa4\x32\x24\xf4\xbd\x60\x5e\x24\x79\x80\xcf\xd2\xe0\x43\xb0\xf6\x11\x2f\x8c\xa9\xba\xef\x71\x55\x29\x39\xc7\x15\xa9\x9b\xdf\x58\xf3\x5c\x24\x05\x7e\xe8\x8d\x4e\x93\x02\x5e\x7d\x2f\x8e\xc9\xef\x19\x19\x25\xca\x6c\x40\x90\xcb\x22\x11\x39\x95\x2a\x8f\xd7\x31\x52\xa5\x52\x18\xb6\xb6\x5a\x72\x29\xf3\x82\xd1\x0e\x24\x57\x55\xea\x38\x06\x92\xfc\xc9\x0d\xa2\xb8\x59\x2c\x67\x34\x95\x65\x9c\xcb\x8b\x27\x6e\x62\xfc\x2b\x64\xee\x80\xd3\x05\xd7\x64\xc2\xd4\x8a\xa7\xcc\xf7\x16\x89\xc8\x0a\xa6\x48\x50\xd7\xf4\xce\xba\x39\x4a\xcc\x82\x5c\x6c\xb7\x24\x76\x32\xb0\x1b\xd0\x4c\x81\x09\x7a\x95\x1e\x45\xe6\x4c\x30\x95\x18\x96\x01\xa6\x9a\x59\xc8\xe8\xea\x10\x04\x92\x92\x67\xc0\xf7\x9c\x28\xa6\x8f\xb2\x74\xe4\x81\x1f\xf9\xfe\x7c\x29\x52\x9b\x81\x30\x22\xb5\xef\xad\x12\x85\x29\xf0\x32\x36\x5b\xe6\xdf\xb3\x4c\x11\xfb\xaf\x4f\x30\x27\x74\x62\x14\x17\x79\x18\x58\x29\x4d\x40\x1c\xf4\x48\x70\xf9\xf5\xf3\x1f\x9f\xf1\xe5\x06\x97\x09\x38\x44\x4a\x06\xc8\x54\x93\x82\x6b\xc3\x04\x41\x24\xd3\x3a\x88\x80\x19\xd3\xb6\x27\x7e\xc9\x8c\xd2\x2e\xf1\x57\x4b\xfc\x73\x3a\x1d\x1d\xe3\xc2\xd4\x9c\xe6\x42\x69\x97\xeb\x8b\xe5\xca\xc7\xa3\x6b\x12\x22\x63\x74\x84\x12\xfe\x5b\x0e\x38\x2a\x9a\x85\x51\x93\xcd\x47\xcd\x08\x13\x2b\xae\xa4\x28\x99\x30\x04\x82\xc4\x93\x59\xc1\x74\x8f\xf0\x39\xd1\xcc\x50\xf2\x03\x36\x69\xb2\x48\x56\x8c\x54\x8a\x4b\xc5\xcd\x86\x48\xc8\x27\xb9\x15\x2b\xc4\x6b\xea\x7b\x80\x95\x9a\x0e\x18\xa8\x5c\x85\xc1\xcd\xed\xd5\xe3\xe0\x9f\xef\x37\x37\xe3\x20\x22\x1f\xfa\x24\x08\x08\xf9\xf4\x89\xfc\x7f\x1f\xf9\x7e\xbf\x8d\x2d\x66\xc6\xeb\x4a\x4e\x11\xf9\xde\xf6\xa5\x1e\xf4\xf4\x88\x9a\x5d\x1a\x9c\x96\xaf\xad\x96\xbd\xe0\x04\xcb\x11\x1d\x03\x88\xe9\xa1\x0e\x54\xb1\xcb\x8e\x53\xf1\xa5\x55\xb1\x17\x9c\x20\x39\xa2\x62\xf4\xd7\x78\x7a\xc0\xfe\x1e\x07\xa0\x80\xd0\x09\xe4\x43\x98\x79\x18\x5c\xfe\x4f\x43\xfe\x5f\x51\x5a\x65\x36\xcd\xf7\x32\xcf\xe1\xe0\x90\x4c\xe2\x7d\xa0\xcd\x65\x80\x3b\x9d\x33\xfb\xa0\xf7\xf6\xd5\xf7\x50\x8b\x5b\xee\x5b\xc1\x03\x7b\x06\x19\x28\x6b\x10\x21\xe8\x98\x98\x4c\x2e\x4d\x74\x04\x79\xdd\xd4\x9a\xb0\x59\x8f\xe8\xdf\x50\x4a\xc2\xc0\xa0\x6d\x88\xb8\x61\xf3\x64\x59\x98\x29\x2f\x99\x36\x49\x59\x3d\x4e\xaf\xdf\xcf\x82\xe5\x8e\xa9\x43\xa6\x6b\xbb\xd6\x84\xb4\x41\xa3\x23\x61\x50\xea\x1c\xaf\xc3\x82\x15\x85\xc4\x88\x67\x6c\xce\x5a\x77\x0f\x10\x50\x11\xb3\xd9\x86\x05\xee\x32\x5c\x2d\x35\x17\x70\x5b\x0e\xc3\xa4\x9b\x5a\x47\xaa\x19\xad\xeb\x81\x7c\x48\x4a\x46\xa8\x2b\x80\x14\xbf\xb6\xdb\x89\x2d\x70\x4d\xf8\x5a\x78\x9f\xb8\xfa\x87\x3e\x39\x78\x88\xfe\x82\xa2\x3b\xf1\x2f\x4b\x4d\x5b\x45\x49\xa7\x70\x51\x58\x04\x7a\xda\x2d\x66\xb1\xa3\x84\xca\x7d\xc0\xdf\xdd\xd6\x30\x3a\xc2\xe1\x5e\x10\x3a\xf8\xfe\x28\xdc\x8a\xac\x92\x70\x6c\x0e\x9d\x84\xc2\x58\xd7\x0a\xfa\x02\x23\x1f\x39\xb9\xec\xef\x3d\x1c\x32\xb3\x90\x99\xc6\x12\x0b\xda\xeb\x7a\x2a\xef\xe5\x33\x84\xf3\x23\x77\xce\xef\x08\xfb\x04\xea\x3b\x1d\x26\x4f\xac\xae\x5f\x49\x3b\x86\xd4\x35\x13\x19\xb2\xb9\xb0\xbb\x68\xec\x78\xde\x0a\x07\x73\x40\x6d\x03\xb2\xfb\x42\xab\xd1\x80\x96\x47\xd7\xef\xf6\xe9\x95\xb5\x97\x58\x73\x5f\xc7\xb7\x15\x77\x03\x7c\x26\x22\x51\xaf\xe3\xac\x0b\xff\x90\xa5\x70\x2e\x38\x1c\xe7\x7d\x02\x98\x52\x29\xda\x57\x42\xe8\x42\x14\x13\x58\x91\x78\xb0\x53\xb3\x46\x81\x6b\xe2\xf4\x0a\xc6\x8a\x5c\xc9\xa5\xc8\xc2\x5d\xec\x0c\x60\x97\x95\xd9\x9d\x36\xdf\xcb\x25\xc1\xd6\xd7\x74\x3d\xef\x05\x33\x5e\x60\x3b\x46\xf4\xc8\x6f\x78\x1a\x9b\x99\x82\x3e\x48\xc3\xe7\x9b\x30\xed\x11\x37\x5a\xd0\xc9\xdd\xe0\xee\x61\x7a\xf0\x3d\xbd\x1d\x0f\x71\x8f\xb5\xf7\xdb\x85\xad\x41\xb7\x68\x29\x94\x20\x5b\x81\xbe\x5d\xa4\x78\xd0\x5a\xe3\x9a\xa6\xd9\x74\xa2\x23\x96\xb9\x8b\x7f\xf9\x56\xfd\x80\x14\x6a\xec\xf4\x78\x63\x6d\xa3\xb0\xf7\xd5\x2b\x71\xa7\x6d\xaa\xee\x82\xb1\xe1\x72\x6d\x6f\x58\x49\x7f\xda\x60\x84\x41\x6c\xf1\xcd\x28\x15\xc3\x7e\x0b\x6f\x84\xea\x07\x5a\x62\x25\x90\xdd\x8c\xad\xa3\x33\x5b\xd3\x32\x2b\xa0\x34\x9c\x66\xb8\x6e\x00\xe7\x38\xf0\x87\x17\x67\x38\x46\x0d\xe0\x1c\x87\xde\x94\x33\x59\x9c\xa6\x98\x58\xf9\x39\x06\x88\x66\x7a\xc6\x86\x29\x8a\x23\x1b\xdf\x6e\xbd\x74\xa3\xc6\xbe\x4f\x77\x8f\x81\xa5\xba\xb7\x59\xfe\x2e\x32\x9b\x89\x70\x8f\xec\x91\xb2\x7b\x26\xec\xbc\xb3\x4b\xe9\x2f\x39\x13\x48\xd9\xcc\x5f\x6d\x09\xc0\x1a\x84\xab\xce\xbf\x10\xae\x51\x8f\xec\x0a\x45\xcf\xb5\x82\xe8\x84\x93\x6d\x97\x7d\xd3\xc7\x16\x08\xd1\xec\xba\x68\xc7\xb0\x5f\xeb\x22\x52\x36\xa7\xbe\x10\x3d\xac\x0e\xb8\x1d\xc6\x7b\x67\x12\xa0\xd3\x0a\x4d\x6f\xc7\x0f\x34\x1d\x86\x0c\x04\xc2\x58\x21\x78\x61\x35\xef\xbc\x81\x27\x7e\x2a\x66\x96\x4a\xc0\x1b\xd6\x26\x4f\xab\x55\x37\x7e\x38\xb3\x34\x7d\xed\x45\xf8\x6c\xd5\x40\xa4\x1d\x42\xdb\xbb\xa7\xec\xcd\x83\x1e\x39\x66\x39\xda\xa4\x60\x40\x3f\xd6\x24\x43\x08\x3f\x68\x3a\x79\xc2\xba\x1e\xb4\xe6\x6a\xda\x04\xbc\x10\xdd\x30\x8f\x97\xe2\xc3\x61\xdf\x67\x6b\x6e\x6c\x15\xc2\x8d\x91\xbf\xf5\xff\x0b\x00\x00\xff\xff\x21\xb8\xc5\xb4\x87\x0d\x00\x00")

func nameServiceNameServerServer_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameServerServer_mainGotemplate,
		"NAME-service/NAME-server/server_main.gotemplate",
	)
}

func nameServiceNameServerServer_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameServerServer_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-server/server_main.gotemplate", size: 3463, mode: os.FileMode(436), modTime: time.Unix(1481916361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedCliHandlersClient_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x6f\xea\x30\x10\x3c\xc7\xbf\x62\x85\x10\x4a\x9e\xc0\xdc\x91\xde\xe1\xf1\xd4\x22\x0e\xad\x10\xed\x1f\x30\xc9\x02\x56\x13\x27\xb5\x9d\x7e\xc8\xf2\x7f\xef\xda\x98\x50\x7a\xa1\x17\xb0\x77\x66\xc7\xb3\xb3\xe9\x44\xf9\x22\x0e\x08\x65\x2d\x51\xd9\xa3\x50\x55\x8d\x9a\x31\xd9\x74\xad\xb6\x90\xb3\xac\xdb\xc1\xc8\xb9\x31\xdf\x2c\xd7\xb1\xb6\x11\xf6\x08\x33\xef\x47\xac\x60\xcc\x39\x78\x97\x74\x1f\x5b\x84\xc5\x5f\xe0\xde\xb3\xcc\x39\x2d\x14\x29\x8e\x65\x28\x11\xc2\x9f\x50\xbf\xc9\x12\xf9\x03\xda\x63\x5b\x99\x40\x9a\xcf\x81\x44\x25\x7f\x14\x0d\x7a\x0f\xf4\x5c\x8d\x0d\x19\x30\x70\x26\xb3\x6c\xdf\xab\xf2\x3b\x2b\x77\x2e\x3e\x26\x55\x85\x1f\x51\xf8\x7f\x34\xfd\x4f\x1f\x4c\xd4\x0e\x07\x18\xe8\xce\xad\xda\x70\x02\x7e\x4f\x42\x56\xb6\x2a\xe0\xa1\x8e\xaa\xf2\xbe\x80\xfc\x4f\xb7\xe3\x03\x8b\xfa\xb6\xf8\xda\xa3\xb1\xcf\x9f\x1d\x26\x8d\x29\xa0\xd6\xad\x2e\x1c\xcb\x32\x7d\x42\xc3\x50\x37\xfb\x02\xdf\xb9\x59\x0a\xa7\x21\x6f\xa1\xed\x57\xc6\x43\xb6\xd4\x7d\x89\xb1\x13\x5a\x34\x31\xca\xa0\xc3\x23\x37\x71\xe2\x1b\x72\x0f\xb4\x35\xc8\xe3\x8f\x6a\x6d\xea\xe0\x6b\xb3\x14\x06\x83\xa9\xe2\xaa\xbe\xc5\x0e\x85\xc5\xaa\xb8\x2e\xdf\xa9\xbe\x29\x92\x6c\x76\x99\xee\x04\xa6\x35\x2d\x60\xf2\x13\x59\xb5\x64\x88\x82\x1a\xec\x60\x6d\x10\x6e\xea\xdc\x96\xa1\x69\x86\x24\x2e\x97\x04\xc5\xb3\x8f\x4b\xb1\xbd\x56\x30\x49\xcb\x99\x82\x92\x35\xcb\xe2\x57\x78\xa2\x9d\xff\xbf\x02\x00\x00\xff\xff\x50\xcc\x31\x90\xe8\x02\x00\x00")

func nameServiceGeneratedCliHandlersClient_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedCliHandlersClient_handlerGotemplate,
		"NAME-service/generated/cli/handlers/client_handler.gotemplate",
	)
}

func nameServiceGeneratedCliHandlersClient_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedCliHandlersClient_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/cli/handlers/client_handler.gotemplate", size: 744, mode: os.FileMode(436), modTime: time.Unix(1478723139, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x55\xdf\x6f\xdb\x36\x10\x7e\x96\xfe\x8a\x9b\x11\x0c\x52\xa0\x50\xef\x1d\xfc\x52\x77\x2b\x3a\xac\x9d\xd1\x06\xdb\xc3\x30\x0c\x34\x45\xcb\x84\x65\x52\xa3\x68\x27\x86\xa0\xff\x7d\x77\xfc\xe1\xc8\x5e\xd2\xa2\x41\xc4\xe3\xc7\xfb\xf1\xdd\x7d\x97\xba\x86\x35\x17\x7b\xde\x4a\x68\x6d\x2f\xa0\xb7\xe6\xa4\x1a\x39\x00\x87\xf6\xeb\x7a\x05\xa2\x53\x52\x3b\xd8\x1a\x0b\x6e\x27\x61\x1c\xd9\x37\x69\x4f\x4a\x48\xf6\x85\x1f\xe4\x34\xc1\x10\x8f\x79\x3f\x73\x93\xe7\xea\xd0\x1b\xeb\xa0\xc8\xb3\x45\x6b\x3a\xae\x5b\x66\x6c\x5b\x3f\xd7\x5a\xba\x5a\x18\xed\xe4\xb3\x5b\xf8\x3b\xd3\x76\x92\xcd\x20\xf4\xfc\xed\x9b\xfa\x20\x1d\x6f\xb8\xe3\x1e\xa2\xdc\xee\xb8\x61\xc2\x1c\xea\x7e\xdf\xd6\xd2\x5a\x63\x87\x45\x7e\x7d\xd3\x9a\x87\xbd\x72\x35\xfd\x48\xdd\xf4\x46\x69\x0a\x4c\xbe\x9c\xe5\x7a\xf0\x59\xbe\x81\xbf\x00\x62\x52\x79\x86\x6c\x3d\xee\xd4\x00\x91\x83\x3c\x1b\x4e\x02\x16\x48\xca\x27\x5f\xee\x9a\xbb\x1d\x3c\x20\x29\x75\x2b\xb5\xb4\xdc\xc9\x06\x63\xf5\x1b\x0f\x59\xbf\xbf\x06\x2d\xf2\x32\xcf\xd1\xe1\x17\xf9\x04\x56\xba\xa3\xd5\x48\xba\x4e\x7c\xc2\x06\xe9\x94\x0d\x6c\xce\x37\x9d\x40\xf2\xb4\x14\x4e\x19\xcd\xe0\x93\x03\x4c\x06\xfb\x42\x7e\xac\xc4\x5c\xf5\xa0\x36\xaa\x53\xee\x0c\x66\xeb\x1b\x26\x78\xd7\x49\xec\x9d\x81\x46\xf1\xae\xc2\x08\x0d\x74\x98\x98\x45\x7f\x66\x90\x55\x00\xbd\xf8\xcc\xb7\x47\x2d\x28\xa7\x82\x8c\x70\x4f\x95\xb3\x95\x0f\xbd\x42\x43\x05\xa6\x27\xdc\x00\x8c\x45\xf3\xef\xde\x50\x42\xd1\x6f\xd8\x38\x7e\x34\x34\x17\x70\x33\x25\x74\x92\xb6\x02\xdf\xa2\x12\xc6\x3c\x3b\x71\xcc\x40\xc4\xa2\xd0\xf3\x56\xb5\xc8\x2f\x8d\xd9\x3f\x15\x6c\xe1\xdd\x12\x90\x7c\x9c\xa6\x14\x0e\x9f\x64\xf8\x9a\x2e\xb6\xc5\x8f\x42\x94\x78\x56\x5b\x72\x08\x3f\x2c\x41\xab\xce\x23\xb2\x40\x24\x9d\x63\xb0\x81\xfd\x69\x79\x5f\xe0\x77\x05\x0b\xc1\xb5\x36\x0e\x78\xdf\x77\xe7\xe8\x79\x41\x8e\xa6\x1c\xff\xe7\x99\x98\xd5\x33\x50\xa4\xbf\xfe\xbe\x9a\x93\xab\x82\x29\xdc\x6b\xb7\xef\x25\x16\x21\x0b\x4a\x26\xce\xf9\x1f\xbc\x3b\xca\xe1\xd1\x7c\xc4\x2e\x7e\x8e\xe3\x5b\x08\xc1\x76\x92\x37\xd2\x0e\x65\x59\x51\xf8\x6c\x1c\x1f\xe0\x09\xe7\x10\xee\x9c\xa4\xe0\x6c\x42\xe3\xcc\x8a\x23\xee\xa9\xc5\x2b\x44\xb0\xa8\xda\xc0\x2f\x45\x23\x64\xe0\xec\x4e\x25\x50\xea\x02\x86\xdd\x99\x66\x08\x40\xcf\xfd\x38\x3e\x9a\xdf\xcc\x13\xce\xc1\x9d\x8a\x4d\xfa\x39\xca\x03\x92\x4e\x58\xb2\xf8\x57\x9e\x5f\x0a\xf3\xf6\xc3\x25\x5c\x33\x82\x63\x14\x48\x29\xc2\x5b\x62\x44\x57\xf1\x1b\x35\x91\x6a\x9a\x26\x9c\x9c\x79\xbe\xc1\xb8\x98\x43\xd5\xad\x11\xa5\x87\x09\x0a\xd3\x48\x22\x76\x86\xf8\x2a\xff\x45\xbe\xdd\x1c\xf7\x41\xbe\x8a\xf3\x82\x91\x09\x38\x9f\x5f\x04\xa5\xeb\xc7\x73\x9f\x12\x1a\xa7\x84\xbd\x1a\x15\x94\x42\xb4\x97\x17\xca\x8a\xd2\x5b\x62\x67\x90\xd1\xd8\xcd\xf8\x95\x3e\xf2\x34\xb1\xa1\x9a\xf0\x76\x18\x09\x30\xef\xe5\x6d\x23\x69\x7f\x78\x77\xff\xeb\xc1\x3b\xc0\x7f\xdf\xe9\x51\xf5\x12\x3b\x9b\x2a\x12\x4a\x8e\x59\x38\xac\xf1\x4a\x8b\x30\x38\x7b\x14\x8e\x44\x15\xc7\x14\xc5\x80\x36\xa5\x5b\xc2\xe3\xba\x99\x6b\x81\xb6\x10\x07\xda\x1c\xfe\xe4\x76\xdc\xc1\xc1\x34\x6a\xab\xe4\x10\x16\xcc\x65\x77\x91\xce\x7d\xb4\xab\xf7\xf4\xb4\xb8\x9f\x27\x50\x06\xf9\xe6\x61\x1f\xad\xdc\x73\x52\xd1\x37\x4c\xbe\xd8\xcb\xb3\xdf\x40\x21\xa3\xf2\xda\xd9\x78\x21\xd5\xbb\x35\xf0\x9a\x63\xbf\x2e\x4c\xd2\x20\x4e\x2e\xb9\xcc\xe7\x0b\x84\x44\x39\xc5\xf8\xdf\x53\xb2\xcf\x25\x91\x53\xde\x28\x20\xce\xe2\x2f\xe4\xe4\x26\x2f\xe1\x9e\x93\x5f\xb6\x0a\xbf\x2b\x38\x34\x70\x9f\xfe\xc4\xb1\xcf\x1f\xca\x5b\x84\x4f\x9b\xf4\xdb\x73\x35\xef\x49\x96\x56\xe7\xfe\x65\x75\xfa\xc4\xbc\x6a\x71\x51\x9e\x70\x73\xfb\x3b\x0c\xcb\x7c\x1d\xc5\xbe\x64\x45\xcc\xfa\x27\xba\x0c\x02\x0f\x8e\x97\xb4\x24\x89\x69\x7f\x44\xb7\x15\x9c\xfc\x44\x4f\x7e\x5d\x86\xe5\x1b\xa0\xf3\xf5\x7b\x8f\xf9\x2f\xe1\x52\xc0\xaf\x38\x71\x05\xda\xaa\x17\xd3\x9a\xde\x04\xaf\xd8\xbf\xb2\x4c\xee\x22\x33\x98\x5d\xe0\xfd\xbf\x00\x00\x00\xff\xff\xe3\x54\x2c\xcd\x98\x08\x00\x00")

func nameServiceGeneratedClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientGrpcClientGotemplate,
		"NAME-service/generated/client/grpc/client.gotemplate",
	)
}

func nameServiceGeneratedClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/grpc/client.gotemplate", size: 2200, mode: os.FileMode(436), modTime: time.Unix(1481916361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x9d\x53\x78\xae\x44\x7c\x08\x96\x8e\x48\xe4\x02\x51\xf9\x84\x0a\x13\x47\xce\x67\x8a\x7a\x77\x18\xd8\xdf\x9b\x53\x17\xb9\x01\x52\xfd\xcc\xf8\x8c\xa1\x15\xad\xfa\x6b\xa7\x3e\xc9\xce\x28\x6d\x74\x0f\x2a\xf1\xee\x56\x88\x54\x5d\x1e\x1e\xb2\xf9\x1d\xb2\xe8\x71\x9c\xe6\xdc\x8a\x99\xa4\x35\xe7\xeb\x0a\xeb\x88\x74\xb1\x1d\x8d\xf9\x5f\x24\xfd\xd4\x37\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func nameServiceGeneratedClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientHttpClientGotemplate,
		"NAME-service/generated/client/http/client.gotemplate",
	)
}

func nameServiceGeneratedClientHttpClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/http/client.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x55\x5f\x6f\xdc\x36\x0c\x7f\x3e\x7f\x0a\x2e\x08\xb0\xbb\xc1\xd1\xbd\x0f\xe8\xcb\x8a\xfd\xc9\x43\x8b\x62\xed\x17\xd0\xc9\xb4\x2d\x44\x96\x5c\x49\xbe\x24\x33\xfc\xdd\x47\x4a\xb6\xe3\xec\x8c\xa1\x05\x1a\xdb\x14\xf9\x23\xf9\xfb\x91\xba\x5e\xaa\x27\xd9\x20\x84\xab\x2a\x8a\xf3\x19\xbe\xb5\x3a\x40\xad\x0d\x82\x72\x36\x4a\x6d\x03\x74\x18\x5b\x57\x05\x88\x0e\x3a\xf9\x84\xa0\x6d\xa5\xaf\xba\x1a\xa4\x01\xb4\x55\xef\xb4\x8d\x14\xe2\x5d\x07\x01\xfd\x55\x2b\x0c\x25\x23\x79\xfc\x3e\x60\x88\x20\x6d\x45\xef\xa1\x77\x36\x20\xc4\xd7\x1e\x13\x12\xbb\xd2\x67\xeb\xc8\xb8\xa2\x94\x20\x03\x3c\xa3\x31\xfc\x44\xab\x5c\x85\x3e\x30\x00\xe3\x55\x38\x7f\xd7\xce\xcf\x81\x09\xad\x4c\x06\x49\x41\xae\x06\x37\x78\x08\x43\xdf\x3b\x1f\xb1\x82\xe8\xa5\x0d\xfc\xce\xe9\xb4\x34\xfa\x1f\x19\xb5\xb3\x8c\x46\x31\x9d\x8c\x41\xc0\x23\x55\x68\x82\xa3\xae\x94\x19\x2a\x0c\x6b\x35\xd0\xe9\xaa\x32\xf8\x2c\xa9\x78\x51\x14\xba\x4b\x40\xc7\xe2\x70\xd7\x38\x23\x6d\x23\x9c\x6f\xce\x2f\x67\x8b\xf1\xcc\x54\xe1\x4b\xbc\x2b\xf8\x50\xc7\x76\xb8\x08\xe5\xba\x73\xe3\x1e\x9e\x74\x3c\xf3\xff\x05\x94\x5d\xfa\x0b\xdc\x8d\xa3\xf8\xf2\xdb\x63\x82\xfc\x22\x63\x0b\x0f\xd3\x74\x57\x9c\x92\x02\xbf\xaf\x9c\x2a\x67\x0c\x2a\x7a\x99\x9b\x8b\xed\x86\x2b\xfa\x92\x91\x5c\x08\x83\x98\x90\x16\x64\x55\x2d\x02\x70\x57\x3f\x07\x06\xeb\x50\x52\x27\xc4\xf7\x05\x61\x08\x44\x09\x11\x2b\xa1\x45\xd3\x23\x11\x15\xfd\xa0\x62\xc9\xc7\x73\xaa\xfd\x4c\xf4\xc7\x81\x64\xb8\xa0\x6d\x43\xa3\xd1\x4b\x2f\x69\x2a\xd0\x0b\x32\xb2\xfd\x91\xd2\x67\x49\x7d\x09\x9a\x72\x73\xb2\x7a\x30\x49\x9a\x7a\xb0\x8a\x69\x9f\x4b\xb6\xc8\xca\x38\x70\x54\x82\x8c\x08\x8e\x63\xe9\xfd\x61\x49\xc8\x80\x17\x19\x34\x89\xf3\x07\x85\xe3\x8b\xec\x7a\x83\x25\xbc\xba\x81\x34\x69\xda\x48\xf9\x03\x8f\xc5\x86\x2a\x2e\x70\x4d\x94\xf3\xf4\xde\x55\x03\x0d\x23\xc3\x91\x6f\x1b\x63\x2f\xfe\xa2\x59\x32\x5c\xe3\x33\xa9\x04\x28\x55\x3b\x4f\x37\x1c\x97\xec\x27\x3a\xf3\x54\xe1\xd0\x67\xd0\xd0\xa3\xd2\xb5\x56\x94\x34\xb6\x02\x8e\x8f\xa9\x3e\x5a\x12\xc2\xbf\xc8\x8b\x79\x25\x9f\x4e\x87\x98\x37\x83\xa6\x34\xe8\xc6\x72\xa8\xb6\x57\xf7\x84\x89\xca\xaf\x59\x96\x75\x93\x52\x89\xf8\x5e\xec\x2c\x06\x43\x2c\x4c\x8a\xd3\x96\x5d\x65\x34\xda\xf8\x9e\xdd\x8d\x70\x6f\x4b\x49\x15\xd1\x3c\x66\x38\xea\xe3\x7f\x64\xe4\xf5\xc9\x5c\x69\x66\xb8\xc3\x3c\x56\x6f\xf5\x52\x04\xfa\x5a\xf2\x40\xed\x2b\xc1\x60\x6b\xb2\xfd\x8b\x61\xe0\x64\x6f\x9b\x78\x4e\x3a\x7c\xc6\xe7\x8f\x73\x3f\x34\xc1\x17\x6d\x13\x4f\x5d\x62\x36\x55\xb9\xd1\xb6\x9c\x6f\x90\x38\x78\x4b\xdd\x73\xd3\x5c\xa3\xa2\x4e\x69\x86\xd3\x3c\xcf\xf5\x8a\x22\x75\x74\xc3\xe9\x58\x8c\x23\xe5\xa7\x5b\xee\x5e\xc3\xaf\x1f\x40\x2c\xfe\x9f\xb2\x1e\xd3\x54\x1c\xc6\xf1\x5e\x8b\xcf\x34\xd5\xd3\xb4\xc4\x03\xfd\x5b\xfa\x10\x8b\x91\xa0\x1e\xd8\x4a\x31\xd3\xfb\x75\xfd\x81\x24\x3c\xa0\x34\x69\x6f\x31\x27\xd8\xe4\x3d\xaa\xf8\x02\xf3\x55\x22\x3e\xe6\x67\xc9\x03\xf1\x4b\x7f\x11\xe3\xf8\xa7\x63\x37\x42\x17\x7f\xe7\x9b\xf5\x1b\x35\x3b\x87\x9e\xe0\x78\xeb\x94\xaf\xdc\x8d\x57\x09\xe8\xbd\xf3\x94\xb4\x38\x1c\x96\x2b\x39\x19\xb9\x60\x14\x3b\x1c\x70\x4d\x5c\xc3\x89\x22\x74\x9d\x5c\x7f\xfa\x00\x56\x9b\x84\x71\x98\x55\xa1\xef\x04\x43\xa6\xa9\x58\xad\x4b\x06\xf1\x23\xb5\x9d\x4a\x46\x29\x28\x7e\x1c\x33\xbd\x4c\xee\x27\xde\xaa\x2d\xc3\x69\x6f\xef\xe9\xd6\x60\x86\xb3\x6e\x5b\xd2\xe9\x64\x8f\xf7\x4c\x3c\x83\xed\xb5\x48\xab\xcc\xe5\x6d\x63\xb3\xc7\xd7\xb4\x86\xa7\xdb\x21\x78\xd7\x3c\x63\xef\x4b\xb7\xfc\x02\xae\x6b\x34\xb2\x50\xeb\x6f\xe1\xc6\x9c\x45\xd8\xa8\xc3\xe8\xdf\xb9\xa3\x19\x63\x8f\xc3\x9b\x21\x48\x71\xd7\x55\xd0\x20\xfe\x33\x5c\xa9\xa2\xec\xb5\xa3\xe5\x9e\x9a\x59\xcf\xf5\xe4\x3a\x8b\x94\xcd\x89\xfd\xac\xd5\xf2\xfc\x37\x00\x00\xff\xff\x5a\xa4\x38\xcd\x4e\x08\x00\x00")

func nameServiceGeneratedEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedEndpointsGotemplate,
		"NAME-service/generated/endpoints.gotemplate",
	)
}

func nameServiceGeneratedEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/endpoints.gotemplate", size: 2126, mode: os.FileMode(436), modTime: time.Unix(1478128977, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\xdf\x6f\xdb\x36\x10\x7e\xb6\xfe\x8a\x9b\x51\x0c\x56\x10\xcb\x7b\x2e\x90\x97\xa6\x5d\x53\x6c\xe9\x82\x2e\xd8\x1e\x8a\xa2\xa0\xa5\xb3\x4c\x58\x12\x15\x92\x76\x92\x09\xfe\xdf\x77\x47\x4a\xb2\xfc\x23\xb2\xda\x3c\x04\x0e\xc5\xfb\xf1\xdd\xf7\xdd\x51\x54\x29\xe2\x95\x48\x11\xcc\x26\x0e\x82\xd9\x0c\xee\x97\xd2\xc0\x42\x66\x08\xa5\x56\x1b\x99\xa0\x01\x83\x7a\x83\x7a\x6a\x68\x01\x73\x59\x24\xb2\x48\xc9\x44\x69\xb0\x4b\x84\xf4\xcb\xdd\x35\x58\x2d\x0a\x53\x2a\x6d\x23\x0e\xf1\xc9\xc2\xda\xca\x4c\xfe\x47\xbe\x6c\xd2\xee\xce\x52\x5d\xc6\xd1\xdf\x2e\x5c\x14\x04\x32\xe7\x87\x30\x09\x46\xe3\x02\xed\x6c\x69\x6d\x39\x0e\x68\x91\xaa\x4c\x14\x69\xa4\x74\x3a\x7b\x9a\xf1\x4e\xac\x0a\x8b\x4f\x76\xec\xf6\x54\x9a\x61\xd4\x31\xe1\x98\xb3\x1c\xad\x48\x84\x15\xec\xcf\x0f\xda\x94\x30\x4e\xa5\x5d\xae\xe7\x51\xac\xf2\x59\xaa\xa6\x2b\x69\x67\xfc\xb7\x8f\x89\xdd\x9a\xda\x19\x9e\x8c\x31\x18\x95\x73\x18\x57\x55\x74\xf7\xee\x93\xc3\x79\x27\xec\x12\xa6\xdb\xed\x38\x08\x03\xc7\xd4\xad\x58\xe1\x47\xaa\xde\xd7\x03\x39\x2d\x0d\x08\x62\xcb\x82\x5a\x00\x16\x49\xa9\x64\x61\xe9\xd1\x46\xc8\x4c\xcc\x89\x51\xc1\xfb\x8e\xb0\xaa\xfa\xa8\x3e\x8b\x1c\x21\xaa\xd3\x45\xbc\xda\x6e\x1b\x6e\x16\xeb\x22\x3e\x48\x30\x89\xed\x13\xd4\x4c\x44\xd7\xfe\xf7\xb2\x93\xe6\x43\xf3\x5f\x08\xe5\x3c\xea\x4f\x00\x55\x30\xf2\xaa\xfe\x55\x5a\xa9\x0a\x03\x6f\xaf\xe0\xeb\xb7\x3d\xe6\x6a\x9d\xbc\x01\xd9\x8f\xe0\xd4\xf6\x3b\xa4\x46\xc0\x49\xc3\xff\xbd\xaa\x91\x85\x97\xc1\x68\x1b\x8c\x34\xda\xb5\x2e\xe0\x57\x76\xf5\x0e\x95\x63\xba\xaa\xe0\x5e\xfd\xa9\x1e\x09\xca\x1e\x40\xd8\x92\x53\x55\x51\x12\x6a\xc9\x37\x92\x61\xb5\xfb\xb7\x68\x97\x2a\x31\x6c\x41\x26\x8d\xfb\x1b\x59\x57\xf6\xf6\x00\xdf\x67\x7c\xac\x89\x23\xfb\x11\x91\x77\xc9\xbf\x2d\x5f\xc4\x50\xeb\xda\x50\xe7\x2c\xde\x63\xac\x12\xc7\x7b\xc7\xe2\x0b\x3e\xac\xd1\x78\x83\x0f\xc5\x49\x03\xca\x5a\x18\x74\x16\x7b\xd4\x46\x51\xc4\x0f\x99\x90\xaa\x9a\xb2\x60\x5c\xc1\x36\xd8\xba\x26\xda\x11\x03\x34\x0e\x19\xe6\xc8\x5a\xf2\xd4\x9c\x51\x90\xe0\xa2\x5e\x08\x6a\x54\xfb\x5c\x62\x37\x8e\xb1\x7a\x1d\x5b\x92\xf8\x3c\x8f\x27\x68\x04\x38\xe0\xf1\x46\x14\x49\x86\x3a\xd8\x81\xf7\xc8\xeb\x30\xee\x20\xe8\x64\xb7\x6a\x57\xc8\xf0\x1a\xce\x42\x75\x03\x31\x31\x70\xb1\x4b\x15\xee\xc2\xb7\xe8\x4f\x0f\x89\xc6\x07\xb8\xe8\x0e\x05\xd9\xd7\x8a\xde\x13\x79\xb5\x6f\x08\x93\x63\x23\xaf\x6a\xc7\x8a\x46\x4e\x6b\xc5\xc9\x83\xd1\x77\x0e\x5d\xba\x27\x0c\x9b\x7b\xea\x88\x4f\x3f\x27\xdc\x2d\x8c\xcd\x61\x09\x83\x91\x5c\x38\xa7\x5f\xae\xa0\x90\x19\x87\x6a\x26\x85\x96\x2e\x5e\x77\x7a\x28\x47\x34\x04\x5a\x78\xc9\xee\x24\x4f\x55\x79\xa1\x58\xa6\x9a\x6a\xdf\xd5\xe7\x79\x26\x8f\xbe\x01\x00\xc9\x47\xd8\xc1\x81\xee\x1d\x6a\x8b\xdf\x59\x28\xbb\x14\x96\x65\xa0\xcc\x7c\x00\xba\x46\xf7\xc7\xde\x71\xbf\xe9\x3a\x32\x35\x8e\x80\x35\x8d\xce\x34\x51\xb9\x90\x45\x9f\x71\x04\x77\x5a\xe6\x42\xcb\xec\x99\x5d\x16\xeb\x8c\x7a\xc9\x9d\xbd\x9d\xe3\xb3\xaf\x8e\xc9\xf7\xe3\x2e\xe1\x5a\x68\x7b\xd7\x95\x15\xb7\x44\x67\xd5\x95\x9e\x5b\x8a\x18\xac\x7d\x4e\xc9\x73\xd4\x5e\x1d\x3d\x1f\x8e\x94\x62\x8a\xae\x33\xc9\x43\xf3\x7a\xa9\x7c\x67\xf4\x6a\xe5\x4d\x7e\x42\xac\x92\x28\x1f\x28\x95\xcf\xf1\x92\x56\xb1\xab\xb6\x5f\x2b\x1f\xe1\x65\xb1\x18\xcc\x40\xb9\xd8\xb4\x15\x8c\x16\xc3\x26\xaa\x3b\x83\xd9\x73\xcf\x7c\xf9\x97\xc2\x20\xd1\x7a\xdf\x1f\x27\x45\xf3\x1e\xe7\x44\x1b\x2a\x88\x97\xaf\x5f\xe2\x41\x03\xd6\x5b\xc8\x29\xd1\x5a\x04\x03\x35\x33\x25\xb3\xd8\x36\xd2\x8f\x2a\x66\xca\xbe\x31\x7b\xbd\x62\x2f\x9f\x88\x8d\x60\xbd\x27\xe2\xc0\xb3\xee\xac\x5c\xbd\x27\xe2\xde\x94\xf5\xd5\x71\x5a\xaf\xba\xc4\x1f\x38\x11\x1b\x3c\xaf\x3e\x11\x89\xa1\x1b\xcc\x4a\xd4\x26\xf0\xe8\x8f\xee\x98\xa7\x5f\xf6\x79\x02\x17\x8d\x69\x74\xfb\x3e\x3c\xb4\x60\xac\x7c\x67\x59\x5d\xc2\xc6\x01\x76\xf2\x5f\x90\x1b\xbf\x86\xe9\xc5\xbc\xe9\xbe\x96\xfd\x67\x01\xc2\x0a\x9f\x9d\xd2\x49\x82\x09\xcc\x15\x7d\x0a\x10\xbd\x4d\x1a\xbe\x03\xe5\xa4\xef\x64\x15\xc2\xe3\x52\xc6\x4b\x67\x9a\x65\x90\xb1\x58\x75\x14\xba\x46\xb9\x7b\x1d\x7f\xe6\x44\xd7\xa2\x50\x85\x8c\x45\x76\x83\x22\x41\xfd\x07\x45\xa7\x6f\x06\x5b\x27\x32\xca\xf7\x8b\xa4\x96\x11\x05\xcc\xb1\x09\x11\xc7\x68\x0c\x01\xa0\xdc\x48\x9f\x35\xd4\x08\x3e\x73\x7d\xc3\x85\xab\xb6\xd8\x7f\x69\xfb\x1f\x91\xad\xd1\xdf\x3a\xb8\xd8\xaf\xbf\x7d\x0b\xcf\x1a\xbe\x80\x8e\x2a\xdb\x45\x70\xd7\xd7\x56\x3b\x72\x23\xd9\xfe\x0f\x00\x00\xff\xff\x09\x00\x51\xc2\x47\x0e\x00\x00")

func nameServiceGeneratedTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_grpcGotemplate,
		"NAME-service/generated/transport_grpc.gotemplate",
	)
}

func nameServiceGeneratedTransport_grpcGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_grpc.gotemplate", size: 3655, mode: os.FileMode(436), modTime: time.Unix(1478128977, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x9d\x53\x78\xae\x44\x7c\x8d\x8e\x48\xcd\x05\xa2\xf2\x09\x88\x50\x47\xce\x87\xc5\xca\xdd\x61\x60\x7f\x2f\x42\x17\xd9\x00\xa9\x76\xa6\xbf\xc7\xd0\x8a\xa3\xda\xf3\x41\xbd\x93\x9d\x5e\x8e\xd1\xcd\xa9\xc4\xab\xb7\x42\x8c\x54\x4d\x6e\xe6\xb2\xdb\x15\xb2\xe8\x9c\xa7\x88\xbd\xb4\x26\x69\xcd\xf9\xb2\xa2\x75\x78\xda\xe0\x1f\x78\xfe\x1f\x49\x3f\xf5\x0d\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func nameServiceGeneratedTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_httpGotemplate,
		"NAME-service/generated/transport_http.gotemplate",
	)
}

func nameServiceGeneratedTransport_httpGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_http.gotemplate", size: 106, mode: os.FileMode(436), modTime: time.Unix(1479408041, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerServer_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func nameServiceHandlersServerServer_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerServer_handlerGotemplate,
		"NAME-service/handlers/server/server_handler.gotemplate",
	)
}

func nameServiceHandlersServerServer_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerServer_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/server_handler.gotemplate", size: 62, mode: os.FileMode(436), modTime: time.Unix(1479408041, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceMiddlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x0c\xc6\xc1\x0d\xc3\x20\x0c\x05\xd0\x7b\xa7\xf0\x19\xa9\xf5\x30\x9d\x00\xd5\xbf\x16\x0a\x60\x84\x1d\xe5\x80\xd8\x3d\xb9\xbd\xb5\x38\xd1\x17\x20\xb5\x77\xcc\xd3\x9d\x15\x5d\xed\x28\xc1\xad\x88\x54\x5c\x79\xc2\x39\xd0\x46\xcd\xf1\x08\x5d\x86\x95\x1e\xfe\x51\xa3\xbf\x4d\xfa\x99\x80\x12\xef\xfd\xba\x03\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func nameServiceMiddlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceMiddlewaresEndpointsGotemplate,
		"NAME-service/middlewares/endpoints.gotemplate",
	)
}

func nameServiceMiddlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceMiddlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(436), modTime: time.Unix(1481916361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceMiddlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x0c\xc6\xc1\x0d\xc3\x20\x0c\x05\xd0\x7b\xa7\xf0\x19\xa9\xf5\x30\x9d\x00\xd5\xbf\x16\x0a\x60\x84\x1d\xe5\x80\xd8\x3d\xb9\xbd\xb5\x38\xd1\x17\x20\xb5\x77\xcc\xd3\x9d\x15\x5d\xed\x28\xc1\xad\x88\x54\x5c\x79\xc2\x39\xd0\x46\xcd\xf1\x08\x5d\x86\x95\x1e\xfe\x51\xa3\xbf\x4d\xfa\x99\x80\x12\xef\xfd\xba\x03\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func nameServiceMiddlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceMiddlewaresServiceGotemplate,
		"NAME-service/middlewares/service.gotemplate",
	)
}

func nameServiceMiddlewaresServiceGotemplate() (*asset, error) {
	bytes, err := nameServiceMiddlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/middlewares/service.gotemplate", size: 76, mode: os.FileMode(436), modTime: time.Unix(1481916361, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-service/NAME-cli-client/client_main.gotemplate": nameServiceNameCliClientClient_mainGotemplate,
	"NAME-service/NAME-server/server_main.gotemplate": nameServiceNameServerServer_mainGotemplate,
	"NAME-service/generated/cli/handlers/client_handler.gotemplate": nameServiceGeneratedCliHandlersClient_handlerGotemplate,
	"NAME-service/generated/client/grpc/client.gotemplate": nameServiceGeneratedClientGrpcClientGotemplate,
	"NAME-service/generated/client/http/client.gotemplate": nameServiceGeneratedClientHttpClientGotemplate,
	"NAME-service/generated/endpoints.gotemplate": nameServiceGeneratedEndpointsGotemplate,
	"NAME-service/generated/transport_grpc.gotemplate": nameServiceGeneratedTransport_grpcGotemplate,
	"NAME-service/generated/transport_http.gotemplate": nameServiceGeneratedTransport_httpGotemplate,
	"NAME-service/handlers/server/server_handler.gotemplate": nameServiceHandlersServerServer_handlerGotemplate,
	"NAME-service/middlewares/endpoints.gotemplate": nameServiceMiddlewaresEndpointsGotemplate,
	"NAME-service/middlewares/service.gotemplate": nameServiceMiddlewaresServiceGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-service": &bintree{nil, map[string]*bintree{
		"NAME-cli-client": &bintree{nil, map[string]*bintree{
			"client_main.gotemplate": &bintree{nameServiceNameCliClientClient_mainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"server_main.gotemplate": &bintree{nameServiceNameServerServer_mainGotemplate, map[string]*bintree{}},
		}},
		"generated": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"client_handler.gotemplate": &bintree{nameServiceGeneratedCliHandlersClient_handlerGotemplate, map[string]*bintree{}},
				}},
			}},
			"client": &bintree{nil, map[string]*bintree{
				"grpc": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientGrpcClientGotemplate, map[string]*bintree{}},
				}},
				"http": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientHttpClientGotemplate, map[string]*bintree{}},
				}},
			}},
			"endpoints.gotemplate": &bintree{nameServiceGeneratedEndpointsGotemplate, map[string]*bintree{}},
			"transport_grpc.gotemplate": &bintree{nameServiceGeneratedTransport_grpcGotemplate, map[string]*bintree{}},
			"transport_http.gotemplate": &bintree{nameServiceGeneratedTransport_httpGotemplate, map[string]*bintree{}},
		}},
		"handlers": &bintree{nil, map[string]*bintree{
			"server": &bintree{nil, map[string]*bintree{
				"server_handler.gotemplate": &bintree{nameServiceHandlersServerServer_handlerGotemplate, map[string]*bintree{}},
			}},
		}},
		"middlewares": &bintree{nil, map[string]*bintree{
			"endpoints.gotemplate": &bintree{nameServiceMiddlewaresEndpointsGotemplate, map[string]*bintree{}},
			"service.gotemplate": &bintree{nameServiceMiddlewaresServiceGotemplate, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

