// Code generated by go-bindata.
// sources:
// NAME-service/NAME-client/client_main.gotemplate
// NAME-service/NAME-server/server_main.gotemplate
// NAME-service/generated/client/grpc/client.gotemplate
// NAME-service/generated/client/http/client.gotemplate
// NAME-service/generated/endpoints.gotemplate
// NAME-service/generated/transport_grpc.gotemplate
// NAME-service/generated/transport_http.gotemplate
// NAME-service/handlers/client/client_handler.gotemplate
// NAME-service/handlers/server/server_handler.gotemplate
// NAME-service/partial_template/client_handler.methods
// NAME-service/partial_template/service.interface
// NAME-service/partial_template/service.methods
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameServiceNameClientClient_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xdb\xb6\x13\x7e\x16\xff\x8a\xab\x90\x02\x72\xe1\xd2\xfd\x01\xbf\xbd\x18\xf0\x43\x9b\xa5\x6b\x80\xb5\x30\xe2\x00\x7d\x29\x30\x30\xe4\x49\xe2\x22\x91\x2a\x49\x2b\x09\x04\xfd\xef\xc3\x51\xb2\x6c\x27\x4e\xb3\x6e\x2b\xd0\x48\x3c\xde\x7d\x77\xbc\xfb\x3e\xca\x8d\x90\xb7\xa2\x40\xa8\x85\x36\x8c\xe9\xba\xb1\x2e\x40\xc6\x92\x14\x8d\xb4\x4a\x9b\x62\xf1\xa7\xb7\x26\x65\x49\x9a\x57\xa2\x88\xcf\x3a\xd0\xc3\x7a\xfa\xeb\x83\x93\xd6\xb4\xe3\xab\x36\x45\xb4\x06\x5d\x63\xca\x58\x92\x16\xb6\x12\xa6\xe0\xd6\x15\x8b\xfb\x85\xc1\xb0\x90\xd6\x04\xbc\x8f\x00\x85\xb5\x45\x85\xfc\xc0\xa5\x70\x8d\x1c\xc2\x74\x28\xb7\x37\x5c\xda\x7a\xd1\xdc\x16\x0b\x74\xce\x3a\x4f\x3b\x8b\x05\x5c\x97\xda\xc3\x06\x5d\xab\x25\xb2\xa4\x14\x46\x55\xe8\x20\xed\x3a\x7e\x19\x8b\x5f\x8b\x50\xc2\xdb\xbe\x87\xc5\xb8\xe7\x17\x1e\x5d\x8b\x2e\x65\x89\xac\x34\x9a\xf0\xe9\xef\xc4\x0c\xae\x29\x4b\xa8\xa8\x61\x71\x32\xa0\x40\x83\x4e\x04\x54\x63\xc4\x78\x88\xa4\x0c\xa1\xf9\x99\x30\xf2\x4f\x59\xd2\xdc\x44\xf7\xf5\x87\xe3\x80\x94\xcd\x18\x6b\x85\xa3\xc9\xfc\x01\x2b\x18\xdb\xce\xd7\xc2\x79\xbc\x34\x61\xb2\xd2\x04\xf8\xa6\xa9\xf4\x68\xa2\xe1\xf1\x73\x5b\x37\x42\x8e\x96\xa1\x99\xfc\xab\x13\x4d\x3e\x58\x9a\x1b\x7e\x85\x85\xf6\x01\x5d\xd7\xf1\xb1\xb5\xfc\x37\x0c\x5f\x44\x8d\x7d\xbf\x89\xdd\xa3\x02\x58\xbe\x35\x32\x32\x25\x9b\x41\x37\x4e\x03\x41\x28\x25\x2b\x0d\x8d\x43\xbf\xad\xd1\x83\xb1\xe0\x07\x10\x50\xda\x4b\xdb\xa2\x7b\x00\xff\xe0\x03\xd6\x73\x10\x46\x01\xde\x37\x28\x83\x87\xad\x47\xe7\x21\xd8\x88\xd4\x38\xdb\x6a\x85\x10\x4a\x0a\x73\x28\x03\x01\x3b\xf4\x1e\x6c\x0e\xc2\xec\x30\xf9\xc0\x80\x21\x5b\x13\xb4\x35\xa0\x3d\x38\xcc\x2b\x94\x01\x15\x68\x13\xe1\x08\x86\xaa\xba\xd1\x46\xb8\x87\x98\x96\x4c\xa3\x99\xc6\x32\x32\xdf\x2f\xa3\xf1\x6d\x70\xc2\x78\xea\x39\xa7\xb4\x40\x6c\xf7\x11\x89\x42\x5b\xe1\xb4\xdd\xfa\x5d\xa8\xb4\xc6\x07\xb7\x95\xc1\x3a\x0f\x37\x36\x94\xe3\x91\xa0\xb4\x3e\x2c\xa3\x84\x76\xb3\x60\x2c\x19\xe7\x16\x29\xf1\x9e\xb0\x87\x7f\xab\x98\x83\x6f\xa2\x63\x96\xd2\x6e\x4c\x9d\xce\x21\xa5\xff\x9f\xae\xaf\xd7\x47\x2d\x50\xca\xb7\x32\x9d\xb1\x24\x72\xf2\x79\x24\xda\x9d\x90\x96\xbf\xbc\xfb\xff\x3b\x7a\x29\xae\xd6\xe7\x90\x11\xe8\xec\x19\xd4\x1a\x43\x69\x15\xc0\x69\xd4\x61\x97\x90\xba\xce\x09\x53\x20\x9c\x69\xa3\xf0\x7e\x0e\x67\x1a\x96\x2b\x98\x88\xf3\x39\x3a\xfa\xbe\xef\x3a\x9d\x8f\x4e\xb4\xc0\xca\x23\x3d\xaf\xed\xef\xf6\x0e\x1d\x9c\xe9\x3d\xc7\xba\x0e\x8d\x9a\x1e\xe9\x3c\xf9\x67\x49\xe6\x13\xce\x0f\x92\xd0\x59\x67\x07\x63\xe9\x3a\x7e\x1e\xc7\xfa\xde\x15\x9e\xbf\xaf\xaa\x8f\x34\xfa\xbe\x27\xaf\x24\xb6\x20\xaa\x2c\x23\x01\x4c\x41\x3b\x82\x8f\xf7\x05\x9f\x2e\xa4\x04\xdd\x30\x96\xa8\xb3\x88\xa1\x73\x78\x33\xcd\xfe\xd5\x0a\xd2\x94\xc4\xb3\x83\x98\x93\x27\xac\x60\x7f\x61\xf0\x2f\x78\x97\x4d\x11\x33\x96\xf4\x40\xbd\x03\xc2\x99\x26\xbf\xc7\x91\xd6\x98\x01\x64\xb9\x82\x38\xfb\x5f\xb5\xa8\xb2\xc9\x75\x3e\x18\xbf\xea\x50\x5e\x1a\x8f\x72\xeb\x30\x9b\x1d\x18\xaf\x75\x8d\x76\x1b\x32\xba\xb4\xf9\x06\xa5\x35\x6a\x46\x74\xd0\x79\x04\x7d\xb5\x02\xa3\xab\x98\x29\xc9\xeb\xc0\x3f\x36\x4e\x9b\x90\x67\xd6\xf3\x4d\x50\xe8\xdc\x1c\xd2\x0b\x3a\x2b\xdc\x95\xba\x22\xed\x8a\x4a\x9b\x22\xe2\x93\x50\x0c\x4a\x12\xe9\x12\x5e\xb7\x69\x2c\x93\xb0\x13\xeb\xf9\xc5\xbd\x0e\xd9\xff\x68\xd5\xb3\x24\x51\x98\xa3\x8b\xfe\xfc\xbc\xb2\xb1\xdd\x4f\x5a\xb4\xbf\x8a\x63\x8b\xc8\x79\xdf\x1d\x2a\xf0\xb9\xfa\xe2\x2c\x96\x74\x31\x39\xac\x6d\xc0\x49\x00\xbe\x41\xa9\x73\x8d\xea\x9b\x89\x12\x38\x2c\xab\x67\x27\x5a\xf0\x42\x86\xd7\xed\x37\xb3\x3f\xe5\x31\x1a\x4b\xfc\x9d\x0e\xb2\x84\x37\xa3\xd0\x3a\xd6\x75\x70\xa7\x43\x09\x67\xe1\x22\xb2\x9b\x48\xb7\x27\x3e\x99\xce\xc2\xc5\x53\xce\xd3\xd0\x85\x47\x52\xe2\x29\x9e\xa7\x4b\xea\x70\xd7\xbd\x1d\xc0\xa3\x36\x22\xd0\x01\xcd\x09\x8b\x5e\x0e\x02\xe9\x3b\x43\x81\x91\xe3\x74\xec\x91\xc1\x11\x8b\x7f\x16\xce\x97\x62\xaf\x8d\x21\x41\x14\x14\x2d\x1c\x7e\xdf\xa2\x0f\x13\x0f\x8f\xbe\xb4\xbc\xeb\x0e\xeb\xcb\xba\xee\xa7\x0a\x23\xe5\xf2\x73\x51\x55\x64\x9f\x64\x1c\x69\x74\x82\xa3\x2f\x90\x54\x8a\x2a\xd2\xf3\x47\x05\x3e\x9e\xe3\x23\xba\xc6\x59\x26\x49\x3b\x1d\x76\xf7\x65\x7a\x74\xcc\xf1\xb7\x0e\xff\x20\xe4\x6d\xe1\xec\xd6\x28\xd2\xdd\xd8\xa9\x7f\x59\xfe\xe9\x94\x2f\x17\x3e\x26\x58\x13\x7e\x65\xb2\x74\xe8\x3c\x5c\x0d\x45\xa1\x8a\x94\x59\x46\x2d\x1c\x39\xfe\x77\x23\x3b\x4a\x3f\xfc\xb6\x80\x2b\xf4\x8d\x35\xea\xf9\xf4\xed\x8c\x1d\xf0\xed\x80\x79\x0a\x73\xb1\xad\xc2\xf2\x65\x69\x6a\xd3\x8a\x4a\x2b\x18\xc5\xf7\xfa\x7b\x6c\xd4\xb0\x7a\x2a\xd6\x9e\xb1\xbf\x02\x00\x00\xff\xff\xf6\xa8\x3c\xa8\x1a\x0b\x00\x00")

func nameServiceNameClientClient_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameClientClient_mainGotemplate,
		"NAME-service/NAME-client/client_main.gotemplate",
	)
}

func nameServiceNameClientClient_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameClientClient_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-client/client_main.gotemplate", size: 2842, mode: os.FileMode(436), modTime: time.Unix(1477698725, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceNameServerServer_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x82\x2b\x6c\x01\xa9\x50\xa8\x2d\xda\xed\x21\x58\x1f\x12\x6f\x9a\x0d\x9a\x04\x46\xe2\xa2\x67\x5a\x1a\xd3\x44\x24\x52\x20\x29\xc7\x81\xe0\xff\x5e\x0c\x45\x29\x72\xe0\x38\x3d\xec\x02\x6b\x49\x9c\xc7\xc7\x79\xc3\xf9\x48\xc3\x8b\x27\x2e\x80\xd6\x5c\x2a\x42\x64\xdd\x68\xe3\x68\x42\xa2\x78\x5d\x71\x11\xe3\xb3\x76\xf8\x50\x30\x3c\xf2\x8d\x73\xcd\xf4\x3d\x6f\x1a\xa3\xd7\xb8\xa2\x6d\xff\x9b\x5b\x29\x14\xaf\xf0\xc3\xbe\xd8\x82\x57\x55\x4c\x48\x94\xe7\xf4\xf7\x92\x2e\xb8\x71\x2f\x24\x8a\x85\xae\xb8\x12\x4c\x1b\x91\xef\x72\xa4\x2a\xb4\x72\xb0\xf3\xa7\x08\xad\x45\x05\x6c\x02\x11\xa6\x29\x02\xc7\xb5\xa6\x7f\x4b\x87\x28\xe9\x36\xed\x8a\x15\xba\xce\x85\x3e\x7b\x92\x2e\xc7\xff\xa0\xca\x46\x4b\xd5\xf3\x1c\x45\x54\x5a\x04\xaa\xe5\x46\x5a\xfa\x08\x66\x2b\x0b\x20\xd1\x86\xab\xb2\x02\x43\xe3\xae\x63\x37\x3e\x10\x0b\xee\x36\xf4\x6c\xbf\xa7\x79\xb0\xd9\xdc\x82\xd9\x82\x89\x49\x64\xb7\xc5\x51\xa4\x00\x05\x86\x3b\x28\x63\x12\x35\x2b\x0f\x59\x5c\x1e\x82\x62\x42\x52\x42\xd6\xad\x2a\x7c\xd8\x93\x94\x76\x24\xda\x72\x83\x71\x8f\x4a\x58\xb5\xe2\xa2\x2c\x0d\xf5\xff\x66\x14\x2f\x82\x3d\x3a\x23\x95\x48\x62\x6f\x65\xbc\x2c\x4d\x9c\xd1\xf8\xfc\xeb\x97\x3f\xbf\xe0\xcb\x77\x5c\xa6\x5c\x95\xb4\x06\x67\x64\x61\x69\x25\xad\x03\x45\x11\x09\xd6\xc6\x29\x89\x22\xbc\xab\x57\xe2\xb7\xcc\x68\x9d\x12\x7f\xf5\xc4\x3f\x96\xcb\xc5\x31\x2e\xbc\x8f\xf7\xb9\xd0\x3a\xe5\xfa\xc3\x73\x89\x87\xc5\x9c\x26\xc8\x98\x1e\xa1\x4c\x49\xe4\x39\x16\xdc\x58\x48\xd2\xfe\x82\x6e\xb5\x10\x52\x09\x5a\x6a\x0c\x14\xeb\xa3\x54\x69\x21\xc0\x3f\xd8\xad\x7f\x25\x51\x47\xa2\x28\x2c\xcf\xbc\xe1\x1e\x9e\x6f\xb5\x58\xd7\xae\x47\x24\xda\xb2\x47\x57\xea\xd6\xa5\x47\x90\xf3\x3e\xf3\x92\x7e\x3d\x65\xff\x4a\xb7\x49\x62\x67\xe3\xcc\x23\xbe\xc3\x9a\xb7\x95\x5b\xca\x1a\xac\xe3\x75\xf3\xcf\x72\xfe\xff\x59\x30\xf9\xc1\x1c\x32\xcd\xfd\x5a\x4a\xa2\x3d\x09\x2c\x28\x24\x89\x6b\x2b\x30\x4e\x1b\xa8\x2a\x8d\x21\x29\x61\x0d\x83\xdc\x03\x84\xd0\xba\x5c\xbd\x40\x1c\xa2\x74\xd9\x5a\xa9\xc0\xda\xc3\x30\xd9\x3e\xaf\x69\x48\x5d\x36\xe6\x39\x06\x6b\x30\xce\x46\xf3\x3d\x3c\x07\x44\x82\xea\xf2\x1c\x2f\x67\x24\xa9\xc2\x45\x4c\x53\x6c\x03\x06\x50\x83\xf7\xe1\x2a\x94\xdd\xab\x0f\x5d\x67\xb8\x12\x40\x3f\x4b\x7a\x3e\xa3\xc3\xf1\xec\x0e\xdc\x46\x97\x76\xbf\xef\xbd\xec\xba\xa5\xbe\xd5\xcf\x60\xe8\x67\xc9\xae\xc1\xdd\xf3\x1a\xf6\xfb\x91\x6d\xa8\x66\x36\xac\xf4\xee\x7f\xb0\x6b\x46\xed\xb6\x60\x77\xfc\x09\xba\xee\x18\x20\x09\xb2\x82\xd0\x8b\xb2\x1c\x0f\xa2\xce\xf0\x42\x2a\x91\x51\xa9\xac\x33\x6d\x0d\xca\x71\x27\xb5\xf2\xd2\x87\x30\x0c\xd2\xa3\xae\x03\x55\xa2\x96\x61\xbf\x45\xb1\x78\xfa\x70\x96\xed\x3e\x0a\x05\xb6\x04\xaf\xe9\x98\xab\xe7\x58\x5e\xa7\xe5\x66\x13\x37\xc2\x6d\xdc\x41\xb1\xe1\x4a\x16\xbc\x7a\xbd\x0f\x30\xa6\xc0\xe3\x6b\xfe\x04\x09\x9a\x29\x18\xa3\x31\x0d\x0b\xb7\x43\x43\x68\xc0\xec\x92\x17\x4f\xc2\xe8\x56\x95\x43\x19\xde\x28\x07\xc6\xb4\x8d\x1b\xb3\x85\x44\x42\x53\xec\x60\x7d\xf3\x8a\xde\x30\x63\xb9\xf9\x11\x90\xd1\xdf\x30\xc8\xfd\x3c\x60\xf7\xda\xc9\xf5\x4b\x52\x64\x34\x8c\x05\xf6\x78\x73\x7d\x73\xbf\x3c\xf8\x5e\x5e\x3d\xdc\xe1\x1e\xef\xef\xb7\x33\xba\xae\x1d\xbb\x42\x4f\xd7\x49\xfc\x0b\xd6\xe4\xb7\xb3\x02\x6b\x67\x70\xae\xef\x7d\x7d\x43\x39\xe2\x59\x28\xd3\xf3\x8f\xaa\xdd\x70\x65\xb1\x49\x63\x7d\xf9\x2e\xeb\xab\x2b\xaa\x71\xa7\xef\x8d\xa1\x40\xe0\xae\xdd\xf9\x0a\xa9\xd9\x0f\x1f\x8c\x24\xce\x3d\xbe\x1f\x83\x79\x9c\xf5\xf0\xde\x68\xfe\x42\x4f\xbc\x85\xdd\xa8\x12\x76\xe9\x89\xad\x45\x5d\x56\x52\xc1\xfb\x0c\xf3\x1e\x70\x8a\x03\x7f\x64\x75\x82\x63\xd1\x03\x4e\x71\xd8\x97\x7a\xa5\xab\xf7\x29\x1e\xbd\xfd\x14\x03\x16\xd1\x09\x1f\x96\x68\x4e\x7d\x7c\xa7\xdd\x2d\x4c\x8c\x5f\xc7\x11\x38\x4d\x03\x4f\x75\xeb\x6f\xf9\x42\x95\xfe\x26\x92\x57\x64\x46\xeb\x69\x4e\xf8\xb1\x35\x5e\xe9\x4f\xc9\x09\xa4\xec\xc7\xe8\x50\xe1\xd8\x5f\x70\x35\xe8\x4b\x0a\xb7\xcb\xc6\x3e\x62\xb3\xd0\xb8\xd3\x77\x44\x0e\xd3\xf8\x43\x8d\x03\x30\xa3\x9b\xa9\x44\x3f\x4d\x7f\xae\x44\xa4\xec\xb3\xbe\x52\x19\x76\x07\xdc\xae\xc0\x05\x97\x92\xd8\x15\x0d\xba\x3e\x0c\x7f\x74\x5d\xae\x3d\xf0\xd3\x8c\x2a\x59\xf9\x93\x47\x35\x60\x0c\x7e\x1a\x70\xad\x51\x24\xf2\xbd\x29\xb2\x66\x3b\x8d\xdf\xf5\xc3\x62\xee\x75\xbe\x0d\x9f\xef\x1a\x88\xf4\x7f\x4b\x0c\xb5\x67\x7c\xe5\x35\x2b\xf6\x00\x02\x7d\x32\x5d\x37\x76\xd3\xb1\x2f\x06\xa4\xcd\xa8\x35\xdb\x77\x93\x6c\x2a\x62\xf0\xd8\xb2\x3e\xe6\x95\x9a\x46\xfa\xa1\x55\x9f\x0e\x07\x35\xec\xa4\xf3\x8d\x08\x37\xa6\x64\x4f\xfe\x0b\x00\x00\xff\xff\x27\x08\x21\xb1\x46\x0b\x00\x00")

func nameServiceNameServerServer_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameServerServer_mainGotemplate,
		"NAME-service/NAME-server/server_main.gotemplate",
	)
}

func nameServiceNameServerServer_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameServerServer_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-server/server_main.gotemplate", size: 2886, mode: os.FileMode(436), modTime: time.Unix(1477333032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x55\xdf\x6f\xdb\x36\x10\x7e\x16\xff\x8a\x9b\x10\x0c\x52\xa0\x50\xef\x1d\xfc\x52\x37\x0d\x3a\x2c\x99\x97\x06\xdb\x43\x51\x0c\x34\x75\x92\x09\xcb\xa4\x46\xd2\x8e\x0d\x41\xff\xfb\x70\x94\x64\x4b\x46\xd2\x3e\x14\xb5\xee\x3e\x7e\xf7\xf3\xbb\xe4\x39\xac\x84\xdc\x8a\x0a\xa1\xb2\x8d\x84\xc6\x9a\x83\x2a\xd0\x81\x80\xea\x79\xb5\x04\x59\x2b\xd4\x1e\x4a\x63\xc1\x6f\x10\xda\x96\x7f\x45\x7b\x50\x12\xf9\x03\xfa\x27\xb1\xc3\xae\x03\x37\x58\x58\x33\x61\x62\x4c\xed\x1a\x63\x3d\x24\x2c\x8a\x2b\x53\x0b\x5d\x71\x63\xab\xfc\x98\x6b\xf4\xb9\x34\xda\xe3\xd1\xc7\xc1\x67\xaa\x1a\xf9\x04\x42\xcf\xdf\xf7\xe4\x3b\xf4\xa2\x10\x5e\x04\x88\xf2\x9b\xfd\x9a\x4b\xb3\xcb\x9b\x6d\x95\xa3\xb5\xc6\xba\x98\xcd\x3d\x95\xb9\xdb\x2a\x9f\xd3\x3f\xd4\x45\x63\x94\xa6\xc0\xc4\xe5\xad\xd0\x2e\x64\xf9\x0e\xfe\x0c\x18\x92\x62\x51\x9e\xc3\xcb\x46\x39\x18\xda\xc0\xa2\x8d\xd0\x45\x8d\x16\xe2\xb6\xe5\x5f\x42\xc9\x2b\xe1\x37\x70\xd7\x75\x90\x0f\x3e\x97\x53\x8b\xd0\xc6\x2c\x72\x07\xf9\x26\xb2\x42\x8d\x56\x78\x2c\x62\x16\x35\xeb\x00\x59\x7d\x9c\x83\x62\x96\x32\x96\xe7\xf0\x84\xaf\x60\xd1\xef\xad\x76\x20\xf4\xd8\x7d\x58\x0b\xb9\xc5\x02\xd6\xa7\xab\xd1\x49\xa3\x35\x4a\xaf\x8c\xe6\xf0\xc5\x83\x72\x34\x48\xe2\xb1\xe8\x1a\xa3\x9d\x5a\xab\x5a\xf9\x13\x98\x32\x4c\x58\x8a\x9a\xaa\xf1\x06\x0a\x25\xea\x0c\x84\x2e\xa0\x16\x1e\x2d\xc8\xda\x38\xcc\x7a\xd0\x84\x13\x58\xb9\xd7\x92\xb2\x4a\xc8\x0c\xb7\xd4\x29\xbe\x0c\xc1\x97\x46\xeb\x0c\x4c\x43\x48\x07\x9c\x0f\xe6\x3f\x83\x21\x85\x64\xe8\xcf\xb8\x53\x19\x84\x01\xa6\xd0\xb2\xe8\x20\x2c\x48\x39\x14\xb1\x34\xba\x54\x15\x63\x11\xed\xe1\xbf\x19\x94\xf0\x61\x01\x56\xe8\x0a\xcf\xe4\x2d\x8b\x22\xb4\x96\x1c\x65\xf2\xab\x94\x29\x8b\x22\x55\x12\x21\xfc\xb2\x00\xad\xea\x80\x88\xfa\xc6\xd1\xf7\x10\xcc\xf1\x7f\xac\x68\x12\xb4\x36\x83\x58\x0a\xad\x8d\x07\xd1\x34\xf5\x69\x60\x8e\x89\xa8\x63\x51\xc7\x58\x24\x27\xd9\x3b\x8a\xf4\xed\xfb\x6c\x8b\x66\xe5\x51\xb8\xb7\xbc\x1f\xb1\x34\x16\x13\x4a\x66\x50\xc1\xdf\xa2\xde\xa3\x7b\x31\x0f\xcf\xab\xe5\xe3\xb0\xdc\x89\x94\x7c\x83\xa2\x40\xeb\xd2\x34\xeb\xc3\xb7\xed\x1d\xbc\x2a\xbf\x81\x1b\x7f\x4f\xd1\x79\xd7\xb1\x28\x58\xfb\x56\xdc\x28\xb2\xde\xf8\xfb\xb3\x46\x1f\xd1\x6f\x4c\xe1\x02\x2e\x74\xb4\x6d\x5f\xcc\x1f\xe6\x15\x2d\xdc\xa8\x8b\x82\xef\x07\x55\xc0\x28\x0f\x3e\x5a\xe8\x5d\xe8\x5b\xf4\x93\x97\x0b\x98\xd7\xfa\x84\xaf\x7d\xb9\xa1\xd0\x50\xaa\xce\xfa\x9f\x71\xdb\xbe\x58\xb5\x5b\x59\x2c\xd5\x71\x96\xee\xe7\x7d\x5d\x9f\xfe\xda\x8b\x5a\x95\x0a\x0b\x8a\x00\x31\x8f\xbb\x2e\xbe\xbc\x9c\x06\x1f\xcd\xee\x20\xf9\xbd\x96\xa6\x40\xea\xe0\x1c\xf3\x8c\xff\xed\xd1\xf9\x09\xf2\x13\xbe\x87\x0c\x72\xc0\x01\xda\xac\x79\xdb\x3e\x98\x90\xc4\x8d\xe2\xa3\xf7\xe5\xd4\x4c\x4e\x5f\xdb\x0d\xe8\xd9\x66\x70\xce\x7b\x73\x7a\xee\x63\x42\x5b\x14\xf5\xe3\x42\x5d\xd0\x40\xc6\x1f\x6c\xdc\xc9\xbe\x8c\x1e\xef\x5a\x02\x4c\xc7\x7a\x3d\x53\xba\x08\x81\xee\xad\x71\x7c\x00\x80\x9f\xcc\x3a\xbb\x64\x10\x75\x19\x09\x82\x75\x8c\xf9\x53\x83\x33\xcd\x81\xf3\x76\x2f\x3d\x89\x67\x58\x47\xf8\xf6\xdd\x79\xab\x74\x45\xf8\x3c\x87\xe9\xce\xd3\x75\x11\x40\xf7\x20\x7c\xf9\x8d\xf0\xb0\x33\x05\x8d\xd3\xf5\x87\xe3\x7c\x93\x48\xcf\x21\xda\xec\x3d\x3d\x4d\x6e\xa7\x09\xa4\xbd\x4c\x59\x7f\x65\x96\xfe\x38\xaa\xe5\x2b\xea\x22\xd9\xe2\x29\xdc\x95\x3e\xa3\x74\x4e\xd6\x9e\x5b\x1b\x68\x0d\xbc\x45\x1c\xce\x82\x19\xb5\x06\x0b\x20\x4a\x36\x3d\x14\x24\xbe\x6e\x88\xff\x23\xc5\x86\x5c\xc6\xe6\xa4\x57\x7a\x18\xf6\xf0\x33\x91\x5c\xe5\x25\xfd\x71\xe4\xe5\xcb\xfe\xff\x0c\x76\x05\xdc\x8e\x7f\xe8\xf8\xe3\xa7\xf4\x1a\x11\xd2\x26\x45\x37\x42\x4d\x67\x12\x8d\x27\x72\x7b\x39\x91\x21\xb1\xa0\x62\x55\xc2\x21\x03\x13\x7c\xd2\x1f\x79\xa8\x23\xd9\xa6\x3c\x19\xb2\xfe\x8d\x9c\xbd\xe0\x7b\xe2\x05\x1d\x43\xea\x74\xf8\xcc\x60\x9b\xc1\xe1\xbc\xcb\xb4\xbc\xc4\xd9\x43\xa7\x67\xf6\x76\x57\xc0\x02\xce\x05\xfc\x6e\x94\x4e\x6e\x77\x45\x76\x31\xad\xe8\x4d\xcf\xca\x39\x4f\xd3\x91\x6e\xe8\x8c\xf4\xc7\xbe\xef\xff\x07\x00\x00\xff\xff\x98\xe6\x41\x14\xa1\x08\x00\x00")

func nameServiceGeneratedClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientGrpcClientGotemplate,
		"NAME-service/generated/client/grpc/client.gotemplate",
	)
}

func nameServiceGeneratedClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/grpc/client.gotemplate", size: 2209, mode: os.FileMode(436), modTime: time.Unix(1477698951, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func nameServiceGeneratedClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientHttpClientGotemplate,
		"NAME-service/generated/client/http/client.gotemplate",
	)
}

func nameServiceGeneratedClientHttpClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/http/client.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477696627, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x4d\x8f\xdc\x36\x0c\x3d\x5b\xbf\x82\x5d\x04\xc8\x4c\xe1\x95\xef\x05\x72\x69\xd0\xa6\x7b\x48\x10\xb4\xf9\x03\x1a\x99\x33\x26\x56\x96\x14\x89\x9e\xdd\xad\xe1\xff\x5e\x50\xb6\xe7\x03\x33\xfd\x3a\x2c\xbc\x43\x53\x8f\x4f\xef\x91\x74\x34\xf6\xd9\x1c\x10\xf2\xd1\x2a\xd5\x34\xf0\xad\xa3\x0c\x7b\x72\x08\x36\x78\x36\xe4\x33\xf4\xc8\x5d\x68\x33\x70\x80\xde\x3c\x23\x90\x6f\xe9\x48\xed\x60\x1c\xa0\x6f\x63\x20\xcf\x19\xf6\x29\xf4\x90\x31\x1d\xc9\x62\xae\x05\x29\xe1\xf7\x01\x33\x83\xf1\x2d\x24\xcc\x31\xf8\x8c\xc0\x6f\x11\x0b\x92\xa4\x22\x70\x17\x32\x9e\x51\x6a\x30\x19\x5e\xd0\x39\x79\xa2\xb7\xa1\xc5\x94\x05\x40\xf0\x5a\x5c\x7e\xef\x43\x5a\x0e\x16\xb4\xba\x04\x8c\x73\x10\xf6\x10\x86\x04\x79\x88\x31\x24\xc6\x16\x38\x19\x9f\xe5\x7f\x29\x47\xc6\xd1\x9f\x86\x29\x78\x41\xdb\x87\xd4\x1b\xce\x1a\x9e\x18\x8c\xcb\x01\xc8\x5b\x37\xb4\x98\x4f\x6c\xa0\xa7\xb6\x75\xf8\x62\x12\x66\xad\x14\xf5\x05\x68\xa3\xaa\x87\x43\x70\xc6\x1f\x74\x48\x87\xe6\xb5\xf1\xc8\x8d\x48\x85\xaf\xfc\xa0\xe4\x25\x71\x37\xec\xb4\x0d\x7d\x73\x08\x8f\xcf\xc4\x8d\xfc\xad\xa0\x92\xd2\x19\xdf\x3a\x4c\xf0\x30\x8e\xfa\xa9\xa0\x7e\x35\xdc\xc1\xe3\x34\x41\xb3\xbc\xcb\x4d\xd1\x27\x3d\xa8\x2a\xee\x4a\xe2\xd7\x9f\xaf\x53\x1f\xd4\xb6\xf8\xf5\xcb\xc9\x01\x1b\x9c\x43\xcb\x79\x95\x82\xbb\x0b\x65\x81\x3b\xc3\x60\x43\x1f\x45\x37\xe3\xc1\xb4\xed\x6a\x97\x68\xf0\x3e\x0b\x58\x8f\xc6\xb3\xb8\xb3\x43\x18\x32\xb6\x62\x83\x81\x0e\x5d\xc4\x04\x99\xd3\x60\xb9\x96\xd7\x4b\xa9\xfb\x95\xc8\x73\x00\x23\x70\x99\xfc\xc1\x21\x44\x93\x4c\x8f\x8c\x49\xab\xa6\x91\xf8\x93\x07\x33\x37\x40\xaa\x81\xf8\x7d\x96\x62\xfb\xc1\x15\x23\xf7\x83\xb7\x62\xd2\x42\xd9\xa3\xf8\x18\x20\x44\x4c\x86\x11\x82\x9c\x8d\x98\x1e\xd7\x82\x02\xb8\x33\x99\xb2\x86\x5f\x43\x02\x7c\x35\x7d\x74\x58\xc3\x5b\x18\xa0\xa7\x43\xc7\x10\x4d\x96\x26\xba\x90\x4a\x08\x9e\x0a\xcd\x75\x62\x0a\xed\x60\xb1\xc8\x60\x3c\x74\xcc\x51\xff\x36\x9b\x51\xc3\x0b\x71\x07\x68\x6c\xb7\xcc\x02\x6c\xd6\xea\x5b\x78\xa1\x84\x2d\x0c\x71\x06\xcd\x11\x2d\xed\xc9\x42\x34\xdc\x69\xd8\x3c\x15\x7e\x94\x05\x7f\x67\x76\xee\x0d\x0c\xf4\x94\x79\x9e\x23\x68\x31\xd3\xc1\xcb\x51\xf2\xc7\xf0\x8c\x45\xca\x3f\x66\x5b\x4e\x73\x57\x28\xe2\xb5\xd9\xb3\x19\x02\xb1\x2a\xa9\xb7\x97\xea\x5a\x47\xe8\xf9\x5a\xdd\x0b\xe3\xce\x23\xec\xde\x64\xd0\x67\x38\x6c\xff\xc9\x46\x19\xb6\x59\x2b\x12\x85\x7b\x9c\xdb\xea\xcc\x97\x3c\x63\xda\x1b\x69\xa8\xfb\x4e\x08\xd8\xa9\xd8\xfd\x35\x32\x48\xb1\xf3\xdc\x36\xc5\x87\x2f\xf8\xf2\x71\xb9\x8f\x0d\xfd\x8e\x7c\xd1\xa9\x2f\xca\x16\x96\x17\xde\xd6\xcb\xbe\xe1\x21\x79\xa0\xd2\xcc\xc2\xd1\x1a\x27\x23\x57\xfa\x79\xe1\xab\x55\xb9\xd1\x8d\xa6\xa3\x1a\xc7\x64\xfc\x01\xe1\x1d\xc1\x4f\x1f\x40\xaf\xf9\x9f\x67\x3f\xa6\x49\x55\xe3\xf8\x8e\xf4\x27\xe4\x2f\xa6\xc7\x69\x5a\x21\x00\xe0\x74\x15\xbd\x06\xd5\x38\x3e\x4a\x74\x9a\xd4\x74\x3d\xb1\xff\x5e\x47\x5a\x14\x36\x17\x1c\xb7\x70\x5d\x79\x63\xf9\x15\x96\xed\xa3\x3f\xce\xcf\x5a\xba\xe2\xc7\xb8\xd3\xe3\xf8\x29\x48\x1a\xbc\x23\xfd\xfb\xbc\x8c\xbf\xbd\x45\x3c\x9f\xde\xc2\xe6\x36\x6f\x5e\xd4\xd7\x89\x35\x60\x4a\x21\x6d\x61\x54\xd5\xba\xca\x4b\x4c\x78\xa3\xbe\xaf\x86\x70\x13\x2e\x5b\x55\xd1\xbe\x24\xff\xf0\x01\x3c\x39\x01\xa9\x16\x83\x3c\xb9\x82\xa3\xaa\x49\xad\xb1\xb5\x80\xfe\x8f\xe4\xb6\xb5\xc0\xa8\x49\x8d\xe3\x2c\xb3\x88\xfc\x59\x06\xec\xff\x2a\x2d\x87\xfe\xe6\x2e\x19\x96\xcd\xbc\x9e\xdd\xde\x3a\x3d\xab\x53\xee\x20\x70\xf7\xbd\x59\xbf\x8a\xa7\x61\x19\xc5\x86\xd3\xf7\xf1\x22\x3c\x0b\x7c\x16\xbe\x4a\xf8\x5d\xd8\x2f\x08\xf7\xe4\xb9\xe7\xb1\xaa\xaa\xe3\xc9\xab\xac\x6f\xfb\xa7\x70\x92\xb4\x5b\x97\x6e\x6d\x12\x9f\xd6\xe8\x71\x16\xbe\x9a\x2e\xb4\xff\x2b\x00\x00\xff\xff\xb3\x34\xc1\x62\x4f\x08\x00\x00")

func nameServiceGeneratedEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedEndpointsGotemplate,
		"NAME-service/generated/endpoints.gotemplate",
	)
}

func nameServiceGeneratedEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/endpoints.gotemplate", size: 2127, mode: os.FileMode(436), modTime: time.Unix(1477333032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\xdf\x6f\xdb\x36\x10\x7e\x16\xff\x8a\x9b\x51\x0c\x76\xe0\x48\x7b\x0e\x90\x97\xa6\x5d\x52\x6c\xe9\x82\x2c\xd8\x1e\x8a\xa2\xa0\xa5\xb3\x44\x98\x22\x15\x92\x76\xe2\x09\xfa\xdf\x87\x23\x25\x5b\x4e\x94\xc8\x29\xf2\x50\xb8\x91\xee\xc7\x77\xdf\x77\x77\xa4\x2a\x9e\xae\x78\x8e\x60\x37\x29\x63\x49\x02\x77\x85\xb0\xb0\x14\x12\xa1\x32\x7a\x23\x32\xb4\x60\xd1\x6c\xd0\x9c\x5a\x91\x21\x2c\x84\xca\x84\xca\x2d\x2c\xb5\x01\x57\x20\xe4\xb7\x37\x17\xe0\x0c\x57\xb6\xd2\xc6\xc5\x14\xe2\x8b\x83\xb5\x13\x52\xfc\x87\xd6\x9b\xec\xde\x26\xb9\xa9\xd2\xf8\x6f\x1f\x2e\x66\x4c\x94\xf4\x10\xa6\x2c\x9a\x28\x74\x49\xe1\x5c\x35\x61\x2c\x9a\xe4\x5a\x72\x95\xc7\xda\xe4\xc9\x63\x42\x6f\x52\xad\x1c\x3e\xba\x89\x7f\xa7\x73\x89\x71\xcf\x84\x62\x26\x25\x3a\x9e\x71\xc7\xc9\x9f\x1e\xec\x52\xc2\x24\x17\xae\x58\x2f\xe2\x54\x97\x49\xae\x4f\x57\xc2\x25\xf4\xef\x10\x13\xb9\x75\xb5\x13\x3c\x91\x22\x8b\xaa\x05\x4c\xea\x3a\xbe\xf9\xf8\xc5\xe3\xbc\xe1\xae\x80\xd3\xa6\x99\xb0\x19\xf3\x4c\x5d\xf3\x15\x5e\xde\xde\x5c\x84\x7a\xa0\xe4\x2b\xb4\xc0\xc1\xa2\x03\xbd\x04\x54\x59\xa5\x85\x72\x16\xf8\x86\x0b\xc9\x17\x12\x81\xd3\x7b\x4f\x58\x5d\x5f\xea\xaf\xbc\x44\x88\xdb\x74\xf1\x25\x3a\x7a\xd0\x34\x1d\x3d\xcb\xb5\x4a\x9f\xe4\x98\xa6\xee\x11\x5a\x32\xe2\x8b\xf0\x3b\xef\x65\xfa\xdc\xfd\x6f\x06\xd5\x22\x1e\xcd\x01\x35\x8b\x82\xb6\x7f\x55\x4e\x68\x65\xe1\xec\x1c\xbe\x7d\x3f\xe0\xaf\x55\x2b\x18\xd4\x2c\x8a\x60\xe8\xf5\x47\x5c\x6a\x83\xd3\x4e\x85\x3b\xdd\x82\x9b\xcd\x59\xd4\xb0\xc8\xa0\x5b\x1b\x05\xbf\x92\x6b\x70\xa8\x3d\xdf\x75\x0d\x77\xfa\x4f\xfd\x80\xe6\x19\x46\x68\x1a\x16\xd5\xb5\xe1\x2a\x47\xf8\x20\x08\xd9\xce\xe4\x1a\x5d\xa1\x33\x4b\x16\x51\x5d\x77\x11\x3e\x88\x7d\x7d\x67\x4f\x50\x7e\xc5\x87\x96\x41\x16\x45\x51\xea\x1e\xe7\xf4\xbb\x23\x2e\xae\xeb\xbe\x77\x47\xa3\x37\xfa\x84\xa9\xce\xbc\x06\x87\x46\xb7\x78\xbf\x46\x1b\x6c\x3e\xab\x97\x6c\x6c\xa5\x95\x45\x6f\x74\xc0\x74\x1c\xc7\xf4\x90\xf8\xa9\xeb\x53\x92\x90\xaa\x69\x58\xe3\x3b\x6b\xcf\x13\x88\xb2\x92\x58\x22\xa9\x4b\xa3\x34\xae\xa9\x50\x0e\xcd\x92\xa7\xc8\xdc\xb6\xc2\x7e\x28\xeb\xcc\x3a\x75\x50\xb3\x71\x5a\x87\x59\x05\x78\x42\xeb\x15\x57\x99\x44\xc3\xf6\x25\x04\xfc\x6d\x24\xbf\x23\x7a\x00\x9c\xde\x97\xf3\xa6\x4a\x46\x01\xfb\x59\x99\x5a\x38\xd9\x67\x9b\xed\x33\xf4\x6b\x18\x1e\x21\x83\xf7\x70\xd2\x1f\x99\x0f\x22\x6e\x05\xbe\xdb\x56\x3d\x68\x33\x98\x3e\xb7\x0b\x22\x1f\x1a\xce\x01\x8d\xd1\x84\x82\x45\x3f\x28\x41\xe5\x9f\x10\x7e\x6a\xb7\x21\x7a\xc3\x2c\x51\x17\x11\x48\x0f\x6a\xc6\x22\xb1\xf4\x7e\xbf\x9c\x83\x12\x92\xa2\x75\xd3\xa4\x84\xf4\x21\xfb\x13\x66\xb0\x8a\x8f\x04\x38\x9b\x53\x04\xd6\xb0\xba\x0e\xd2\x91\x70\x2d\xf3\xa1\xe7\xc7\x69\x4f\x12\x18\x19\x0f\x10\xb4\xf2\x9e\x1c\x00\xc1\xa7\xb5\xf8\x9d\xa4\x73\x05\x77\xa4\xca\x06\x0d\x2d\x4c\x3f\x03\x61\x4d\x0e\xf6\xa1\x69\x83\x3b\x0d\x1c\xd6\x16\xcd\x69\xa6\x4b\x2e\xd4\x88\x7d\x0c\x37\x46\x94\xdc\x08\xb9\x25\xaf\xe5\x5a\x82\x50\x7e\x63\xf7\x36\xee\x48\x41\xd3\x1f\xcf\xbb\x87\x8a\xba\xc5\xfb\x7d\xc3\xd6\xd4\x27\xbd\xbf\xfa\xcd\x40\xad\x76\x76\xde\xf9\x0c\xa9\x35\xd4\x76\x3d\x85\xef\x9f\x09\x47\x74\x5d\x48\x41\x53\xf5\x2e\xca\x85\x76\x79\x55\xba\x60\xf2\x73\xda\x55\x72\xfb\x06\xe5\x42\xa6\x97\xa4\x4b\x7d\xd9\xa3\xd2\x85\x20\x2f\x6b\x47\x90\x8e\x54\x8f\x4c\x77\xfa\x55\x72\x7b\xf4\xbc\xf5\x87\x54\x6e\x5f\x99\xbe\x70\x9a\x1c\xa5\xe1\xd8\xc1\x33\xa8\x61\x70\x1a\xd3\xf0\x0d\xe2\x04\x35\x47\x45\x3f\x6a\xfc\xc6\x2a\x1a\xd2\x70\x87\xe3\x48\x09\x6d\x45\x8c\xee\x5a\xeb\x27\x04\xb4\xd5\x6b\x43\xf8\x2e\x02\xbe\xbc\x3e\x3b\xfd\x5e\x5d\x9f\xc7\x6f\xc5\x63\xd4\x7b\x75\x7d\x1e\xcc\xe0\x48\x41\xc3\xf2\xb5\xb5\xbe\x61\x7d\x76\x90\xde\x63\x7d\x26\x09\x5c\xa1\xac\xd0\x58\x16\x6a\x78\x76\x8d\x1d\xbe\x34\x94\x19\x9c\x74\xa6\xf1\xf5\xa7\xd9\x53\x0b\x82\x4b\x37\xa0\xd5\x1c\x36\x1e\xb3\xef\x86\x93\x32\xf3\xa7\xb8\x58\xc2\xa6\x7f\xaa\x87\xef\x0f\x84\x15\x6e\xbd\xea\x59\x86\x19\x2c\xb4\x2b\x88\xe4\x2e\x0d\xdd\xa8\x4a\xee\x60\xba\x9a\xc1\x43\x21\xd2\xc2\x9b\x4a\x09\x92\x54\x6b\xa3\x70\x95\xf9\xbb\x22\x7d\x4f\xc5\x17\x5c\x69\x25\x52\x2e\xaf\x90\x67\x68\xfe\xc0\x2d\x7d\x9c\xb8\x36\x91\xd5\xa1\x77\x84\x83\x94\x2b\x58\x60\x17\x22\x4d\xd1\x5a\xcc\x28\x37\x0a\x57\xa0\x69\x33\xb7\xd7\x67\x38\xdf\x15\xfb\xaf\x70\xc5\x3f\x5c\xae\x31\x5c\x5a\xa8\xd8\x6f\xbf\x7d\x9f\x8d\x1a\xbe\x80\x6e\xba\x9a\xed\x23\xf8\x2b\xf1\x4e\xbb\xd4\x3d\xb2\x86\xfd\x1f\x00\x00\xff\xff\xba\xba\x12\xdf\xb0\x0e\x00\x00")

func nameServiceGeneratedTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_grpcGotemplate,
		"NAME-service/generated/transport_grpc.gotemplate",
	)
}

func nameServiceGeneratedTransport_grpcGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_grpc.gotemplate", size: 3760, mode: os.FileMode(436), modTime: time.Unix(1477708246, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x48\xd5\xe4\x6e\x2e\x87\xdd\x20\xab\x46\x2c\x73\x1e\xa5\x35\x49\x5b\xce\xd7\x0d\xad\xc3\xd3\x0e\xff\xc2\xf3\x9f\x48\x8a\x58\x7e\x01\x00\x00\xff\xff\xaf\xf5\x0f\x3e\x69\x00\x00\x00")

func nameServiceGeneratedTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_httpGotemplate,
		"NAME-service/generated/transport_http.gotemplate",
	)
}

func nameServiceGeneratedTransport_httpGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_http.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477696627, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersClientClient_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xc1\x6e\xdb\x30\x0c\x86\xcf\xd1\x53\x10\x45\x50\xc4\x41\x6a\xdf\x0b\xec\x90\x0e\x6d\xd0\xc3\x86\xa2\xdb\x0b\x28\x36\x63\x0b\xb3\x29\x4d\xa2\xb7\x0e\x84\xde\x7d\x90\xe2\x34\x4b\x53\x6c\xc5\xd0\x4b\xc0\x88\x3f\x7f\x92\x1f\x2d\x02\x3f\x0d\x77\x30\x67\x1c\x5c\xaf\x19\x6f\x9f\xb0\x1e\xd9\x7a\xb8\xfe\x00\x65\x8c\xca\xe9\xfa\x9b\x6e\x11\xea\xde\x20\x71\xa7\xa9\xe9\xd1\x2b\x65\x06\x67\x3d\xc3\x42\xcd\xdc\x16\x2e\x44\xce\xea\xcb\x87\x9b\xfb\xac\x79\xd0\xdc\xc1\x55\x8c\x17\xaa\x50\x4a\x89\x78\x4d\x2d\xc2\xdc\xa4\x06\xe7\x55\x5f\xd0\xff\x30\x35\x96\x9f\x90\x3b\xdb\x84\x18\x55\x55\x81\xc8\xdc\x94\x1b\xe4\xcf\x7a\xc0\x18\xc1\x0c\xae\xc7\x01\x89\x03\x1c\xe4\x6a\x37\x52\xfd\x42\xb7\x10\xc9\xab\x19\x6a\xf0\xe9\x95\x56\x1f\xf3\x46\x6b\xdf\x86\xdc\x2d\x05\xf0\x67\xbd\xc8\xc6\xa6\x08\xca\xbb\x91\x6a\x36\x96\x92\x24\xbd\x23\x35\x31\x16\xb0\x58\xba\x6d\xf9\xac\x9a\x9b\xf2\x11\xbf\x8f\x18\xf8\xeb\x2f\x87\x47\x9b\x15\xa0\xf7\xd6\x17\xa2\x44\xaa\xa5\x12\xb9\x9a\x88\x0f\xc8\x5d\x82\xf0\x7f\xf3\x25\xa4\x6a\x96\xdc\x26\xa0\x4e\x7b\x3d\x64\xa8\xc9\xb8\xcc\xf2\xac\xc9\x22\xb3\x03\xb2\x3c\xa9\xca\xfb\x70\xa3\x03\xa6\x39\x27\x49\x55\xc1\xba\x69\xa0\x1e\x03\xdb\x01\xb6\x63\x30\x84\x21\x40\x6f\x5b\x53\xc3\xce\x7a\x30\xc4\xe8\x9d\x47\x36\xd4\x26\xce\x7b\x9f\xbb\x5e\xb7\x6b\xdf\xc6\xb8\x9a\xda\x20\x35\xc7\xc1\x0e\x7f\xa6\x38\x46\xb5\xac\x52\xce\xef\x31\xa5\x59\xdf\x02\x50\xde\x9d\xd9\x5b\x89\x69\x6a\x60\x91\x7f\x5e\x65\x57\x9c\xbc\x3f\xa2\x43\xcd\xd8\x14\xa7\xcf\xb7\x34\x0e\xc5\x64\x7a\x58\x74\x9f\x99\xbe\xe6\x6b\xb8\x7c\x99\xd9\xd8\x53\xa8\x7d\x40\xf8\xbb\xc5\xbf\x1c\x8e\x67\x39\x3f\xca\x2c\x9f\x84\x47\x4f\x70\x39\x9d\x66\x05\x64\x7a\x95\x44\x7b\xc9\x73\xf0\x3b\x00\x00\xff\xff\xec\x76\x11\x73\x2f\x04\x00\x00")

func nameServiceHandlersClientClient_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersClientClient_handlerGotemplate,
		"NAME-service/handlers/client/client_handler.gotemplate",
	)
}

func nameServiceHandlersClientClient_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersClientClient_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/client/client_handler.gotemplate", size: 1071, mode: os.FileMode(436), modTime: time.Unix(1476751391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerServer_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x52\x4b\x6e\xdb\x30\x10\x5d\x8b\xa7\x18\x08\x46\x61\x17\x0e\xb5\x0f\x90\x4d\x8b\x36\xc8\xa2\x41\xd0\x66\x1f\xd0\xd4\x58\x9a\x84\x22\x55\x72\x94\x38\x20\x78\xa6\x1e\xa2\x17\x2b\x28\x45\x8e\xed\xa6\x45\x77\x5d\x18\x26\x34\x6f\x1e\xe6\x7d\x7a\xa5\x1f\x54\x83\xd0\x2a\x5b\x1b\xf4\x42\x54\x15\xdc\xb6\x14\x60\x4b\x06\x41\x3b\xcb\x8a\x6c\x00\x6e\x11\xbe\xa1\x7f\x24\x8d\x50\xe3\x96\x2c\x31\x39\xbb\x06\x65\x6b\x50\xb0\x51\x81\x34\x84\x69\x9e\x19\xa8\xeb\x0d\x76\x68\x59\x65\x98\x84\x2b\x06\x65\x82\x03\xb2\xda\x0c\x35\x86\x19\x0b\x1d\xd5\xb5\xc1\x27\xe5\x31\x48\x21\xa8\xeb\x9d\x67\x58\x8a\xe2\x0e\x4a\xf4\xde\xf9\x50\x8e\x6f\xa6\x0e\x4b\x21\x8a\xb2\x71\x46\xd9\x46\x3a\xdf\x54\xbb\xca\x22\x57\xf9\x42\xdc\x71\x1e\xde\x41\xd9\x10\xb7\xc3\x46\x6a\xd7\x55\x8d\x3b\x7b\x20\xae\xf2\xcf\xb8\xa6\xfc\xcb\xb8\x43\xf6\xa4\x43\xa6\xe8\x37\x50\xc6\x28\x6f\x3e\x5c\x8d\x97\xdc\x28\x6e\xe1\x2c\xa5\x52\xac\x84\x18\xad\xb9\xc6\xa7\xd9\x06\x8f\x3c\x78\x1b\x40\x81\x55\x3f\x7f\x3c\xe2\x1a\x02\x2b\x46\x83\x21\x9c\xe8\x07\xb7\x9d\xcd\x93\x62\x3b\x58\x7d\x40\xb3\x5c\xed\x7d\x8d\xa2\x98\x38\x21\x9f\x30\xe5\x72\xad\x3a\x4c\xe9\x05\x11\x93\x48\x42\xf0\x73\x8f\x7f\x42\x40\x60\x3f\x68\x8e\x49\x88\x18\x9f\x88\x5b\x58\x7c\xda\xa1\x1e\xd8\x79\x38\xbf\x00\x99\xd2\xfe\xfb\xc1\x7a\x1e\xed\x71\xc7\xbc\x99\xc7\x2b\xdb\x20\x2c\xe8\x18\x36\x0b\xfa\x82\xdc\xba\x3a\xa4\x94\xed\x89\x71\x41\xf2\x12\x79\x5a\x7e\xb5\x21\x9c\xe8\x5f\x86\x0c\x7d\x4b\xc1\xea\x84\x63\xa9\x79\x07\x2f\x21\xcb\x8f\xd3\xff\x1a\xc8\xc2\xfb\x7e\x23\x63\xbc\x74\xa3\x80\x05\xc9\xaf\xf8\x7d\xc0\xc0\xb7\xcf\x3d\xbe\x6e\xaf\x60\xf9\x3b\x2e\xf4\xce\x06\x3c\x06\xae\x61\xac\xdb\x2a\xe6\x9e\x5c\x80\xe6\xdd\xf4\x20\x9b\x43\x99\x36\xb2\xfe\x7f\x22\x8b\xa2\x28\xf6\xb6\xdd\x8f\xb6\x9d\x40\x3f\x13\x9a\x3a\xe4\x6a\x89\xa2\x18\x7d\x9b\x39\xef\x67\x1a\x48\xe9\x1c\x46\x22\xb4\xf5\x84\x4c\xfb\x82\xbc\x9b\x6f\x5a\x83\x25\x23\x72\xaa\x68\xeb\x31\xdd\x33\x38\x7d\x4d\x8d\x99\x1b\x42\x96\xd1\x6f\xd5\xd8\xb7\xe3\x6c\xdf\x88\xb4\xf8\xaf\x61\x1c\x68\x48\xe2\x57\x00\x00\x00\xff\xff\xe2\x0f\x6e\x9b\xa9\x04\x00\x00")

func nameServiceHandlersServerServer_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerServer_handlerGotemplate,
		"NAME-service/handlers/server/server_handler.gotemplate",
	)
}

func nameServiceHandlersServerServer_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerServer_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/server_handler.gotemplate", size: 1193, mode: os.FileMode(436), modTime: time.Unix(1477016114, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateClient_handlerMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xc1\x4e\xc3\x30\x0c\x86\xcf\xe4\x29\x7c\xa8\xd0\x86\xb6\xf4\x3e\x89\xc3\x40\x6c\xe2\x00\x07\xe0\x05\xba\xd6\xeb\x22\xb5\x4e\x49\x5c\x18\x8a\xf2\xee\x28\x59\xca\x60\x9b\xd0\x84\xb8\xa5\xf1\x57\xfb\xcf\x27\x3b\x07\xef\x8a\x37\x90\x31\xb6\x5d\x53\x30\xde\x6d\xb1\xec\x59\x1b\x98\x5d\x83\xf4\x5e\x08\xe7\x4c\x41\x35\x42\xa6\xc2\xd5\x11\x27\x9f\xd1\xbc\xa9\x12\xe5\x03\xf2\x46\x57\xd6\x7b\x91\xe7\xe0\x5c\xa6\xe4\x12\xf9\xb1\x68\xd1\x7b\x50\x6d\xd7\x60\x8b\xc4\x16\x06\x5c\xac\x7b\x2a\x0f\xb8\x91\x73\x31\x8c\xa2\x0a\xb7\x27\x46\xdd\x36\x0a\x89\xe7\xa6\xb6\x71\x5a\x38\xc0\xf7\xff\x9d\x5b\xea\x70\x02\xb9\xe8\xa9\x64\xa5\x29\x20\xe1\x1e\xa9\xf2\x7e\x0c\xa3\xab\x6e\x25\xbf\xa8\x4c\xc9\x27\x7c\xed\xd1\xf2\xcb\x47\x87\xfb\x36\x13\x40\x63\xb4\x19\x3b\xe1\xdc\x34\xe9\x69\x91\x37\xe1\xfd\x7f\x8b\x06\x53\xef\xc5\x45\xe8\x96\x5c\x76\x85\x29\xda\xe8\x33\x34\x96\x11\x8f\x4c\x84\xd4\x1a\x48\x73\xa2\xe4\xbd\xbd\x29\x2c\x86\x88\x09\xc9\x73\x98\x57\x15\x94\xbd\x65\xdd\xc2\xaa\xb7\x8a\xd0\x5a\x68\x74\xad\x4a\x58\x6b\x03\x8a\x18\x4d\x67\x90\x15\xd5\x41\xf1\xae\xcf\xa2\x29\xea\xb9\xa9\xbd\x9f\xa4\x31\x48\xd5\x3e\xd8\xf0\xf1\xa3\x60\x76\x7a\x42\xd0\x73\xc4\xfd\xbf\xb0\x73\x75\x1d\xa9\x4a\xc5\x21\xf0\xae\x9c\xb6\x71\x06\x87\x85\xdf\xd4\x9c\x14\x13\xdd\x70\x6f\x08\x2e\x93\xa3\x09\x90\x6a\x44\xc0\xe2\xae\x0d\xb8\xf7\xe2\x33\x00\x00\xff\xff\xc8\xa7\x80\x44\x63\x03\x00\x00")

func nameServicePartial_templateClient_handlerMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateClient_handlerMethods,
		"NAME-service/partial_template/client_handler.methods",
	)
}

func nameServicePartial_templateClient_handlerMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateClient_handlerMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/client_handler.methods", size: 867, mode: os.FileMode(436), modTime: time.Unix(1476730517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceInterface = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\xcb\x31\x0a\xc2\x30\x14\x87\xf1\xd9\x9c\xe2\x0d\x1d\x5a\xa9\x39\x80\xe0\xe4\xd0\x49\x07\xf5\x02\x35\xfd\xab\x19\x4c\x62\xf2\x94\x96\xc7\xbb\xbb\x88\x82\x88\xd3\xb7\xfc\x3e\x9e\x12\x68\x8f\xfc\xf0\x0e\xe4\x03\x23\x9f\x7a\x07\x12\x23\x92\xfb\x70\x06\x55\x9e\x96\x2b\xb2\x1f\x62\x37\xe0\x4b\x1c\x8a\xaa\x99\x89\x54\xde\x76\xe0\x6d\x7f\x85\x6a\xed\x78\x24\x17\x03\x63\x64\xbb\x7e\xb7\x25\x1f\x68\x9e\x8e\x56\xa4\x8b\x2f\x46\x95\xb7\x3b\xdc\xee\x28\x7c\x98\x12\xbe\x77\x43\xf5\xbf\x2b\x29\x86\x82\x5f\xd8\x12\x72\x8e\xb9\x31\x22\x0b\x42\x18\x54\x8d\x9a\x67\x00\x00\x00\xff\xff\x49\xf1\x29\x36\xc5\x00\x00\x00")

func nameServicePartial_templateServiceInterfaceBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceInterface,
		"NAME-service/partial_template/service.interface",
	)
}

func nameServicePartial_templateServiceInterface() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceInterfaceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.interface", size: 197, mode: os.FileMode(436), modTime: time.Unix(1476730517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\x41\x4f\xf3\x30\x0c\x86\xcf\xc9\xaf\xf0\xa1\xfa\xb4\x7d\xea\xb2\xfb\xa4\x9d\x10\xec\x04\x42\xc0\x1d\x95\xd4\x6c\x19\x6d\x52\x12\x17\x8a\xac\xfc\x77\xd4\xa6\xdd\x28\x70\xe0\x54\x4b\x7d\xfc\xc4\x7e\xcd\x0c\xef\x86\x0e\x90\x11\xd6\x4d\x55\x10\x5e\x76\xa8\x5b\x72\x1e\x36\x5b\x50\x31\xca\x13\x70\x5b\xe8\x97\x62\x8f\x37\x45\x8d\xfd\xbf\x1f\x0d\xea\x0b\x10\xa3\x94\xcc\xbe\xb0\x7b\x84\xcc\xfc\x8e\xdf\xa3\x7f\x33\x1a\xd5\x35\xd2\xc1\x95\x21\x46\xb9\x5e\x03\xb3\xda\x21\x25\x05\x98\xba\xa9\xb0\x46\x4b\x01\x26\x58\x3e\xb7\x56\xc3\x22\x00\x73\x36\x7b\x6f\x04\x96\x33\xc3\x42\x53\x07\xda\x59\xc2\x8e\xd4\x45\xfa\xe6\x60\x2c\xfc\x6f\x9e\x14\xf3\xce\x0d\xcb\xa8\x3b\x7c\x6d\x31\xd0\xc3\x47\x83\xe7\xde\x25\x2c\xbe\x53\xa1\x71\x36\xe0\x1c\xcb\x01\xbd\x77\x7e\xc9\x52\x3c\xc2\x16\x34\x75\xa9\x30\x56\x0a\x3f\x76\xf4\xfb\xff\x41\xc5\x52\x88\x53\x68\xc7\x21\x34\x33\x47\xaf\x0c\x56\x65\x80\x55\x8c\x52\x88\x21\xad\xd1\x98\x1d\x27\x0d\xc4\xb8\x81\x41\x84\xb6\x4c\x64\xec\x27\xa1\xd6\x5b\xf8\x37\x4d\x94\x83\x35\x95\xec\x8f\x8b\xb6\x4c\xc7\x5a\x41\x2a\xcf\xd5\x67\x00\x00\x00\xff\xff\x01\x01\x6d\x90\x1b\x02\x00\x00")

func nameServicePartial_templateServiceMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceMethods,
		"NAME-service/partial_template/service.methods",
	)
}

func nameServicePartial_templateServiceMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.methods", size: 539, mode: os.FileMode(436), modTime: time.Unix(1476730517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-service/NAME-client/client_main.gotemplate": nameServiceNameClientClient_mainGotemplate,
	"NAME-service/NAME-server/server_main.gotemplate": nameServiceNameServerServer_mainGotemplate,
	"NAME-service/generated/client/grpc/client.gotemplate": nameServiceGeneratedClientGrpcClientGotemplate,
	"NAME-service/generated/client/http/client.gotemplate": nameServiceGeneratedClientHttpClientGotemplate,
	"NAME-service/generated/endpoints.gotemplate": nameServiceGeneratedEndpointsGotemplate,
	"NAME-service/generated/transport_grpc.gotemplate": nameServiceGeneratedTransport_grpcGotemplate,
	"NAME-service/generated/transport_http.gotemplate": nameServiceGeneratedTransport_httpGotemplate,
	"NAME-service/handlers/client/client_handler.gotemplate": nameServiceHandlersClientClient_handlerGotemplate,
	"NAME-service/handlers/server/server_handler.gotemplate": nameServiceHandlersServerServer_handlerGotemplate,
	"NAME-service/partial_template/client_handler.methods": nameServicePartial_templateClient_handlerMethods,
	"NAME-service/partial_template/service.interface": nameServicePartial_templateServiceInterface,
	"NAME-service/partial_template/service.methods": nameServicePartial_templateServiceMethods,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-service": &bintree{nil, map[string]*bintree{
		"NAME-client": &bintree{nil, map[string]*bintree{
			"client_main.gotemplate": &bintree{nameServiceNameClientClient_mainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"server_main.gotemplate": &bintree{nameServiceNameServerServer_mainGotemplate, map[string]*bintree{}},
		}},
		"generated": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"grpc": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientGrpcClientGotemplate, map[string]*bintree{}},
				}},
				"http": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientHttpClientGotemplate, map[string]*bintree{}},
				}},
			}},
			"endpoints.gotemplate": &bintree{nameServiceGeneratedEndpointsGotemplate, map[string]*bintree{}},
			"transport_grpc.gotemplate": &bintree{nameServiceGeneratedTransport_grpcGotemplate, map[string]*bintree{}},
			"transport_http.gotemplate": &bintree{nameServiceGeneratedTransport_httpGotemplate, map[string]*bintree{}},
		}},
		"handlers": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"client_handler.gotemplate": &bintree{nameServiceHandlersClientClient_handlerGotemplate, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"server_handler.gotemplate": &bintree{nameServiceHandlersServerServer_handlerGotemplate, map[string]*bintree{}},
			}},
		}},
		"partial_template": &bintree{nil, map[string]*bintree{
			"client_handler.methods": &bintree{nameServicePartial_templateClient_handlerMethods, map[string]*bintree{}},
			"service.interface": &bintree{nameServicePartial_templateServiceInterface, map[string]*bintree{}},
			"service.methods": &bintree{nameServicePartial_templateServiceMethods, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

