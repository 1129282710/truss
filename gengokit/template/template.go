// Code generated by go-bindata.
// sources:
// NAME-service/NAME-client/client_main.gotemplate
// NAME-service/NAME-server/server_main.gotemplate
// NAME-service/generated/client/grpc/client.gotemplate
// NAME-service/generated/client/http/client.gotemplate
// NAME-service/generated/endpoints.gotemplate
// NAME-service/generated/transport_grpc.gotemplate
// NAME-service/generated/transport_http.gotemplate
// NAME-service/handlers/client/client_handler.gotemplate
// NAME-service/handlers/server/server_handler.gotemplate
// NAME-service/partial_template/client_handler.methods
// NAME-service/partial_template/service.interface
// NAME-service/partial_template/service.methods
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _nameServiceNameClientClient_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xdb\xc6\x0f\x7e\xb6\xfe\x0a\xfe\x84\x04\x90\x0b\x47\xee\x0f\xd8\x5e\x0c\xe4\x21\xcd\xd2\x35\xc0\x5a\x18\x49\x80\xbe\x0c\x18\x2e\x12\x2d\xdd\x2a\xdd\xa9\x77\x27\x27\x85\xe0\xff\x7d\x24\x25\xcb\x76\xe2\x34\xeb\xb6\x02\x8d\x24\x8a\xfc\xc8\xfb\xf8\x91\x72\xa3\xb2\x2f\xaa\x40\xa8\x95\x36\x51\xa4\xeb\xc6\xba\x00\x49\x34\x89\xd1\x64\x36\xd7\xa6\x98\xff\xe9\xad\x89\xc9\xb0\xaa\x54\x21\xd7\x3a\xf0\xc5\x7a\xfe\xeb\x83\xcb\xac\x59\x0f\xb7\xe4\x2e\xd6\xa0\x6b\x8c\x23\xba\x29\x6c\xa5\x4c\x91\x5a\x57\xcc\x1f\xe7\x06\xc3\x9c\x9c\x03\x3e\x0a\x40\x61\x6d\x51\x61\xba\xe7\x52\xb8\x26\xeb\xc3\x74\x28\xdb\xfb\x34\xb3\xf5\xbc\xf9\x52\xcc\xd1\x39\xeb\x3c\xbf\x99\xcf\xe1\xae\xd4\x1e\x6e\xd1\xad\x75\x86\xd1\xa4\x54\x26\xaf\xd0\x41\xdc\x75\xe9\xb5\x14\xbf\x54\xa1\x84\xb3\xcd\x06\xe6\xc3\x3b\x3f\xf7\xe4\x8d\x8e\x72\x66\x95\x46\x13\x3e\xfc\x9d\x98\xde\x95\x62\xb8\xa8\xfe\xe1\x68\x40\x81\x06\x9d\x0a\x98\x0f\x11\xc3\x21\x26\x65\x08\xcd\x8f\x84\xb1\x3f\x85\x35\xf7\xe2\xbe\x7c\x77\x18\x10\x47\xd3\x28\x5a\x2b\xc7\x9d\xf9\x03\xce\x61\xa0\x3d\x5d\x2a\xe7\xf1\xda\x84\xd1\xca\x1d\x48\x6f\x9b\x4a\x0f\x26\x6e\x5e\x7a\x69\x6b\x6a\xf3\x60\xe9\xc9\x4c\x3f\x3b\xd5\xac\x7a\x4b\x73\x9f\xde\x60\xa1\x7d\x40\x47\xa9\x07\x6a\xd3\x5f\x31\x7c\x52\x35\x6e\x36\xb7\xc2\x1e\x17\x10\xad\x5a\x93\x89\x52\x92\x29\x74\x43\x37\x10\x54\x9e\xd3\x21\xa0\x71\xe8\xdb\x1a\x3d\x18\x0b\xbe\x07\x81\x5c\xfb\xcc\x52\xf4\x37\xf0\xdf\x08\xbf\x9e\x01\xf1\x0b\xf8\xd8\x60\x16\x3c\xb4\xe4\xe6\x21\x58\x41\x6a\x9c\x5d\xeb\x1c\x21\x94\x1c\xe6\xc8\x81\x81\x09\xd3\x83\x5d\x51\xd8\x16\x33\xed\x15\xd0\x67\x6b\x82\xb6\x06\xe8\xd1\xe1\xaa\xa2\x10\xcc\x81\x64\xcc\x70\x0c\xc3\x55\xdd\x6b\xa3\x28\x3d\xa7\x65\xd3\x60\xe6\xb6\x0c\xca\xf7\x0b\x31\x9e\x05\xa7\x8c\x67\xce\x53\x4e\x0b\xac\x76\x2f\x48\x1c\x4a\xd4\x6b\xdb\xfa\x6d\x28\x71\x4f\x5c\xb7\x59\x20\x26\xe1\xde\x52\x8f\xfa\x23\x41\x69\x7d\x58\xc8\x08\x6d\x7b\x41\xa2\x1d\xfa\x26\x92\xb8\x60\xec\xfe\xdf\xb9\xe4\x48\x6f\xc5\x31\x89\xf9\xad\xa4\x8e\x67\x10\xf3\xff\x0f\x77\x77\xcb\x03\x0a\xf2\xdc\xaf\xb3\x78\x4a\x48\xac\xb1\x97\x91\xf8\xed\x88\xb4\xf8\xf9\xed\x4f\x6f\xf9\xa6\xb8\x59\x5e\x42\xc2\xa0\xd3\x17\x50\x6b\x0c\xa5\xcd\x01\x8e\xa3\xf6\x6f\x19\xa9\xeb\x88\x2a\x5a\x19\x27\xda\xe4\xf8\x38\xa3\x2b\x2c\xce\x61\x14\xce\x47\x71\xf4\x9b\x4d\xd7\xe9\xd5\xe0\xc4\x0f\x58\x79\xe4\xeb\x9d\xfd\xcd\x3e\xd0\xf8\x9d\xe8\x9d\xc6\xe8\xad\xc9\xc7\x4b\x3c\x9b\xfc\xb3\x24\xb3\x11\xe7\x3b\x49\xf8\xac\xd3\xbd\xb6\x90\xe6\x2f\xa5\xad\x17\x8e\xfa\x75\x51\x55\xef\xb9\xf5\x9b\x0d\x7b\x4d\x84\x02\x99\xb2\x84\x07\x60\x0c\xda\x0a\x7c\xd8\x17\xe9\xb8\x90\x26\x34\x5f\x42\x9f\xcc\x99\x60\x50\x81\x6f\xc6\xde\xff\xef\x9c\xba\xcb\xc3\xb3\x85\x98\xb1\x27\x91\xbd\x5b\x18\xe9\x27\x7c\x48\xc6\x08\x02\xd8\x00\x73\x07\x8c\x33\x76\x7e\x87\x43\x62\x34\x3d\x08\x11\x24\xbd\xff\x45\xab\x2a\x19\x5d\x67\xbd\xf1\x33\xed\xd4\x6b\xe3\x31\x6b\x1d\x9d\x65\xcf\x78\x47\xcb\xda\xb6\x21\xe1\xa5\x4d\xe7\x20\xb8\x7c\xca\x72\xa0\x74\x0c\x4a\x89\x8c\xae\x24\xd3\x84\x56\x7f\xfa\xbe\x21\x3d\x84\x55\x62\x69\xcf\x84\x9c\x3c\x48\x11\x57\x7c\x56\x78\x28\x75\xc5\xb3\xab\x2a\x12\x8c\xe0\xf3\xa0\x18\x9a\x0b\x1a\xd2\x05\x9c\xae\x63\x29\x93\xb1\x27\x14\x7d\xf5\xa8\x43\xf2\x7f\x7e\x22\xaa\x27\x39\xae\xa8\x5d\xec\x4f\xdd\xb0\x42\xf7\x33\x8a\x76\xab\x58\x28\x62\xe7\x1d\x3b\x5c\xe0\x4b\xf5\x49\x2f\x16\xbc\x98\x1c\xd6\x36\xe0\x38\x00\x9e\xa6\x56\xaf\x34\xe6\xbf\x1b\x19\x81\xfd\xb2\x36\xd1\x11\x0a\x5e\xc9\x70\xba\x26\xa0\xf1\x94\x87\x68\xd1\xc4\x3f\xe8\x90\x95\xf0\x66\x18\xb4\x2e\xea\x3a\x20\x53\x09\x27\xe1\x4a\xd4\xcd\xa2\xdb\x09\x9f\x4d\xf4\xe6\xb9\xe6\xb9\xe9\x8a\x8e\x1c\x1f\xd7\x79\xbc\x60\x86\xbb\xee\xac\x07\x97\xd9\x10\xa0\x3d\x99\x33\x16\xdf\xec\x05\xf2\x77\x86\x03\x45\xe3\x7c\xec\x41\xc1\x82\x95\x7e\xa4\x19\x28\xd5\x6e\x36\xfa\x04\x32\x50\xfc\xe0\xf0\x6b\x8b\x3e\x8c\x3a\x3c\xf8\xd2\xa6\x5d\xb7\x5f\x5f\xd2\x75\x3f\x54\x18\x4f\x6e\x7a\xa9\xaa\x8a\xed\xe3\x18\x8b\x8c\x8e\x68\xf4\x15\x91\x66\x84\xc3\xf2\xfc\x5e\x81\x4f\xfb\xf8\x44\xae\xd2\x4b\xa2\x69\x3c\xec\xf6\xcb\xf4\xe4\x98\xc3\x6f\x9d\xf4\x1d\x7d\x68\x0a\x67\x5b\x93\xf3\xdc\x0d\x4c\xfd\xcb\xf2\x8f\xa7\x7c\xbd\xf0\x21\xc1\x92\xf1\x2b\x93\xc4\x3d\xf3\x70\xd3\x17\x45\x9f\x4f\xee\xcc\x42\x66\xe1\xc0\xf1\xbf\x6b\xd9\x41\xfa\xfe\xb7\x05\xa5\xa7\x2f\x2f\x41\xbf\x98\x7e\x3d\x8d\xf6\xf4\xb6\xa7\x3c\x5a\x1b\xaa\xad\xc2\xe2\xf5\xd1\xd4\x66\x4d\x8b\x29\x87\x61\xf8\x4e\xbf\x0a\x51\xfd\xd3\xf3\x61\xa5\x16\xff\x15\x00\x00\xff\xff\xf6\xa8\x3c\xa8\x1a\x0b\x00\x00")

func nameServiceNameClientClient_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameClientClient_mainGotemplate,
		"NAME-service/NAME-client/client_main.gotemplate",
	)
}

func nameServiceNameClientClient_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameClientClient_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-client/client_main.gotemplate", size: 2842, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceNameServerServer_mainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xdf\x6f\xdb\x36\x10\x7e\x96\xfe\x0a\x56\xe8\x00\x69\x70\xa8\x0e\x5b\xf7\x10\x34\x0f\x4d\x9a\xa5\xc1\x92\xc0\x48\x3c\xec\x59\x96\xce\x34\x11\x89\x14\x48\x2a\x75\x60\xf8\x7f\xdf\x1d\x45\x29\x72\xe0\x38\x7b\x68\xd1\x58\x32\xef\xe3\xc7\xfb\xee\x17\xdd\x16\xe5\x63\x21\x80\x35\x85\x54\x71\x2c\x9b\x56\x1b\xc7\xd2\x38\x4a\x56\x75\x21\x12\x7a\x36\x8e\x1e\x0a\x86\x47\xbe\x76\xae\x9d\xbe\xe7\x6d\x6b\xf4\x8a\x56\xb4\xed\x3f\x73\x2b\x85\x2a\x6a\xfa\x62\x9f\x6d\x59\xd4\xf8\x1a\x47\x79\xce\x7e\xaf\xd8\xbc\x30\xee\x19\x0d\x42\xd7\x85\x12\x5c\x1b\x91\x6f\x72\xa2\x2a\xb5\x72\xb0\xf1\xa7\x08\xad\x45\x0d\x7c\x02\x11\xa6\x2d\x03\xc7\x95\x66\x7f\x4b\x47\x28\xe9\xd6\xdd\x92\x97\xba\xc9\x85\x3e\x79\x94\x2e\xa7\x3f\x50\x55\xab\xa5\xea\x79\x0e\x22\x6a\x2d\x02\xd5\x62\x2d\x2d\x7b\x00\xf3\x24\x4b\x88\xa3\x75\xa1\xaa\x1a\x0c\x4b\xb6\x5b\x7e\xed\x03\x31\x2f\xdc\x9a\x9d\xec\x76\x2c\x0f\x36\x54\x86\x68\x30\x48\x6e\x9f\xca\x83\x48\x01\x0a\x4c\xe1\xa0\x42\x4c\xbb\xf4\x90\xf9\xf9\x3e\x08\x4f\xcf\xe2\x78\xd5\xa9\xd2\x87\x3d\xcd\xd8\x36\x8e\x9e\x0a\x43\x71\x8f\x2a\x58\x76\xe2\x6b\x55\x19\xe6\xff\x9d\x31\x4a\x04\x7f\x70\x46\x2a\x91\x26\xde\xca\x0b\x34\x27\x33\x96\x9c\x7e\xfe\xf4\xe7\x27\x7a\xf9\x46\xcb\x0c\x7d\x64\x0d\x20\xb2\xb4\xac\x96\xd6\x81\x62\x84\x04\x6b\x93\x0c\x99\x29\x57\x2f\xc4\xaf\x99\xc9\x3a\x25\xfe\xec\x89\xbf\x2f\x16\xf3\x43\x5c\x94\x8f\xb7\xb9\xc8\x3a\xe5\xfa\xc3\x73\x89\xfb\xf9\x05\x4b\x89\x31\x3b\x40\x89\xff\x3d\x07\xd6\x87\x85\x34\xeb\x13\x74\xa3\x85\x40\x46\x56\x69\x0a\x14\xef\xa3\x84\xf9\x13\xe0\x1f\xfc\xc6\xbf\xc6\x11\xc6\x2f\x0a\xcb\x67\xde\x70\x07\x3f\xd0\x86\xb5\xdb\x23\x52\x6d\xd1\xb9\x4a\x77\x2e\x3b\x80\xbc\xe8\x2b\x2f\xed\xd7\x33\xfe\x2f\x96\x4d\x9a\x38\x8b\x4e\x13\xe2\x1b\xac\x8a\xae\x76\x0b\xd9\x80\x75\x45\xd3\xfe\xb3\xb8\xf8\xff\x2c\x54\xfc\x60\xf6\x99\x2e\xfc\x1a\x72\xec\xe2\xc0\x42\x42\xd2\xa4\xb1\x82\xe2\xb4\x86\xba\xd6\x14\x92\x0a\x56\x30\xc8\xdd\x43\x60\x7f\x54\xcb\x67\x48\x42\x94\xce\x3b\x2b\x15\x86\x71\x3f\x4c\xb6\xaf\x6b\x16\x4a\x97\x8f\x75\x4e\xc1\x1a\x8c\x67\xa3\x19\x15\x04\x44\x4a\xea\x90\x16\x93\x33\x92\xd4\x21\x11\xd3\x12\x5b\x83\x01\xd2\xe0\x7d\xb8\x0c\x6d\xf7\xe2\xc3\x76\x6b\xb0\x7b\x81\x7d\x94\xec\xf4\x8c\x0d\xc7\xf3\x5b\x70\x6b\x5d\xd9\xdd\xae\xf7\x72\xbb\x5d\xe8\x1b\xfd\x03\x75\x7e\x94\xfc\x0a\xdc\x5d\xd1\xc0\x6e\x37\xb2\x0d\xdd\xcc\x87\x95\xde\xfd\x77\x76\x9d\x31\xec\x4e\x7e\x5b\x3c\xc2\x76\x7b\x08\x90\x06\x59\x41\x28\x16\xf2\x78\x10\x73\xa6\x28\x51\xe9\x8c\x49\x65\x9d\xe9\x1a\x50\xae\x70\x52\x2b\x2f\x7d\x08\xc3\x20\x1d\x1d\xc1\x8d\xa4\x65\xd8\x6f\x49\x2c\x9d\x3e\x9c\x65\xb7\xef\x85\x82\x46\x82\xd7\x74\xc8\xd5\x53\x6a\xaf\xe3\x72\x67\x13\x37\x42\x36\x6e\xa1\xc4\xbc\x4a\x2c\xbe\x97\x7c\x80\x31\x25\x1d\xdf\x60\x58\x52\x32\x33\x5c\xd1\x54\x86\xa5\xdb\x90\x21\x0c\x60\x7e\x8e\x57\x82\x30\xba\x53\xd5\xd0\x86\xd7\x68\x30\xa6\x6b\xdd\x58\x2d\x71\x24\x34\xa3\x09\xd6\x0f\xaf\xe8\x15\x33\xb5\x9b\xbf\x02\x66\xec\x37\x0a\x72\x7f\x1f\xf0\x3b\xed\xe4\xea\x39\x2d\x67\x2c\x5c\x0b\xfc\xe1\xfa\xea\xfa\x6e\xb1\xf7\x7d\x71\x79\x7f\x4b\x7b\xbc\xbf\x5f\x4e\x18\x36\x31\xbf\x24\x4f\x57\x69\xf2\x0b\xf5\xe4\x97\x93\x92\x7a\x67\x70\xae\x9f\x7d\xfd\x40\x39\xe0\x59\x68\xd3\xd3\xf7\xba\x1d\x33\x64\x69\x48\x53\x7f\xf9\x29\xeb\xbb\x2b\x6a\x68\xa7\x9f\x8d\xa1\x41\xe0\xb6\xdb\xf8\x0e\x69\xf8\x77\x1f\x8c\x34\xc9\x3d\xbe\xbf\x06\x73\xdc\xef\xe1\xbd\xd1\xfc\x45\x9e\x78\x0b\xbf\x56\x15\x6c\xb2\x23\x5b\xcb\xa6\xaa\xb1\x91\xdf\x66\xb8\xe8\x01\xc7\x38\xe8\x43\xd6\x47\x38\xe6\x3d\xe0\x18\x87\x7d\x6e\x96\xba\x7e\x9b\xe2\xc1\xdb\x8f\x31\x50\x13\x1d\xf1\x61\x41\xe6\xcc\xc7\x77\x3a\xdd\xc2\x8d\xf1\xeb\x78\x05\x4e\xcb\xc0\x53\xdd\xf8\x2c\x7f\x55\x95\xcf\x44\xfa\x82\x9c\xb1\x66\x5a\x13\xfe\xda\x1a\x53\xfa\x53\x6a\x82\x28\xfb\x6b\x74\xe8\x70\x9a\x2f\xb4\x1a\xf4\xa5\xd8\x46\xb3\x71\x8e\xd8\x59\x18\xdc\xd9\x1b\x22\x87\xdb\xf8\x5d\x8d\x03\x10\xa3\x39\x95\xe8\x6f\xd3\x9f\x2b\x91\x28\xfb\xaa\xaf\xd5\x8c\xa6\x03\x6d\xc7\x9f\x66\xc1\x25\x44\x97\x2d\xb9\x3e\x5c\xfe\xe4\xba\x5c\x79\xe0\x07\x04\xca\xda\x9f\x3c\xaa\xc1\x27\x7d\x35\xe0\x3a\xa3\xf0\x8d\x66\x53\x64\xcd\xd3\x34\x7e\x57\x78\xa4\xd7\xf9\x3a\x7c\x7e\x6a\x10\xd2\xff\x96\x18\x7a\xcf\xf8\xce\x6b\x97\xfc\x1e\x04\xf9\x64\xf0\xd7\xd5\x30\x4d\xc7\xb9\x18\x90\x98\x01\x3c\xec\xcd\x22\x9b\x8a\x18\x3c\xb6\xbc\x8f\x79\xad\xa6\x91\xbe\xef\xd4\x87\xfd\x8b\x1a\x36\xd2\xf9\x41\x44\x1b\xb3\x78\x17\xff\x17\x00\x00\xff\xff\x27\x08\x21\xb1\x46\x0b\x00\x00")

func nameServiceNameServerServer_mainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceNameServerServer_mainGotemplate,
		"NAME-service/NAME-server/server_main.gotemplate",
	)
}

func nameServiceNameServerServer_mainGotemplate() (*asset, error) {
	bytes, err := nameServiceNameServerServer_mainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/NAME-server/server_main.gotemplate", size: 2886, mode: os.FileMode(436), modTime: time.Unix(1477688393, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x55\xdd\x8e\xdb\x36\x13\xbd\x96\x9e\x62\x3e\x63\xf1\x41\x5a\x68\xa9\xfb\x14\xbe\x89\x93\x2c\x52\x34\xa9\x9b\x18\xed\x45\x51\x14\x34\x45\xcb\x84\x65\x52\xa5\x68\xaf\x0d\xc1\xef\xde\x19\x92\xb2\x25\x63\x37\x5d\xac\x61\x69\x38\x3c\x73\xe6\xcc\x8f\xcb\x12\x96\x5c\xec\x78\x2d\xa1\xb6\xad\x80\xd6\x9a\xa3\xaa\x64\x07\x1c\xea\x6f\xcb\x05\x88\x46\x49\xed\x60\x63\x2c\xb8\xad\x84\xbe\x67\xdf\xa5\x3d\x2a\x21\xd9\xb3\x74\x5f\xf9\x5e\x5e\x2e\xd0\x45\x4b\xda\x8e\x90\xd2\x54\xed\x5b\x63\x1d\x64\x69\x32\xab\x4d\xc3\x75\xcd\x8c\xad\xcb\x53\xa9\xa5\x2b\x85\xd1\x4e\x9e\xdc\xcc\x9f\x99\xba\x91\x6c\xe4\x42\xd7\xdf\x3e\x29\xf7\xd2\xf1\x8a\x3b\xee\x5d\x94\xdb\x1e\xd6\x4c\x98\x7d\xd9\xee\xea\x52\x5a\x6b\x6c\x37\x4b\xa7\x27\xb5\x79\xda\x29\x57\xd2\x47\xea\xaa\x35\x4a\x53\x60\xc2\x72\x96\xeb\xce\xb3\x7c\xc3\xff\xea\x10\x49\xa5\x09\x0a\xb6\xda\xaa\x0e\xa2\x0c\x69\xb2\xe5\xba\x6a\xa4\x85\x19\x6a\xf3\xd9\xa7\xbc\xe4\x6e\x0b\x4f\x28\x4c\x19\xcf\xba\x92\x24\x92\x16\xa3\x76\x47\xf1\xaa\x67\x2d\xb5\xb4\xdc\xc9\x0a\x7d\xda\xb5\x77\x59\xbe\x9f\x3a\xcd\xd2\x3c\x4d\x31\xfc\x57\xf9\x02\x56\xba\x83\xd5\x58\x25\x3d\xa8\x0f\x6b\x14\x5f\x56\xb0\x3e\xdf\x95\x0e\xa5\xd6\x52\x38\x65\x34\x83\xcf\x0e\x90\x3a\x16\x92\x70\xac\xc4\xcc\x74\xa7\xd6\xaa\x51\xee\x0c\x66\xe3\x2b\x2c\x78\x43\xd9\x38\x03\x95\xe2\x4d\x81\x11\x2a\x68\x90\x98\x45\x3c\xd3\xc9\x22\x38\x8d\x30\x21\xdd\x1c\xb4\x20\x56\x19\x99\xe1\x91\x94\x62\x0b\x1f\x7c\x81\x86\x02\x4c\x4b\x9e\x1d\x30\x16\xcd\xbf\x7a\x43\x0e\x59\xd4\x67\xe8\xa9\x02\x7c\x01\x73\xe8\xd3\xe4\xc8\x31\xa2\x88\x49\x20\xce\x46\xd5\xa8\x3e\xf5\xe1\xdf\x05\x6c\xe0\xdd\x1c\xb0\x34\xd8\x6b\x03\x38\x5e\x49\xf0\x36\x1d\x6c\xb2\xff\x0b\x91\xe3\xbb\xda\x10\x20\xfc\x6f\x0e\x5a\x35\xde\x23\x09\xc2\xd1\x7b\x0c\xd6\xb1\x3f\x2c\x6f\x33\x7c\x2e\x60\x26\xb8\xd6\xc6\x01\x6f\xdb\xe6\x1c\x91\x67\x04\x74\x49\xf1\x3f\x4d\xc4\x88\x7d\x47\x91\xfe\xfc\x6b\xd2\x45\x93\xf4\x28\xdc\x6b\xa7\xef\x25\x26\x21\x33\x22\x13\xa7\xe0\x77\xde\x1c\x64\xb7\x32\xcf\x58\xb5\x2f\xb1\xb9\x33\x21\xd8\x56\xf2\x0a\x9b\x27\xcf\x8b\x10\xbe\xef\x9f\xe0\x05\xdb\x14\x1e\xdc\x47\x8a\xce\x2e\xc8\xcb\x5b\x83\x14\x0f\x8a\xac\x78\x78\x9d\x51\x44\xdb\x9a\xaa\xf3\x7e\x5e\xd1\xbe\x5f\x99\x5f\xcc\x0b\x56\xf3\x41\xdd\x26\xf8\x63\x9c\x0a\x18\xc6\x83\x0d\x16\xba\xe7\x75\x4b\xfe\xe3\xe6\x1c\xa6\xb9\x62\x3b\x84\x74\x7d\xa2\x3e\x55\x5d\x84\x47\xec\xed\x95\x55\xfb\xa5\x95\x1b\x75\x9a\xd0\xfd\x74\x68\x9a\xf3\x6f\x07\xde\xa8\x8d\x92\x15\x45\x80\x19\x9b\x61\xe7\xdf\x6e\x8e\x83\x0f\x66\x9c\x29\x24\x2c\x4c\x25\x49\xc1\xa9\xcf\x37\xf9\x0f\x6a\xeb\x46\x9e\x1f\xe4\x5b\x9e\x7e\x1c\x64\x74\x6d\xd7\xac\xef\x9f\x8d\x27\x81\x6e\xc3\xe9\xea\xdc\x8e\x56\x5f\x7f\x89\xde\x93\xce\xc0\x3e\x0f\xe6\xfc\xaa\x63\x46\x5d\x94\x84\x72\xa1\xc8\x54\x90\xe1\x21\x1d\x7a\x32\xa4\x11\xfc\xbb\x9e\x1c\xc6\x65\xbd\xaf\x29\x6d\x04\x0f\xf7\x5a\x39\xde\x01\xfe\xfd\xb8\x62\xc5\x8d\x41\x72\x29\x68\x20\x52\xe4\xe2\x30\xbd\xc9\xcc\x41\xe7\xec\x41\x38\x1a\x9e\xd8\x8e\xd8\xf4\x68\x53\xba\x26\x7f\x5c\x23\xe3\x9e\xa7\xed\xc2\x81\xf6\x81\x7f\x73\x5b\xee\x60\x6f\x2a\x2a\x67\x17\x16\xc7\x75\x27\xd1\x3c\xfb\x68\x93\xfb\x74\x35\x7b\x1c\x13\xc8\xc3\x98\xa6\x61\xcb\x2c\xdc\x69\x98\x96\xef\x48\x3e\xdb\xc9\xb3\xdf\x2b\x81\x51\x3e\x05\xeb\xaf\xd2\x7a\x58\x03\xaf\x01\xfb\xb5\x60\x86\x59\xc3\x3e\x26\xc8\x74\xbc\x28\x68\xf8\x2e\x31\xfe\x8f\x26\xd6\x73\x19\xc4\xc9\xef\xe6\x21\xf6\xe1\x27\x02\xb9\xe3\x25\xdc\x69\xc0\x65\x8b\xf0\x5d\xc0\xbe\x82\xc7\xe1\x87\x8e\x7d\xf9\x90\xdf\x7b\x78\xda\x34\xd1\x2d\x57\xe3\x9a\x24\xc3\x8a\xdc\xdd\x56\xa4\x27\xe6\xa7\x18\x17\xe2\x11\xf7\xb1\x3f\xc3\xb0\xcc\xe7\x91\xed\x72\x96\x45\xd6\x3f\xd1\x61\x18\xf8\x00\x3c\xa7\x65\x48\x4a\xfb\x57\x84\x2d\xe0\x78\xed\x65\x6a\x5e\xc2\x0c\xae\xe3\x35\xfb\x88\xfc\xe7\x70\x4d\xe0\x67\xec\xb8\x0c\x6d\xc5\xcd\xb4\xa4\x3b\x01\x15\xeb\x97\xe7\x03\x5c\x54\x06\xd9\x05\xdd\xff\x0d\x00\x00\xff\xff\x98\xe6\x41\x14\xa1\x08\x00\x00")

func nameServiceGeneratedClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientGrpcClientGotemplate,
		"NAME-service/generated/client/grpc/client.gotemplate",
	)
}

func nameServiceGeneratedClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/grpc/client.gotemplate", size: 2209, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x9d\x53\x78\xae\x44\x7c\x08\x96\x8e\x48\xe4\x02\x51\xf9\x84\x0a\x13\x47\xce\x67\x8a\x7a\x77\x18\xd8\xdf\x9b\x53\x17\xb9\x01\x52\xfd\xcc\xf8\x8c\xa1\x15\xad\xfa\x6b\xa7\x3e\xc9\xce\x28\x6d\x74\x0f\x2a\xf1\xee\x56\x88\x54\x5d\x1e\x1e\xb2\xf9\x1d\xb2\xe8\x71\x9c\xe6\xdc\x8a\x99\xa4\x35\xe7\xeb\x0a\xeb\x88\x74\xb1\x1d\x8d\xf9\x5f\x24\xfd\xd4\x37\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func nameServiceGeneratedClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedClientHttpClientGotemplate,
		"NAME-service/generated/client/http/client.gotemplate",
	)
}

func nameServiceGeneratedClientHttpClientGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/client/http/client.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x55\x4d\x8f\xdb\x36\x10\x3d\x5b\xbf\x62\x6a\x04\xa8\x5d\x68\xa9\x7b\x81\x5c\x1a\xb4\xe9\x1e\x12\x04\x6d\xfe\x00\x4d\x8d\x25\x62\x29\x52\x21\x29\xaf\xb7\x82\xfe\x7b\x67\x48\x49\xb6\x61\xf7\x23\x0b\xac\x2d\x91\x33\x6f\xde\xbc\x37\xa4\x7b\xa9\x5e\x64\x83\x10\x4e\xaa\x28\xaa\x0a\xbe\xb6\x3a\xc0\x51\x1b\x04\xe5\x6c\x94\xda\x06\xe8\x30\xb6\xae\x0e\x10\x1d\x74\xf2\x05\x41\xdb\x5a\x9f\x74\x3d\x48\x03\x68\xeb\xde\x69\x1b\x29\xc5\xbb\x0e\x02\xfa\x93\x56\x18\x4a\x46\xf2\xf8\x6d\xc0\x10\x41\xda\x9a\x9e\x43\xef\x6c\x40\x88\x6f\x3d\x26\x24\x0e\xa5\xd7\xd6\xd1\xe2\x8a\x52\x82\x0c\xf0\x8a\xc6\xf0\x37\x5a\xe5\x6a\xf4\x81\x01\x18\xaf\xc6\xf9\xfd\xe8\xfc\x9c\x98\xd0\xca\xb4\x20\x29\xc9\x1d\xc1\x0d\x1e\xc2\xd0\xf7\xce\x47\xac\x21\x7a\x69\x03\x3f\x73\x39\x2d\x8d\xfe\x4b\x46\xed\x2c\xa3\x51\x4e\x27\x63\x10\xf0\x4c\x0c\x4d\x70\xd4\x95\x32\x43\x8d\x61\x65\x03\x9d\xae\x6b\x83\xaf\x92\xc8\x8b\xa2\xd0\x5d\x02\xda\x15\x9b\x6d\xe3\x8c\xb4\x8d\x70\xbe\xa9\xce\x95\xc5\x58\xb1\x54\x78\x8e\xdb\x82\x37\x75\x6c\x87\x83\x50\xae\xab\x1a\xf7\xf4\xa2\x63\xc5\xff\x0b\x28\x87\xb4\xd4\x90\x41\x0f\xdb\x71\x14\xcf\x09\xf5\x8b\x8c\x2d\x3c\x4d\x13\x54\xf3\x5e\xa8\x92\x3e\x7e\x5b\x6c\xfa\x43\x0a\xfc\xf2\xcb\x6d\xe8\xb6\xd8\x27\xbf\x7e\x5d\x1d\x50\xce\x18\x54\xf4\x30\x4b\x11\xdb\x2b\x65\xe9\x4d\x46\x0a\x21\x0c\xd2\x4d\x5a\x90\x75\xbd\xd8\xc5\x1a\xfc\x18\x18\xac\x43\x49\x7d\x93\x3b\x07\x84\x21\x90\x80\x64\x83\x84\x16\x4d\x4f\x74\x43\xf4\x83\x8a\x25\x6f\xcf\xa5\x1e\x57\xa2\x0f\x07\x92\xe1\x82\xb6\x0d\x0d\x52\x2f\xbd\xa4\x19\x42\x2f\x68\x91\xd7\x9f\xa9\x7c\x1e\x00\x5f\x82\xa6\xda\x5c\xec\x38\x98\x64\xe4\x71\xb0\x8a\x4d\x9a\x29\x5b\x64\x1f\x1d\x38\xa2\x20\x23\x82\xe3\x5c\x7a\x7e\x5a\x0a\x32\xe0\x41\x06\x4d\x56\xfe\x46\xe9\x78\x96\x5d\x6f\xb0\x84\x37\x37\x90\x83\x4d\x1b\xa9\x7e\xe0\x21\xba\x92\x8a\x09\xae\x85\x72\x9d\xde\xbb\x7a\xa0\xd1\x65\x38\x8a\x6d\x63\xec\xc5\xef\xd9\x8c\x12\x5e\xc9\x53\x40\xa9\xda\xf9\x2c\xc0\x6e\xa9\xbe\xa7\x3d\x4f\x0c\x87\x3e\x83\x86\x1e\x95\x3e\x6a\x45\x45\x63\x2b\x60\xf7\x9c\xf8\xd1\x91\x22\xfc\x83\x3c\x98\x37\x8a\xe9\x74\x88\xf9\x1c\xd1\x4c\x07\xdd\x58\x4e\xd5\xf6\xe4\x5e\x30\x49\xf9\x67\xb6\x65\x3d\x77\x89\x22\xde\x9a\x9d\xcd\x60\x88\x45\x49\xb1\xbf\x56\x57\x19\x8d\x36\xde\xaa\x7b\x65\xdc\xe5\x08\x13\x23\x9a\xde\x0c\x47\x7d\xfc\x8b\x8d\x7c\xd8\xb2\x56\x9a\x15\xee\x30\x8f\xd5\x85\x2f\x65\xa0\x3f\x4a\x1e\xa8\xc7\x4e\x30\xd8\x5a\xec\xf1\x35\x32\x70\xb1\xcb\xb9\xad\x92\x0f\x9f\xf1\xf5\xc3\xdc\x0f\x4d\xf0\x41\xdb\xa4\x53\x97\x94\x4d\x2c\xaf\xbc\x2d\xe7\xfb\x26\x0e\xde\x52\xf7\xdc\x34\x73\x54\xd4\x29\xcd\x70\x9a\xe7\x99\xaf\x28\x52\x47\x77\x9a\x8e\xc5\x38\x52\x7d\xba\x13\xdf\x69\xf8\xf9\x3d\x88\x25\xfe\x53\xf6\x63\x9a\x8a\xcd\x38\xbe\xd3\xe2\x23\xc6\xcf\x34\xd8\xd3\xb4\x40\x00\xfd\x2d\xad\x88\x65\x91\xd0\x9e\x78\x95\xd2\xa6\xdb\x13\xfb\xdf\x75\x78\x44\x69\xd6\x2e\x29\x7b\xb8\xad\xbc\x53\xf1\x0c\xf3\xed\x23\x3e\xe4\xef\x92\xa7\xe2\xa7\xfe\x20\xc6\xf1\xa3\xe3\x30\xc2\x17\x7f\xe4\xcb\xf8\x2b\x75\x7c\xc9\xde\xc3\xee\x3e\x2e\x5f\xd4\xb7\x81\x25\xa0\xf7\xce\x53\xf5\x62\xb3\x5c\xe5\x69\x8d\x79\xa3\x78\xac\x06\x73\x63\x2e\xfb\x62\xa3\x8f\x29\xf8\x87\xf7\x60\xb5\x61\x90\xcd\x6c\x10\xbd\x26\x9c\x62\x33\x15\xcb\xda\x52\x40\xfc\x4f\x72\xfb\x92\x61\x48\xdc\x71\xcc\x32\xb3\xc8\x9f\xf8\x80\x7d\xaf\xd2\x9c\xf4\x0f\xbd\x04\x98\x6f\xe6\x25\x77\x7f\xef\x74\x56\x27\xf5\xc0\x70\x8f\xbd\x59\x7e\x15\xd7\xc3\x32\xb2\x0d\xeb\xef\xe3\xd5\x72\x16\xf8\x22\x3c\x61\x7f\x63\xf6\x33\xc2\x23\x79\x1e\x79\x4c\x89\xa7\xd5\xab\x20\xee\xe7\x27\x71\xe2\xb0\x7b\x97\xee\x6d\x62\x9f\x96\xd5\x53\x16\x7e\x33\x5d\x69\xff\x77\x00\x00\x00\xff\xff\xb3\x34\xc1\x62\x4f\x08\x00\x00")

func nameServiceGeneratedEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedEndpointsGotemplate,
		"NAME-service/generated/endpoints.gotemplate",
	)
}

func nameServiceGeneratedEndpointsGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/endpoints.gotemplate", size: 2127, mode: os.FileMode(436), modTime: time.Unix(1477688393, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x57\xdf\x6f\xdb\x36\x10\x7e\xb6\xfe\x8a\x9b\x51\x0c\x56\x60\xcb\x7b\x2e\x90\x97\xa6\x5d\x52\x6c\xe9\x82\x2e\xd8\x1e\x8a\xa2\xa0\xa5\xb3\x4c\x58\x12\x15\x92\x76\x92\x09\xfe\xdf\x77\x47\x4a\xb6\xec\xc8\x96\x53\xe4\x21\x70\x24\xde\x8f\xef\xbe\xef\x8e\xa4\x4a\x11\x2f\x45\x8a\x60\xd6\x71\x10\x4c\xa7\x70\xbf\x90\x06\xe6\x32\x43\x28\xb5\x5a\xcb\x04\x0d\x18\xd4\x6b\xd4\x13\x43\x0f\x30\x93\x45\x22\x8b\x94\x4c\x94\x06\xbb\x40\x48\xbf\xde\x5d\x81\xd5\xa2\x30\xa5\xd2\x36\xe2\x10\x9f\x2d\xac\xac\xcc\xe4\x7f\xe4\xcb\x26\xdb\xd5\x69\xaa\xcb\x38\xfa\xdb\x85\x8b\x82\x40\xe6\xfc\x12\x46\xc1\x60\x58\xa0\x9d\x2e\xac\x2d\x87\x01\x3d\xa4\x2a\x13\x45\x1a\x29\x9d\x4e\x9f\xa6\xbc\x12\xab\xc2\xe2\x93\x1d\xba\x35\x95\x66\x18\xb5\x4c\x38\xe6\x34\x47\x2b\x12\x61\x05\xfb\xf3\x8b\x6d\x4a\x18\xa6\xd2\x2e\x56\xb3\x28\x56\xf9\x34\x55\x93\xa5\xb4\x53\xfe\xdb\xc7\xc4\x6e\x4d\xed\x0c\x4f\xc6\x18\x0c\xca\x19\x0c\xab\x2a\xba\xfb\xf0\xd9\xe1\xbc\x13\x76\x01\x93\xcd\x66\x18\x84\x81\x63\xea\x56\x2c\xf1\x9a\xaa\xf7\xf5\x40\x4e\x8f\x06\x04\xb1\x65\x41\xcd\x01\x8b\xa4\x54\xb2\xb0\xf4\x6a\x2d\x64\x26\x66\xc4\xa8\xe0\x75\x47\x58\x55\x5d\xab\x2f\x22\x47\x88\xea\x74\xd1\x35\x5a\x7e\xb1\xd9\x34\xf4\xcc\x57\x45\x7c\x90\x63\x14\xdb\x27\xa8\xc9\x88\xae\xfc\xef\xb8\x95\xe9\x53\xf3\x5f\x08\xe5\x2c\xea\xcd\x01\x55\x30\xf0\xda\xfe\x55\x5a\xa9\x0a\x03\xef\x2f\xe1\xdb\xf7\x3d\xfe\x6a\xb5\xbc\x01\xd9\x0f\xa0\x6b\xf9\x03\x52\x3b\xe0\xa8\x51\xe1\x5e\xd5\xe0\xc2\x71\x30\xd8\x04\x03\x8d\x76\xa5\x0b\xf8\x95\x5d\xbd\x43\xe5\xf8\xae\x2a\xb8\x57\x7f\xaa\x47\x82\x72\x88\x11\x36\xe4\x57\x55\x94\x87\x7a\xf3\x9d\x64\x64\x5b\x93\x5b\xb4\x0b\x95\x18\xb6\x20\x93\x26\xc2\x3b\xb9\xab\xef\xfd\x01\xca\x2f\xf8\x58\x33\x48\x2e\x03\x62\x71\xcc\xbf\x5b\xe2\x88\xaa\xb6\x77\x43\xa3\x33\xfa\x88\xb1\x4a\x9c\x06\xfb\x46\x5f\xf1\x61\x85\xc6\xdb\x7c\x2a\x8e\xd9\x50\xfa\xc2\xa0\x33\xda\x63\x3a\x8a\x22\x7e\xc9\xfc\x54\xd5\x84\x25\xe4\x6a\x36\xc1\xc6\x75\xd6\x8e\x27\xa0\x19\xc9\x30\x47\x56\x97\x47\xa9\x5f\x53\xc2\x8d\x7a\x2e\xa8\x81\xed\x73\x89\xed\x50\xc6\xea\x55\x6c\x49\xf4\x7e\x5a\xbb\x59\x05\x38\xa0\xf5\x46\x14\x49\x86\x3a\xd8\x95\xe0\xf1\xd7\x91\xdc\x1e\xd1\x02\x60\xd5\xae\x9c\x57\x55\xd2\x0b\xd8\xcd\xca\xc8\xc0\xc5\x2e\x5b\xb8\xcb\xd0\xae\xa1\x7b\x84\x34\x3e\xc0\x45\x7b\x64\xc8\xa5\x16\xf8\x9e\x58\xdc\xb9\x87\x30\x7a\x69\xe7\x45\xde\x37\xa4\xb1\xd4\x5a\x31\x8a\x60\xf0\x83\x13\x94\xee\x0d\xe3\xe7\x76\xeb\xa2\xd7\xcf\x12\x77\x11\x83\x74\xa0\xc2\x60\x20\xe7\xce\xef\x97\x4b\x28\x64\xc6\xd1\x9a\x69\xa2\x47\x17\xb2\x3d\x61\x94\x26\x3a\x13\x60\x38\xe6\x08\x24\x58\x55\x79\xe9\x58\xb8\x9a\x79\xdf\xf3\xfd\xb4\x93\x47\xcf\x78\x80\xe4\x2d\xef\xe0\x00\xf0\x3e\xb5\xc5\xef\x2c\x9d\x5d\x08\xcb\xaa\x50\x72\xde\x30\xdd\x0c\xf8\x6d\xb2\xb3\x0f\x75\x1d\x9c\x1a\x4a\xc0\x8a\x06\x6b\x92\xa8\x5c\xc8\xa2\xc7\x3e\x82\x3b\x2d\x73\xa1\x65\xf6\xcc\x5e\xf3\x55\x46\x3d\xe6\x76\xec\xd6\x8e\xdb\x53\xd0\xe8\xc7\xcb\xee\xe1\xa2\x68\x79\xd7\xb0\x15\xf7\x49\xeb\xa9\xdd\x0c\xdc\x6a\xc4\x66\xed\xd3\xa5\x56\x57\xdb\xb5\x14\x7e\x78\x21\x1c\xd3\x75\x95\x49\x9e\xaa\x37\x51\xce\xb7\xcb\x49\xe9\xbc\xc9\xcf\x69\x57\x12\xfd\xe7\x2b\xe7\x33\x1d\x93\x2e\x76\x65\xf7\x4a\xe7\x83\x1c\xd7\x8e\x21\x9d\xa9\x1e\x9b\x6e\xf5\xa3\x87\xb3\xe7\xad\x3d\xa4\xd9\xf3\x89\xe9\xf3\xa7\xc9\x59\x1a\xf6\x1d\x3c\x9d\x1a\x7a\xa7\x3e\x0d\x5f\x21\x8e\x57\xb3\x57\xf4\xb3\xc6\xaf\xaf\xa2\x2e\x0d\xb7\x38\xce\x94\xd0\x94\xcc\xe8\xb6\xb5\x7e\x42\x40\x53\x9e\x1a\xc2\x37\x11\xf0\xf8\xf6\xd9\xe8\x77\x72\xfb\x3c\x7f\x57\x3c\x47\xbd\x93\xdb\xe7\xde\x0c\xf6\x14\xd4\x2d\x5f\x5d\xeb\x2b\xb6\xcf\x06\xd2\x5b\x6c\x9f\xc4\xd6\x0d\x66\x25\x6a\x13\xf8\x1a\x5e\x5c\x63\xbb\x2f\x0d\x79\x02\x17\x8d\x69\x74\xfb\x31\x3c\xb4\x60\xb8\x7c\x03\x5a\x8e\x61\xed\x30\xbb\x6e\xb8\x20\x37\x3e\xc5\xe9\x5c\x5f\xb7\x4f\x75\xff\xfd\x81\xb0\xc4\x67\xa7\x7a\x92\x60\x02\x33\x45\xdf\x1c\x44\x72\x93\x86\x6f\x54\x39\x69\x3d\x5a\x86\xf0\xb8\x90\xf1\xc2\x99\x66\x19\x64\xac\x5a\x1d\x85\x2e\x65\xee\xae\xc8\xdf\x53\xd1\x95\x28\x54\x21\x63\x91\xdd\xa0\x48\x50\xff\x41\xd1\xe9\xe3\xc4\xd6\x89\x8c\xf2\xbd\x23\xa9\x7d\x44\x01\x33\x6c\x42\xc4\x31\x1a\x43\x00\x28\x37\xd2\xf7\x13\x75\x84\xcf\x5c\x5f\x9f\xe1\x72\x5b\xec\xbf\xb4\xfc\x8f\xc8\x56\xe8\x2f\x2d\x5c\xec\xb7\xdf\xbe\x87\xbd\x86\x47\xd0\x51\x65\xbb\x08\xee\x4a\xbc\xd5\x8e\xdc\x48\xb6\xff\x03\x00\x00\xff\xff\xba\xba\x12\xdf\xb0\x0e\x00\x00")

func nameServiceGeneratedTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_grpcGotemplate,
		"NAME-service/generated/transport_grpc.gotemplate",
	)
}

func nameServiceGeneratedTransport_grpcGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_grpc.gotemplate", size: 3760, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceGeneratedTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x9d\x53\x78\xae\x44\x7c\x8d\x8e\x48\xcd\x05\xa2\xf2\x09\x88\x50\x47\xce\x87\xc5\xca\xdd\x61\x60\x7f\x2f\x42\x17\xd9\x00\xa9\x76\xa6\xbf\xc7\xd0\x8a\xa3\xda\xf3\x41\xbd\x93\x9d\x5e\x8e\xd1\xcd\xa9\xc4\xab\xb7\x42\xa4\x6a\x72\x33\x97\xdd\xae\x90\x45\xe7\x3c\x45\xec\xa5\x35\x49\x6b\xce\x97\x15\xad\xc3\xd3\x06\xff\xc0\xf3\xbf\x48\xfa\xa9\x6f\x00\x00\x00\xff\xff\xaf\xf5\x0f\x3e\x69\x00\x00\x00")

func nameServiceGeneratedTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceGeneratedTransport_httpGotemplate,
		"NAME-service/generated/transport_http.gotemplate",
	)
}

func nameServiceGeneratedTransport_httpGotemplate() (*asset, error) {
	bytes, err := nameServiceGeneratedTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/generated/transport_http.gotemplate", size: 105, mode: os.FileMode(436), modTime: time.Unix(1477930115, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersClientClient_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\xcf\x4e\x1b\x31\x10\xc6\xcf\xf1\x53\x8c\x10\x42\xd9\x08\x36\x77\xa4\x1e\xa0\x82\x88\x43\x2b\x44\xfb\x02\xce\xee\x64\x63\xd5\xff\x6a\x7b\x5b\x2a\xcb\xef\xde\xb1\xd7\x21\x0d\x41\x6d\x54\x71\x59\xcd\xda\xdf\x7c\x33\xf3\x1b\xc7\x08\x3f\x45\xd8\xc2\x79\x40\x65\x25\x0f\x78\xf7\x8c\xdd\x18\x8c\x83\xeb\x0f\xd0\xa6\xc4\x2c\xef\xbe\xf1\x01\xa1\x93\x02\x75\xd8\x72\xdd\x4b\x74\x8c\x09\x65\x8d\x0b\x30\x67\x33\xbb\x86\xb3\x18\x8f\xf2\xdb\xc7\xdb\x87\xa2\x79\xe4\x64\x7f\x95\xd2\x19\x6b\x18\x63\x31\x3a\xae\xc9\xee\x5c\xe4\x02\xc7\x59\x5f\xd0\xfd\x10\x1d\xb6\x9f\x30\x6c\x4d\xef\xa9\x81\xe5\x12\xc8\x5e\xb4\x2b\x0c\x9f\xb9\xc2\x94\x80\x6a\x4b\x54\xd4\x8d\x87\x9d\x9c\x6d\x46\xdd\xbd\xd2\xcd\x63\x2c\xa3\x09\xdd\xe3\xf3\x1b\xa5\x3e\x96\x89\x6e\xdc\xe0\x4b\xb5\x1c\xc0\x9f\xf9\x31\xae\x4c\x8e\xa0\xbd\x27\xf3\x20\x8c\xce\x92\x7c\x8e\xba\x4f\xa9\x81\xf9\xc2\xae\xdb\x17\x15\xa5\x3e\xe1\xf7\x11\x7d\xf8\xfa\xcb\xe2\xde\xe6\x12\xd0\x39\xe3\x9a\x48\xb3\x2f\x17\xf4\xb9\xaa\xc4\x15\x15\xcd\x10\xfe\xaf\xbf\x8c\x94\xcd\xb2\x5b\x05\x6a\xb9\xe3\xaa\x40\xcd\xc6\x6d\x91\x17\x4d\x11\x89\x0d\x68\x13\xaa\xaa\x7d\xf0\xb7\xdc\x63\xee\xb3\x4a\x08\xf2\x4d\xdf\x43\x37\xfa\x60\x14\xac\x47\x2f\x34\x7a\x0f\xd2\x0c\xa2\x83\x0d\xbd\x06\xa1\x03\x3a\xeb\x30\x08\x3d\x64\xce\x93\xcf\xbd\xe4\x03\x15\xa2\x21\x6b\x19\x22\xb3\x6f\x6c\xf7\x53\x63\x8a\x16\xcb\x7c\xe7\x26\x4c\xb9\xd7\x53\x00\xc6\x77\x67\x76\x2a\x31\x7a\xec\x30\x2f\x9f\x37\xd9\x35\x07\xe7\x4f\x68\x91\x5a\xe9\x9b\xc3\xe3\x3b\x3d\xaa\xa6\x9a\xee\x06\x9d\x6e\xea\x6b\xbe\x86\x8b\xd7\x37\x2b\x73\x08\x55\x7a\x84\xbf\x5b\xfc\xcb\x61\xbf\x96\xe3\xa5\xcc\xca\x4a\xc2\xe8\x34\x5c\xd4\xd5\x5c\x82\x16\x92\x65\xd1\x24\x79\x09\x7e\x07\x00\x00\xff\xff\xec\x76\x11\x73\x2f\x04\x00\x00")

func nameServiceHandlersClientClient_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersClientClient_handlerGotemplate,
		"NAME-service/handlers/client/client_handler.gotemplate",
	)
}

func nameServiceHandlersClientClient_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersClientClient_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/client/client_handler.gotemplate", size: 1071, mode: os.FileMode(436), modTime: time.Unix(1477150868, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServiceHandlersServerServer_handlerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x93\xc1\x6e\x13\x31\x10\x86\xcf\xf1\x53\x8c\x56\x15\x4a\x50\xba\x7b\xaf\xd4\x0b\x08\xaa\x1e\xa8\x2a\xe8\x1d\x39\xde\xc9\xee\xb4\xbb\xf6\x62\x7b\xdb\x20\xcb\xcf\xc4\x43\xf0\x62\x8c\xbd\xdd\x34\x09\x05\x71\xe3\x10\xc5\x8a\xbf\xf9\x3d\xff\x3f\x93\x41\xaa\x07\xd9\x20\xb4\x52\xd7\x1d\x5a\x21\xaa\x0a\xee\x5a\x72\xb0\xa5\x0e\x41\x19\xed\x25\x69\x07\xbe\x45\xf8\x82\xf6\x91\x14\x42\x8d\x5b\xd2\xe4\xc9\xe8\x35\x70\x15\x48\xd8\x48\x47\x0a\xdc\x74\x9f\x14\xa8\x1f\x3a\xec\x91\x8b\x13\x56\xc2\xb5\x07\xd9\x39\x03\xa4\x55\x37\xd6\xe8\x66\x16\x7a\xaa\xf9\xd9\x27\x69\xd1\x95\x42\x70\x99\xb1\x1e\x96\x62\xf1\x15\x0a\xb4\xd6\x58\x57\xe4\xb3\xa7\x1e\x0b\x21\x16\x45\x63\x3a\xa9\x9b\xd2\xd8\xa6\xda\x55\x1a\x7d\x95\x3a\xc4\x9d\x4f\x97\xcc\x35\xe4\xdb\x71\x53\x2a\xd3\x57\x8d\x39\x7f\x20\x5f\xa5\x4f\x67\x9a\xe2\x2f\xd7\x3d\x7a\x4b\xca\x25\x89\x61\x03\x45\x08\xe5\xed\xbb\xeb\xdc\xc9\xad\xf4\x2d\x9c\xc7\x58\x88\x95\x10\x39\x9a\x1b\x7c\x9a\x63\xb0\xe8\x47\xcb\xd1\x48\xd0\xf2\xe7\x8f\x47\x5c\x83\x63\xbb\xd8\xa1\x73\x27\xfe\xc1\x6c\xe7\xf0\x4a\xb1\x1d\xb5\x3a\x90\x59\xae\xf6\xb9\x06\xb1\x98\x34\x21\xb5\x30\xcd\xe5\x46\xf6\x18\xe3\x33\x11\xa2\x88\x42\xf8\xef\x03\xfe\x89\xe0\x16\xec\xa8\x3c\x83\x22\x84\x27\x76\x0b\x67\x1f\x76\xa8\x46\x6f\x2c\x5c\x5c\x42\x19\xe3\xfe\xf7\x83\xf2\x74\xb5\xe7\x8e\x75\x93\x8e\xe5\xc4\x11\xce\xe8\x18\x9b\x0d\x7d\x42\xdf\x9a\xda\x31\xca\xf1\x84\x70\x46\xe5\x15\xfa\xa9\xf8\x25\x06\x77\xe2\x7f\xe9\x12\xfa\x9a\x83\xd5\x89\xc6\x52\xf9\x1d\x3c\x0f\xb9\x7c\x3f\x7d\xaf\x79\x8f\xe0\xed\xb0\x29\x43\xb8\x32\xd9\x00\x57\x7c\xc6\x6f\x23\x3a\x7f\xc7\xe9\xbc\x54\xaf\x60\xf9\x3b\xe7\x06\xa3\x1d\x1e\x83\x6b\xc8\xeb\xb6\x0a\x69\x4f\x2e\x81\x1f\x9d\x0e\xa4\xd3\x50\xa6\x8a\xe4\xff\x9f\xc4\x58\x64\xb1\x8f\xed\x3e\xc7\x76\x82\x7e\x24\xec\x6a\x97\x56\x8b\xd1\x9c\xdb\xac\x79\x3f\xcb\x40\x8c\x17\x90\x85\x90\xff\x63\x99\x8c\xfb\x05\x79\x33\xf7\xb4\x06\x4d\x9d\x48\x53\x65\x2a\x4f\xf7\x1c\x4e\x4f\xd3\xc6\xcc\x1b\x42\x1c\xa1\xdd\xca\xbc\x6f\xc7\xb3\x7d\x65\xa4\x8b\xff\x3a\x8c\x03\x0f\x51\xfc\x0a\x00\x00\xff\xff\xe2\x0f\x6e\x9b\xa9\x04\x00\x00")

func nameServiceHandlersServerServer_handlerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_nameServiceHandlersServerServer_handlerGotemplate,
		"NAME-service/handlers/server/server_handler.gotemplate",
	)
}

func nameServiceHandlersServerServer_handlerGotemplate() (*asset, error) {
	bytes, err := nameServiceHandlersServerServer_handlerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/handlers/server/server_handler.gotemplate", size: 1193, mode: os.FileMode(436), modTime: time.Unix(1477150868, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateClient_handlerMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x92\x4f\x4f\xc2\x30\x14\xc0\xcf\xee\x53\xbc\x03\x31\x60\xa0\xdc\x49\x3c\xa0\x11\xe2\x41\x0f\xea\x17\x28\xdb\x63\x34\xd9\xda\xd9\xbe\x29\xa6\xd9\x77\xf7\xb5\x74\xa2\x40\x0c\x31\xde\xba\xbe\xdf\xfb\xf7\x5b\xbd\x87\x77\x45\x1b\x18\x10\xd6\x4d\x25\x09\xef\xb6\x98\xb7\x64\x2c\xcc\xae\x41\x74\x5d\x96\x79\x6f\xa5\x2e\x11\x06\x2a\x5c\x1d\x71\xe2\x19\xed\x9b\xca\x51\x3c\x20\x6d\x4c\xe1\x38\x65\x3a\x05\xef\x07\x4a\x2c\x91\x1e\x65\x8d\x5d\x07\x8a\x73\xb0\x46\x4d\x0e\x7a\x3c\x5b\xb7\x3a\x3f\xe0\x86\xde\xc7\x61\x94\x2e\x70\x7b\xa2\xd5\x6d\xa5\xb8\xc6\xdc\x96\x2e\x76\x0b\x07\xf8\x9e\xef\xfd\xd2\x84\x13\x88\x05\x17\x27\x65\x74\x40\xc2\x3d\xea\xa2\xeb\x46\x30\xbc\x6a\x56\xe2\x8b\xe2\xd4\x27\x7c\x6d\xd1\xd1\xcb\x47\x83\xfb\x32\x63\x40\x6b\x8d\x1d\x79\xde\x7d\x92\xf4\xd4\xdc\x2f\xec\xff\xb7\xd1\x60\xc2\x5a\x2e\x42\xb5\xe4\xb2\x91\x56\xd6\xd1\x67\x28\x2c\x22\x1e\x99\x08\xa9\x35\x68\x43\x89\x12\xf7\xee\x46\x3a\x0c\x23\x26\x84\xfd\xce\x8b\x02\xf2\xd6\x91\xa9\x61\xd5\x3a\xa5\xd1\x39\xa8\x4c\xa9\x72\x58\xf3\xaf\x53\x9a\xd0\x36\x16\x49\xe9\x32\x28\xde\xd5\x59\x54\xb2\xe4\x46\xbc\x5f\x6a\xc3\x52\xf6\x83\xf5\x1f\x3f\x02\x76\xa7\x27\x0c\x7a\x8e\xb8\xff\x17\x76\xae\xae\x23\x55\x29\xd8\x0f\xbc\x0b\xa7\xd7\x38\x83\xc3\xc0\x6f\x6a\x4e\x8a\x89\x6e\xa8\xb5\x1a\x2e\x93\xa3\x31\x68\x55\x65\x01\x8b\x6f\xad\xc7\xf9\xf4\x19\x00\x00\xff\xff\xc8\xa7\x80\x44\x63\x03\x00\x00")

func nameServicePartial_templateClient_handlerMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateClient_handlerMethods,
		"NAME-service/partial_template/client_handler.methods",
	)
}

func nameServicePartial_templateClient_handlerMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateClient_handlerMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/client_handler.methods", size: 867, mode: os.FileMode(436), modTime: time.Unix(1474335271, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceInterface = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\x31\xce\xc2\x30\x0c\x46\xe7\xbf\xa7\xf0\xd0\xa1\xfd\x55\x72\x00\x24\x26\x86\x4e\x30\x00\x17\x28\xed\x07\x64\x20\x29\x8e\x41\x45\x56\xee\x8e\x11\x48\x08\x31\xd9\xc3\xf3\xf3\x93\xfb\x08\xda\x82\x6f\xbe\x07\xf9\x20\xe0\x43\x67\x9b\x16\xaa\xdc\x85\x23\xa8\xf4\x34\x5f\x90\x7b\x23\x6e\x05\x39\xc5\x21\xe5\x5c\xfc\xa9\x96\xde\xb5\x90\x75\x77\x46\xce\x55\x2f\x13\xf5\xd1\x0c\x93\xb8\xe5\x6b\x36\x66\xa4\xff\x71\xef\x54\xdb\xf8\xc4\xcc\xe6\x36\xb8\x5c\x91\x64\x67\x8f\x3f\xd7\x35\x55\xbf\x5c\x1a\x63\x48\xf8\x06\x1b\x02\x73\xe4\xda\xfa\x66\x84\x30\x58\x48\x2e\x1e\x01\x00\x00\xff\xff\x49\xf1\x29\x36\xc5\x00\x00\x00")

func nameServicePartial_templateServiceInterfaceBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceInterface,
		"NAME-service/partial_template/service.interface",
	)
}

func nameServicePartial_templateServiceInterface() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceInterfaceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.interface", size: 197, mode: os.FileMode(436), modTime: time.Unix(1474335271, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _nameServicePartial_templateServiceMethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x91\xc1\x4e\xf3\x30\x10\x84\xcf\xc9\x53\xcc\x21\xfa\xd5\xfe\x6a\xdd\x7b\xa5\x9e\x10\xf4\x04\x42\xc0\x1d\x05\x77\x69\x5d\x12\x3b\xd8\x1b\x08\xb2\xf2\xee\x38\x71\xd2\x12\xe0\xc0\xc9\x2b\xf9\x9b\xd9\xdd\x59\xef\xf1\xae\xf8\x80\x8c\xa9\xac\x8a\x9c\xe9\xb2\x21\x59\xb3\xb1\x58\x6f\x20\xda\x36\x3d\x01\xb7\xb9\x7c\xc9\xf7\x74\x93\x97\xd4\xfd\xfd\x10\x88\x2f\x40\xd0\x05\xa1\xcd\xf5\x9e\x90\xa9\xdf\xf1\x7b\xb2\x6f\x4a\x92\xb8\x26\x3e\x98\x9d\x0b\x92\xd5\x0a\xde\x8b\x2d\x71\xb4\x80\x0a\x0a\x2a\x49\xb3\xc3\x08\xa7\xcf\xb5\x96\x98\xb9\x00\x66\x93\x7e\x03\x30\x9f\x38\xcc\x24\x37\x90\x46\x33\x35\x2c\x2e\xe2\xbb\x80\xd2\xf8\x5f\x3d\x09\xef\xb7\xa6\x5f\x46\xdc\xd1\x6b\x4d\x8e\x1f\x3e\x2a\x3a\x6b\xe7\x98\x7d\xa7\x5c\x65\xb4\xa3\x29\xb6\x00\x59\x6b\xec\xdc\xa7\xc9\x23\x36\x08\x0d\x63\xa1\x74\x9a\xd8\x41\xd1\xed\xff\x07\xab\x60\x91\x9c\x42\x3b\xf6\xa1\xa9\x29\x7a\xa5\xa8\xd8\x39\x2c\x43\x56\x49\xd2\xa7\x35\x38\x66\xc7\xd1\x06\x6d\xbb\x46\x6f\x44\x7a\x17\xc9\xb6\x9b\x84\x6b\xab\xf1\x6f\x9c\x68\x01\xad\x8a\xb4\x3b\x6e\xa0\xe2\xb1\x96\x88\xe5\xb9\xfa\x0c\x00\x00\xff\xff\x01\x01\x6d\x90\x1b\x02\x00\x00")

func nameServicePartial_templateServiceMethodsBytes() ([]byte, error) {
	return bindataRead(
		_nameServicePartial_templateServiceMethods,
		"NAME-service/partial_template/service.methods",
	)
}

func nameServicePartial_templateServiceMethods() (*asset, error) {
	bytes, err := nameServicePartial_templateServiceMethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "NAME-service/partial_template/service.methods", size: 539, mode: os.FileMode(436), modTime: time.Unix(1474335271, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"NAME-service/NAME-client/client_main.gotemplate": nameServiceNameClientClient_mainGotemplate,
	"NAME-service/NAME-server/server_main.gotemplate": nameServiceNameServerServer_mainGotemplate,
	"NAME-service/generated/client/grpc/client.gotemplate": nameServiceGeneratedClientGrpcClientGotemplate,
	"NAME-service/generated/client/http/client.gotemplate": nameServiceGeneratedClientHttpClientGotemplate,
	"NAME-service/generated/endpoints.gotemplate": nameServiceGeneratedEndpointsGotemplate,
	"NAME-service/generated/transport_grpc.gotemplate": nameServiceGeneratedTransport_grpcGotemplate,
	"NAME-service/generated/transport_http.gotemplate": nameServiceGeneratedTransport_httpGotemplate,
	"NAME-service/handlers/client/client_handler.gotemplate": nameServiceHandlersClientClient_handlerGotemplate,
	"NAME-service/handlers/server/server_handler.gotemplate": nameServiceHandlersServerServer_handlerGotemplate,
	"NAME-service/partial_template/client_handler.methods": nameServicePartial_templateClient_handlerMethods,
	"NAME-service/partial_template/service.interface": nameServicePartial_templateServiceInterface,
	"NAME-service/partial_template/service.methods": nameServicePartial_templateServiceMethods,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"NAME-service": &bintree{nil, map[string]*bintree{
		"NAME-client": &bintree{nil, map[string]*bintree{
			"client_main.gotemplate": &bintree{nameServiceNameClientClient_mainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"server_main.gotemplate": &bintree{nameServiceNameServerServer_mainGotemplate, map[string]*bintree{}},
		}},
		"generated": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"grpc": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientGrpcClientGotemplate, map[string]*bintree{}},
				}},
				"http": &bintree{nil, map[string]*bintree{
					"client.gotemplate": &bintree{nameServiceGeneratedClientHttpClientGotemplate, map[string]*bintree{}},
				}},
			}},
			"endpoints.gotemplate": &bintree{nameServiceGeneratedEndpointsGotemplate, map[string]*bintree{}},
			"transport_grpc.gotemplate": &bintree{nameServiceGeneratedTransport_grpcGotemplate, map[string]*bintree{}},
			"transport_http.gotemplate": &bintree{nameServiceGeneratedTransport_httpGotemplate, map[string]*bintree{}},
		}},
		"handlers": &bintree{nil, map[string]*bintree{
			"client": &bintree{nil, map[string]*bintree{
				"client_handler.gotemplate": &bintree{nameServiceHandlersClientClient_handlerGotemplate, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"server_handler.gotemplate": &bintree{nameServiceHandlersServerServer_handlerGotemplate, map[string]*bintree{}},
			}},
		}},
		"partial_template": &bintree{nil, map[string]*bintree{
			"client_handler.methods": &bintree{nameServicePartial_templateClient_handlerMethods, map[string]*bintree{}},
			"service.interface": &bintree{nameServicePartial_templateServiceInterface, map[string]*bintree{}},
			"service.methods": &bintree{nameServicePartial_templateServiceMethods, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

