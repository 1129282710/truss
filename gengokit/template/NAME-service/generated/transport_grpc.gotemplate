package svc

// This file provides server-side bindings for the gRPC transport.
// It utilizes the transport/grpc.Server.

import (
	"golang.org/x/net/context"

	grpctransport "github.com/go-kit/kit/transport/grpc"

	// This Service
	pb "{{.PBImportPath -}}"
)


// MakeGRPCServer makes a set of endpoints available as a gRPC {{GoName .Service.GetName}}Server.
func MakeGRPCServer(ctx context.Context, endpoints Endpoints) pb.{{GoName .Service.GetName}}Server {
	//options := []grpctransport.ServerOption{
		// grpctransport.ServiceBefore()
	//}
	return &grpcServer{
	// {{ ToLower .Service.GetName }}
	{{range $i := .Service.Methods}}
		{{ToLower $i.GetName}}: grpctransport.NewServer(
			ctx,
			endpoints.{{$i.GetName}}Endpoint,
			DecodeGRPC{{$i.GetName}}Request,
			EncodeGRPC{{$i.GetName}}Response,
			//options...,
		),
	{{- end}}
	}
}

// grpcServer implements the {{GoName .Service.GetName}}Server interface
type grpcServer struct {
{{range $i := .Service.Methods}}
	{{ToLower $i.GetName}}   grpctransport.Handler
{{- end}}
}

// Methods for grpcServer to implement {{GoName .Service.GetName}}Server interface
{{range $i := .Service.Methods}}
func (s *grpcServer) {{GoName $i.GetName}}(ctx context.Context, req *pb.{{GoName $i.RequestType.GetName}}) (*pb.{{GoName $i.ResponseType.GetName}}, error) {
	_, rep, err := s.{{ToLower $i.GetName}}.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return rep.(*pb.{{GoName $i.ResponseType.GetName}}), nil
}
{{end}}

// Server Decode
{{range $i := .Service.Methods}}
// DecodeGRPC{{$i.GetName}}Request is a transport/grpc.DecodeRequestFunc that converts a
// gRPC {{ToLower $i.GetName}} request to a user-domain {{ToLower $i.GetName}} request. Primarily useful in a server.
func DecodeGRPC{{$i.GetName}}Request(_ context.Context, grpcReq interface{}) (interface{}, error) {
	req := grpcReq.(*pb.{{GoName $i.RequestType.GetName}})
	return req, nil
}
{{end}}


// Client Decode
{{range $i := .Service.Methods}}
// DecodeGRPC{{$i.GetName}}Response is a transport/grpc.DecodeResponseFunc that converts a
// gRPC {{ToLower $i.GetName}} reply to a user-domain {{ToLower $i.GetName}} response. Primarily useful in a client.
func DecodeGRPC{{$i.GetName}}Response(_ context.Context, grpcReply interface{}) (interface{}, error) {
	reply := grpcReply.(*pb.{{GoName $i.ResponseType.GetName}})
	return reply, nil
}
{{end}}

// Server Encode
{{range $i := .Service.Methods}}
// EncodeGRPC{{$i.GetName}}Response is a transport/grpc.EncodeResponseFunc that converts a
// user-domain {{ToLower $i.GetName}} response to a gRPC {{ToLower $i.GetName}} reply. Primarily useful in a server.
func EncodeGRPC{{$i.GetName}}Response(_ context.Context, response interface{}) (interface{}, error) {
	resp := response.(*pb.{{GoName $i.ResponseType.GetName}})
	return resp, nil
}
{{end}}


// Client Encode
{{range $i := .Service.Methods}}
// EncodeGRPC{{$i.GetName}}Request is a transport/grpc.EncodeRequestFunc that converts a
// user-domain {{ToLower $i.GetName}} request to a gRPC {{ToLower $i.GetName}} request. Primarily useful in a client.
func EncodeGRPC{{$i.GetName}}Request(_ context.Context, request interface{}) (interface{}, error) {
	req := request.(*pb.{{GoName $i.RequestType.GetName}})
	return req, nil
}
{{end}}

