syntax = "proto3";

package transport;

import "github.com/TuneLab/go-truss/deftree/googlethirdparty/annotations.proto";

service TransportPermutations {
  rpc GetWithQuery (GetWithQueryRequest) returns (GetWithQueryResponse) {
    option (google.api.http) = {
      get: "/getwithquery"
    };
  }
  rpc GetWithRepeatedQuery (GetWithRepeatedQueryRequest) returns (GetWithRepeatedQueryResponse) {
    option (google.api.http) = {
      get: "/getwithrepeatedquery"
    };
  }
  rpc PostWithNestedMessageBody (PostWithNestedMessageBodyRequest) returns (PostWithNestedMessageBodyResponse) {
    option (google.api.http) = {
      post: "/postwithnestedmessagebody"
      body: "*"
    };
  }
  rpc CtxToCtx (MetaRequest) returns (MetaResponse){
    option (google.api.http) = {
      post: "/ctxtoctx"
      body: "*"
    };
  }
  rpc GetWithCapsPath(GetWithQueryRequest) returns (GetWithQueryResponse) {
    option (google.api.http) = {
      get: "/get/With/CapsPath"
    };
  }
  rpc GetWithPathParams(GetWithQueryRequest) returns (GetWithQueryResponse) {
    option (google.api.http) = {
      get: "/path/{A}/{B}"
    };
  }
  rpc ErrorRPC (Empty) returns (Empty) {
    option (google.api.http) = {
      get: "/error"
    };
  }
}

message Empty {}

message GetWithQueryRequest {
  int64 A = 1;
  int64 B = 2;
}

message GetWithQueryResponse {
  int64 V = 1;
}

message GetWithRepeatedQueryRequest {
  repeated int64 A = 1;
}

message GetWithRepeatedQueryResponse {
  int64 V = 1;
}

message PostWithNestedMessageBodyRequest {
  NestedMessage NM = 1;
}

message NestedMessage {
  int64 A = 1;
  int64 B = 2;
}

message PostWithNestedMessageBodyResponse {
  int64 V = 1;
}

message MetaRequest{
  string Key = 1;
}

message MetaResponse {
  string V = 1;
}
